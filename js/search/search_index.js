var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.708,1,1.918]],["body/controllers/AppController.html",[0,2.624,1,2.948,2,2.071,3,0.598,4,0.598,5,0.46,6,3.074,7,0.753,8,2.948,9,4.496,10,1.376,11,0.038,12,1.132,13,3.725,14,2.326,15,1.743,16,0.758,17,1.132,18,2.585,19,3.074,20,0.673,21,0.17,22,3.074,23,1.858,24,2.071,25,3.725,26,0.029,27,0.029]],["title/modules/AppModule.html",[28,0.765,29,1.918]],["body/modules/AppModule.html",[1,2.829,2,2.193,3,0.457,4,0.457,5,0.351,11,0.038,16,0.876,17,0.864,18,2.654,19,2.347,20,0.514,21,0.13,26,0.024,27,0.024,28,1.129,29,3.689,30,1.158,31,1.419,32,2.02,33,2.02,34,1.581,35,3.218,36,2.02,37,2.347,38,2.347,39,2.347,40,2.957,41,2.957,42,2.957,43,2.957,44,2.803,45,2.02,46,1.776,47,2.843,48,2.193,49,2.843,50,2.843,51,2.843,52,2.843,53,2.843]],["title/injectables/AppService.html",[18,1.532,54,1.382]],["body/injectables/AppService.html",[3,0.631,4,0.631,5,0.486,7,0.794,8,3.049,9,4.584,11,0.037,12,1.195,14,2.455,15,1.803,16,0.631,17,1.195,18,2.436,20,0.71,21,0.179,24,2.186,26,0.03,27,0.03,54,2.197,55,2.455,56,3.245,57,3.931,58,3.931,59,3.931]],["title/modules/AuthModule.html",[28,0.765,40,1.708]],["body/modules/AuthModule.html",[3,0.698,4,0.698,5,0.537,11,0.036,16,0.698,17,1.322,20,0.785,21,0.198,26,0.032,27,0.032,28,1.294,30,1.77,40,2.886,60,4.346]],["title/modules/ConfigurationModule.html",[28,0.765,41,1.708]],["body/modules/ConfigurationModule.html",[3,0.548,4,0.548,5,0.422,11,0.038,16,0.847,17,1.038,26,0.027,27,0.027,28,1.112,30,1.391,41,1.899,48,2.482,61,3.415,62,3.415,63,4.463,64,2.819,65,3.415,66,2.819,67,2.426,68,3.415,69,2.819,70,3.415,71,3.415,72,3.171,73,2.819,74,3.415,75,3.415,76,3.415,77,3.415,78,3.415,79,3.171,80,3.415,81,3.415,82,3.415,83,2.426,84,3.415,85,3.415,86,3.415,87,3.415,88,3.415,89,3.415,90,3.415]],["title/classes/CreateUserDto.html",[21,0.14,91,2.182]],["body/classes/CreateUserDto.html",[3,0.385,4,0.385,5,0.296,7,0.484,10,1.779,11,0.037,12,1.464,15,1.779,16,0.561,20,0.433,21,0.159,23,2.786,26,0.022,27,0.022,91,2.483,92,1.079,93,2.884,94,1.704,95,2.884,96,2.886,97,1.291,98,3.422,99,1.943,100,2.183,101,2.183,102,2.293,103,1.327,104,2.398,105,4.53,106,3.494,107,3.779,108,3.494,109,3.494,110,3.494,111,2.929,112,3.494,113,3.494,114,3.494,115,3.494,116,3.494,117,1.943,118,3.494,119,3.494,120,2.483,121,3.494,122,2.398,123,1.704,124,3.739,125,1.979,126,2.483,127,2.483,128,1.979,129,1.979,130,1.943,131,1.704,132,1.498,133,1.333,134,1.171,135,1.498,136,1.979,137,1.979,138,3.494,139,1.333,140,2.398]],["title/modules/DatabaseModule.html",[28,0.765,42,1.708]],["body/modules/DatabaseModule.html",[3,0.648,4,0.648,5,0.498,11,0.037,16,0.862,17,1.226,20,0.729,21,0.184,26,0.031,27,0.031,28,1.236,30,1.642,42,2.758,48,2.242,141,4.032,142,3.328,143,2.865,144,2.865,145,4.032,146,4.032,147,4.032]],["title/classes/EnvironmentVariables.html",[21,0.14,148,2.182]],["body/classes/EnvironmentVariables.html",[3,0.383,4,0.383,5,0.295,7,0.482,10,1.961,11,0.038,12,1.614,15,1.853,16,0.66,20,0.629,21,0.187,24,1.325,26,0.021,27,0.021,79,2.472,92,1.073,97,1.285,103,1.463,117,2.512,132,1.489,139,1.325,148,2.472,149,1.693,150,3.479,151,2.872,152,3.479,153,3.479,154,3.479,155,3.479,156,3.479,157,3.479,158,3.68,159,2.383,160,2.383,161,3.483,162,2.383,163,2.383,164,2.383,165,2.383,166,2.383,167,2.383,168,1.967,169,2.383,170,1.693,171,2.383,172,2.383,173,2.383,174,2.383,175,2.383,176,2.383,177,2.383,178,2.383,179,2.383,180,1.967,181,2.383,182,3.479,183,2.383,184,2.383,185,2.383,186,2.383,187,2.383,188,2.383,189,1.967,190,2.383,191,1.189,192,2.383,193,1.967,194,1.967,195,2.383]],["title/classes/IdDto.html",[21,0.14,196,1.918]],["body/classes/IdDto.html",[3,0.595,4,0.595,5,0.458,7,0.749,10,1.369,11,0.037,12,1.127,16,0.756,20,0.67,21,0.236,23,2.579,26,0.029,27,0.029,92,1.668,97,1.738,103,1.424,117,2.874,139,2.061,170,2.634,196,2.939,197,3.884,198,3.06,199,2.874,200,3.707,201,3.707,202,4.705]],["title/injectables/ReadOnlyUserService.html",[54,1.382,203,1.708]],["body/injectables/ReadOnlyUserService.html",[3,0.694,4,0.694,5,0.534,11,0.036,16,0.694,17,1.314,20,0.781,21,0.197,26,0.032,27,0.032,54,2.328,55,2.7,203,2.876,204,3.568,205,3.568]],["title/classes/RegistryDate.html",[21,0.14,206,1.918]],["body/classes/RegistryDate.html",[3,0.592,4,0.592,5,0.456,7,0.745,10,1.732,11,0.037,12,1.426,16,0.592,20,0.667,21,0.168,26,0.029,27,0.029,92,1.661,97,1.732,103,1.293,206,2.93,207,4.257,208,3.045,209,5.158,210,5.158,211,4.48,212,5.158,213,3.689,214,5.158,215,3.689,216,2.304]],["title/classes/UpdateUserDto.html",[21,0.14,217,1.708]],["body/classes/UpdateUserDto.html",[3,0.498,4,0.498,5,0.384,7,0.627,10,1.874,11,0.036,12,1.543,15,1.751,16,0.498,20,0.561,21,0.142,23,2.832,26,0.026,27,0.026,92,1.397,94,2.205,95,3.457,96,3.104,97,1.547,99,2.329,100,2.616,101,2.616,102,2.636,103,1.398,111,2.205,123,2.205,124,4.189,125,2.561,126,2.975,127,2.975,128,2.561,129,2.561,130,2.329,131,2.205,132,1.938,133,1.725,134,1.403,135,1.938,136,2.561,137,2.561,217,2.329,218,2.561]],["title/entities/User.html",[134,1.029,219,1.918]],["body/entities/User.html",[3,0.278,4,0.278,5,0.214,7,0.35,10,1.713,11,0.038,12,1.41,15,1.416,16,0.616,20,0.313,21,0.079,26,0.017,27,0.017,72,1.231,79,2.401,97,1.008,98,1.94,99,1.518,100,1.706,101,1.706,102,1.879,103,1.325,117,0.964,120,2.401,130,2.32,134,1.133,191,1.686,199,1.518,206,1.706,211,4.083,216,1.082,219,1.706,220,1.231,221,3.415,222,1.43,223,4.432,224,1.733,225,1.733,226,4.946,227,1.733,228,3.379,229,1.733,230,1.733,231,1.733,232,1.733,233,1.43,234,1.43,235,1.733,236,1.733,237,3.166,238,2.254,239,1.733,240,1.733,241,1.733,242,1.733,243,3.379,244,3.379,245,3.379,246,1.231,247,1.733,248,1.43,249,1.43,250,1.733,251,1.43,252,1.733,253,1.733,254,1.733,255,2.79,256,3.379,257,3.379,258,2.79,259,3.659,260,4.946,261,2.79,262,4.946,263,3.379,264,2.79,265,3.379,266,2.79,267,3.379,268,3.379,269,3.379,270,2.111,271,3.379,272,1.43,273,2.79,274,3.379,275,3.379,276,3.379,277,2.79,278,1.733,279,1.733,280,1.733,281,1.43,282,1.733]],["title/classes/UserBaseDto.html",[21,0.14,96,1.708]],["body/classes/UserBaseDto.html",[3,0.436,4,0.436,5,0.336,7,0.548,10,1.771,11,0.037,12,1.458,15,1.632,16,0.71,20,0.491,21,0.174,23,2.883,26,0.024,27,0.024,92,1.222,96,2.124,97,1.41,99,2.124,100,2.386,101,2.386,102,2.914,103,1.321,111,2.713,123,3.139,126,2.713,127,2.713,130,2.81,131,2.713,132,2.386,133,2.124,134,1.28,135,2.386,139,1.509,161,2.76,168,2.241,237,2.241,246,1.929,248,2.241,249,2.241,251,2.241,283,4.171,284,2.241,285,2.715,286,2.715,287,2.715,288,2.715,289,2.715,290,2.715,291,2.241,292,3.819,293,2.715,294,2.715]],["title/modules/UsersModule.html",[28,0.765,43,1.708]],["body/modules/UsersModule.html",[2,1.768,3,0.51,4,0.51,5,0.393,11,0.038,16,0.883,17,0.966,20,0.574,21,0.145,26,0.026,27,0.026,28,1.196,30,1.295,31,1.586,32,2.258,33,2.258,34,1.768,35,3.409,36,2.258,43,3.174,44,3.024,45,2.258,46,1.986,48,1.768,134,1.065,142,2.624,143,2.258,203,3.058,219,1.986,291,2.624,295,2.624,296,2.624,297,2.744,298,3.179,299,2.659,300,3.179,301,3.179,302,3.179,303,3.179,304,3.179,305,3.179]],["title/controllers/UsersWriteController.html",[0,1.708,299,1.918]],["body/controllers/UsersWriteController.html",[0,1.509,2,1.509,3,0.436,4,0.436,5,0.336,7,0.548,8,2.386,10,1.41,11,0.038,12,1.161,14,2.386,16,0.811,17,0.825,20,0.491,21,0.124,22,2.241,23,1.355,24,2.124,26,0.024,27,0.024,103,1.052,196,3.363,199,2.457,217,2.81,233,2.241,270,2.386,297,1.355,299,2.386,306,2.241,307,2.241,308,3.819,309,3.819,310,2.715,311,2.715,312,2.715,313,2.713,314,2.713,315,2.715,316,2.715,317,2.715,318,3.152,319,2.241,320,2.715,321,2.241,322,2.715,323,2.715,324,2.715,325,2.241,326,2.241,327,3.819,328,4.418,329,4.418,330,4.418,331,2.241,332,2.715,333,2.715,334,2.715,335,2.715,336,2.715,337,2.715,338,2.715,339,2.715,340,2.715,341,2.715]],["title/injectables/WriteUserService.html",[54,1.382,297,1.532]],["body/injectables/WriteUserService.html",[3,0.462,4,0.462,5,0.355,7,0.581,8,2.483,11,0.037,12,1.385,14,2.846,15,1.683,16,0.638,17,0.874,20,0.519,21,0.131,24,2.533,26,0.024,27,0.024,54,1.789,55,1.795,103,1.255,117,2.733,134,1.527,191,1.434,199,2.21,217,2.967,270,2.846,277,3.761,281,3.281,297,1.983,313,3.237,314,3.237,318,4.057,325,2.373,326,2.373,342,2.373,343,3.975,344,3.281,345,2.874,346,2.874,347,2.874,348,2.874,349,4.057,350,2.874,351,2.874,352,2.874,353,2.874,354,2.373,355,2.874,356,2.373,357,2.874,358,2.874,359,2.874]],["title/coverage.html",[360,2.955]],["body/coverage.html",[0,1.965,1,1.521,5,0.301,6,2.01,11,0.037,18,1.215,21,0.231,26,0.022,27,0.022,28,0.607,34,1.354,54,1.872,56,2.01,91,1.73,93,2.01,94,2.511,96,1.354,103,0.671,134,0.816,144,1.73,148,1.73,149,2.511,158,1.73,161,1.521,180,3.767,189,4.96,191,1.215,194,4.304,196,1.521,197,2.01,198,2.01,203,1.354,204,2.01,205,2.01,206,1.521,207,2.01,208,2.01,217,1.354,218,2.01,219,1.521,221,1.73,222,2.01,283,2.01,284,2.01,297,1.215,299,1.521,306,2.01,342,2.01,349,2.01,360,1.73,361,1.521,362,2.435,363,4.159,364,2.917,365,5.716,366,3.534,367,2.01,368,2.01,369,2.01,370,2.435,371,2.01,372,2.01,373,2.01,374,2.01,375,3.433,376,2.01,377,2.01,378,2.01,379,2.01,380,2.01,381,2.511,382,2.435,383,3.534,384,2.435,385,2.435,386,2.435]],["title/dependencies.html",[31,1.839,387,2.13]],["body/dependencies.html",[11,0.038,17,0.894,21,0.184,26,0.025,27,0.025,31,1.467,48,1.634,64,2.426,66,2.426,67,2.868,69,2.426,73,2.426,83,2.088,139,1.634,143,2.088,170,2.088,216,1.836,331,2.426,388,2.939,389,4.61,390,2.939,391,2.939,392,3.332,393,2.939,394,2.939,395,2.939,396,2.939,397,2.426,398,2.939,399,2.939,400,5.373,401,4.962,402,2.939,403,4.036,404,2.939,405,2.939,406,2.939,407,2.939,408,2.939,409,2.939,410,2.426,411,2.939,412,2.939,413,2.939,414,4.036,415,2.426,416,2.939,417,2.939,418,2.939,419,2.939,420,2.939,421,2.426,422,2.939,423,2.939,424,2.939,425,2.939,426,2.939,427,2.939,428,2.939,429,2.939,430,2.939,431,2.939,432,2.939,433,2.939,434,2.939]],["title/miscellaneous/enumerations.html",[435,1.288,436,3.041]],["body/miscellaneous/enumerations.html",[7,0.854,11,0.036,26,0.031,27,0.031,130,2.839,133,2.839,134,1.711,135,3.189,221,3.005,435,2.11,436,3.491,437,4.229,438,5.105,439,4.526]],["title/miscellaneous/functions.html",[435,1.288,440,3.041]],["body/miscellaneous/functions.html",[7,0.745,11,0.034,26,0.029,27,0.029,34,2.868,103,1.421,149,2.621,158,3.333,161,2.93,270,3.222,313,3.664,314,3.664,364,3.045,371,3.872,381,2.621,435,1.841,440,3.045,441,3.045,442,3.689,443,4.691,444,3.689,445,4.691,446,3.689,447,3.689,448,5.428,449,4.691,450,4.691,451,3.689]],["title/index.html",[7,0.521,452,1.834,453,1.834]],["body/index.html",[5,0.388,11,0.025,15,0.381,26,0.014,27,0.011,31,0.514,67,2.44,99,1.747,102,0.573,107,0.732,120,2.763,133,0.988,134,1.151,151,0.851,191,1.714,193,1.467,199,0.573,216,1.11,246,0.732,255,0.851,258,0.851,261,1.467,264,1.467,266,2.593,272,0.851,273,2.299,307,3.038,319,0.851,321,1.933,344,2.593,354,3.038,356,2.299,360,2.44,361,1.463,397,0.851,410,0.851,415,2.299,421,0.851,452,0.732,453,0.732,454,3.787,455,2.835,456,3.142,457,2.342,458,2.785,459,1.262,460,1.031,461,1.031,462,1.031,463,1.777,464,4.223,465,1.777,466,3.68,467,2.342,468,2.342,469,1.031,470,4.48,471,1.777,472,1.031,473,1.031,474,1.031,475,1.031,476,3.142,477,3.142,478,2.785,479,3.68,480,1.777,481,2.342,482,1.031,483,2.785,484,1.777,485,1.031,486,1.031,487,2.785,488,2.342,489,2.342,490,1.031,491,1.031,492,1.031,493,1.777,494,1.031,495,1.031,496,1.031,497,1.031,498,1.031,499,1.031,500,1.031,501,1.777,502,1.031,503,3.142,504,3.888,505,1.031,506,2.299,507,3.21,508,1.031,509,1.777,510,1.031,511,1.031,512,1.467,513,1.031,514,1.031,515,1.031,516,1.031,517,1.031,518,1.777,519,1.031,520,2.785,521,1.031,522,0.851,523,0.851,524,1.777,525,1.031,526,1.777,527,1.031,528,1.031,529,1.031,530,1.031,531,1.031,532,1.031,533,1.933,534,2.342,535,1.031,536,1.031,537,1.031,538,1.031,539,1.031,540,1.777,541,1.031,542,2.342,543,1.777,544,2.342,545,1.031,546,1.777,547,1.031,548,3.142,549,3.68,550,2.342,551,1.777,552,1.031,553,1.031,554,1.777,555,1.777,556,1.031,557,3.142,558,2.342,559,1.777,560,1.031,561,2.342,562,1.777,563,1.933,564,1.031,565,1.031,566,1.031,567,1.031,568,1.031,569,1.777,570,2.785,571,1.777,572,1.777,573,1.777,574,0.851,575,1.777,576,1.031,577,1.031,578,1.777,579,1.777,580,1.031,581,1.031,582,1.933,583,1.031,584,1.031,585,1.031,586,1.031,587,1.777,588,1.031,589,1.031,590,1.031,591,1.031,592,1.031,593,1.031,594,1.031,595,1.031,596,1.031,597,1.031,598,1.031,599,1.031,600,1.031,601,1.031,602,0.851,603,1.031,604,1.031,605,1.031,606,1.031,607,1.777,608,1.031,609,1.031,610,1.031,611,1.031,612,1.031,613,1.031,614,3.888,615,1.031,616,1.031,617,1.777,618,1.777,619,2.785,620,1.031,621,1.031,622,1.031,623,1.031,624,1.031,625,1.031,626,2.342,627,1.262,628,1.777,629,1.031,630,1.031,631,2.342,632,1.777,633,1.031,634,1.031,635,1.031,636,1.031,637,1.031,638,1.031,639,1.031,640,1.031,641,1.031,642,1.031,643,1.031,644,1.031,645,1.031,646,1.031,647,1.031,648,1.031,649,1.031,650,1.031,651,1.777,652,1.031,653,1.777,654,1.031,655,1.031,656,1.031,657,1.031,658,1.031,659,1.031,660,1.031,661,1.031,662,1.031,663,1.031,664,1.031,665,2.785,666,1.031,667,1.031,668,1.031,669,1.031,670,1.031,671,1.031,672,1.777,673,1.031,674,3.142,675,1.031,676,1.031,677,1.777,678,1.031,679,1.031,680,1.777,681,1.031,682,1.031,683,1.031,684,1.031,685,1.777,686,1.031,687,1.777,688,1.031,689,1.031,690,1.031,691,1.031,692,1.031,693,1.031,694,1.031,695,1.031,696,1.031,697,1.031,698,2.785,699,1.031,700,1.031,701,1.777,702,1.777,703,1.031,704,1.031,705,1.031,706,1.463,707,1.031,708,1.031,709,0.732,710,1.777,711,1.031,712,1.031,713,1.031,714,1.031]],["title/license.html",[452,1.834,453,1.834,706,1.612]],["body/license.html",[11,0.025,26,0.025,27,0.025,46,1.9,361,1.9,392,2.511,506,2.511,522,2.511,523,3.411,563,2.511,602,2.511,706,1.9,709,2.162,715,4.693,716,3.042,717,3.042,718,2.511,719,2.511,720,4.132,721,3.042,722,3.042,723,3.042,724,3.042,725,3.042,726,4.132,727,5.728,728,3.042,729,3.042,730,3.042,731,4.693,732,3.042,733,4.132,734,3.042,735,3.042,736,3.042,737,3.042,738,3.042,739,3.042,740,3.042,741,3.042,742,3.042,743,4.132,744,3.042,745,3.042,746,3.042,747,3.042,748,3.042,749,3.042,750,4.132,751,4.132,752,3.042,753,3.042,754,3.042,755,3.042,756,3.042,757,3.042,758,3.042,759,3.042,760,3.042,761,3.042,762,3.042,763,3.042,764,3.042,765,3.042,766,3.042,767,3.042,768,3.042,769,3.042,770,3.042,771,3.042,772,3.042,773,3.042,774,3.042,775,3.042,776,3.042,777,3.042,778,3.042]],["title/modules.html",[30,1.694]],["body/modules.html",[11,0.031,26,0.031,27,0.031,29,2.613,30,1.704,40,2.326,41,2.326,42,2.326,43,2.326,533,4.186,779,5.072,780,5.072,781,5.812,782,5.458,783,5.458]],["title/overview.html",[459,2.955]],["body/overview.html",[2,1.85,11,0.036,18,2.45,26,0.027,27,0.027,28,0.829,29,3.731,30,1.355,31,1.66,32,2.364,33,2.364,34,1.85,35,2.364,36,2.364,37,2.747,38,2.747,39,2.747,40,2.73,41,2.73,42,2.73,43,3.159,44,3.117,45,2.364,46,2.079,55,2.079,83,2.364,92,1.498,107,2.364,203,2.73,220,2.364,295,2.747,296,2.747,297,2.45,459,2.364,512,2.747,574,2.747,784,3.328]],["title/properties.html",[97,1.361,387,2.13]],["body/properties.html",[11,0.037,26,0.032,27,0.032,97,1.632,706,2.761,709,3.141,718,3.649,719,3.649,785,4.42,786,4.42,787,4.42,788,4.42]],["title/miscellaneous/variables.html",[435,1.288,627,2.618]],["body/miscellaneous/variables.html",[7,0.579,11,0.037,26,0.024,27,0.024,28,0.988,72,3.487,98,2.035,103,1.352,144,2.817,191,1.429,220,2.817,234,2.364,238,4.4,259,3.273,361,1.789,367,2.364,368,3.273,369,3.273,372,2.364,373,3.273,374,3.273,375,2.364,376,3.273,377,3.273,378,3.273,379,2.364,380,3.273,381,2.035,435,1.429,439,4.4,441,2.364,454,2.364,455,2.364,507,3.273,582,2.364,627,2.035,789,2.864,790,4.547,791,2.864,792,2.864,793,2.864,794,2.864,795,2.864,796,2.864,797,2.864,798,2.864,799,2.864,800,2.864,801,2.864,802,2.864,803,3.964,804,2.864,805,2.864,806,2.864,807,2.864,808,2.864,809,2.864,810,2.864,811,2.864,812,2.864,813,2.864,814,2.864,815,2.864,816,2.864,817,2.864,818,2.864]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":189,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["0.0.1",{"_index":786,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":107,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"overview.html":{}}}],["10,000",{"_index":508,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":86,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["16.0.0",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":574,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":717,"title":{},"body":{"license.html":{}}}],["25)@isnotemptystring",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["3",{"_index":512,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0.0",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["37.4.2",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":83,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["5.0.1",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["5.1.7",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["5.3.10",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["5.94.0",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":784,"title":{},"body":{"overview.html":{}}}],["60",{"_index":82,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["7.4.2",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9.0.2",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":749,"title":{},"body":{"license.html":{}}}],["access",{"_index":489,"title":{},"body":{"index.html":{}}}],["action",{"_index":773,"title":{},"body":{"license.html":{}}}],["actions",{"_index":555,"title":{},"body":{"index.html":{}}}],["add",{"_index":631,"title":{},"body":{"index.html":{}}}],["addserver(swaggerserver",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":133,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["admin/project",{"_index":674,"title":{},"body":{"index.html":{}}}],["admins",{"_index":492,"title":{},"body":{"index.html":{}}}],["afterinsert",{"_index":243,"title":{},"body":{"entities/User.html":{}}}],["afterremove",{"_index":244,"title":{},"body":{"entities/User.html":{}}}],["afterupdate",{"_index":245,"title":{},"body":{"entities/User.html":{}}}],["allows",{"_index":462,"title":{},"body":{"index.html":{}}}],["analysis",{"_index":590,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":686,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":576,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":741,"title":{},"body":{"license.html":{}}}],["api",{"_index":456,"title":{},"body":{"index.html":{}}}],["api.git",{"_index":621,"title":{},"body":{"index.html":{}}}],["api2",{"_index":623,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":327,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apioperation",{"_index":328,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apiresponse",{"_index":329,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apitags",{"_index":330,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["app",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":68,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["app_port",{"_index":150,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["app_port:number",{"_index":177,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":585,"title":{},"body":{"index.html":{}}}],["applications",{"_index":530,"title":{},"body":{"index.html":{}}}],["applied",{"_index":609,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":502,"title":{},"body":{"index.html":{}}}],["arising",{"_index":777,"title":{},"body":{"license.html":{}}}],["assign",{"_index":496,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":467,"title":{},"body":{"index.html":{}}}],["assignment",{"_index":480,"title":{},"body":{"index.html":{}}}],["associated",{"_index":728,"title":{},"body":{"license.html":{}}}],["async",{"_index":78,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["attachments",{"_index":685,"title":{},"body":{"index.html":{}}}],["auth",{"_index":538,"title":{},"body":{"index.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/login",{"_index":667,"title":{},"body":{"index.html":{}}}],["auth/signup",{"_index":666,"title":{},"body":{"index.html":{}}}],["authenticate",{"_index":668,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":483,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":788,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":766,"title":{},"body":{"license.html":{}}}],["auto",{"_index":661,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":608,"title":{},"body":{"index.html":{}}}],["available",{"_index":783,"title":{},"body":{"modules.html":{}}}],["b",{"_index":700,"title":{},"body":{"index.html":{}}}],["backend",{"_index":457,"title":{},"body":{"index.html":{}}}],["badge",{"_index":601,"title":{},"body":{"index.html":{}}}],["base.dto",{"_index":137,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["base.dto.ts",{"_index":284,"title":{},"body":{"classes/UserBaseDto.html":{},"coverage.html":{}}}],["base.dto.ts:11",{"_index":287,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:13",{"_index":285,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:15",{"_index":288,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:8",{"_index":286,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["based",{"_index":488,"title":{},"body":{"index.html":{}}}],["better",{"_index":497,"title":{},"body":{"index.html":{}}}],["body",{"_index":318,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["body:any",{"_index":353,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":561,"title":{},"body":{"index.html":{}}}],["browse",{"_index":781,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":779,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":578,"title":{},"body":{"index.html":{}}}],["build",{"_index":582,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":528,"title":{},"body":{"index.html":{}}}],["builds",{"_index":584,"title":{},"body":{"index.html":{}}}],["built",{"_index":461,"title":{},"body":{"index.html":{}}}],["c",{"_index":716,"title":{},"body":{"license.html":{}}}],["cache",{"_index":73,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["cachemodule",{"_index":65,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["cachemodule.registerasync",{"_index":76,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["categorization",{"_index":498,"title":{},"body":{"index.html":{}}}],["cd",{"_index":622,"title":{},"body":{"index.html":{}}}],["change",{"_index":681,"title":{},"body":{"index.html":{}}}],["changes",{"_index":481,"title":{},"body":{"index.html":{}}}],["character",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["charge",{"_index":723,"title":{},"body":{"license.html":{}}}],["checker",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["checkout",{"_index":699,"title":{},"body":{"index.html":{}}}],["checks",{"_index":564,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":543,"title":{},"body":{"index.html":{}}}],["claim",{"_index":769,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":92,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"overview.html":{}}}],["cli",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["clone",{"_index":617,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":295,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":296,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":549,"title":{},"body":{"index.html":{}}}],["codecov",{"_index":573,"title":{},"body":{"index.html":{}}}],["column",{"_index":226,"title":{},"body":{"entities/User.html":{}}}],["column(undefined",{"_index":232,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":236,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":224,"title":{},"body":{"entities/User.html":{}}}],["column({unique:true",{"_index":250,"title":{},"body":{"entities/User.html":{}}}],["commit",{"_index":702,"title":{},"body":{"index.html":{}}}],["common/decorators/validator.decotrator",{"_index":168,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/UserBaseDto.html":{}}}],["common/dto/id",{"_index":323,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["common/embedded/registry",{"_index":242,"title":{},"body":{"entities/User.html":{}}}],["communication",{"_index":539,"title":{},"body":{"index.html":{}}}],["completion",{"_index":690,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":748,"title":{},"body":{"license.html":{}}}],["config.document.ts",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":63,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["configmodule.forroot",{"_index":70,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["configservice.getorthrow('datasource_database",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_host",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_password",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_port",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_username",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice:configservice",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":632,"title":{},"body":{"index.html":{}}}],["configuration/configuration.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration/test",{"_index":145,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configurationmodule",{"_index":41,"title":{"modules/ConfigurationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules.html":{},"overview.html":{}}}],["connection",{"_index":522,"title":{},"body":{"index.html":{},"license.html":{}}}],["consistency",{"_index":567,"title":{},"body":{"index.html":{}}}],["console",{"_index":275,"title":{},"body":{"entities/User.html":{}}}],["console.log('insert",{"_index":280,"title":{},"body":{"entities/User.html":{}}}],["console.log('remove",{"_index":282,"title":{},"body":{"entities/User.html":{}}}],["console.log('update",{"_index":278,"title":{},"body":{"entities/User.html":{}}}],["console.log(typeof",{"_index":337,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["console.log({ttl,max",{"_index":88,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["const",{"_index":79,"title":{},"body":{"modules/ConfigurationModule.html":{},"classes/EnvironmentVariables.html":{},"entities/User.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{}}}],["contact",{"_index":710,"title":{},"body":{"index.html":{}}}],["continuous",{"_index":546,"title":{},"body":{"index.html":{}}}],["contract",{"_index":774,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":693,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":694,"title":{},"body":{"index.html":{}}}],["control",{"_index":490,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["controller('users",{"_index":332,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"overview.html":{}}}],["controllers:[userswritecontroller",{"_index":305,"title":{},"body":{"modules/UsersModule.html":{}}}],["copies",{"_index":743,"title":{},"body":{"license.html":{}}}],["copy",{"_index":726,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":715,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":360,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":354,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["createdat",{"_index":209,"title":{},"body":{"classes/RegistryDate.html":{}}}],["createdatecolumn",{"_index":212,"title":{},"body":{"classes/RegistryDate.html":{}}}],["createuser",{"_index":343,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuser(@body",{"_index":352,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuser(body",{"_index":345,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuserdto",{"_index":91,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["current",{"_index":264,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["damages",{"_index":770,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":687,"title":{},"body":{"index.html":{}}}],["data",{"_index":514,"title":{},"body":{"index.html":{}}}],["database",{"_index":507,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["database_host=localhost",{"_index":633,"title":{},"body":{"index.html":{}}}],["database_name=task_management_db",{"_index":637,"title":{},"body":{"index.html":{}}}],["database_password=your_db_password",{"_index":636,"title":{},"body":{"index.html":{}}}],["database_port=5432",{"_index":634,"title":{},"body":{"index.html":{}}}],["database_url",{"_index":151,"title":{},"body":{"classes/EnvironmentVariables.html":{},"index.html":{}}}],["database_url:number",{"_index":179,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_user=your_db_user",{"_index":635,"title":{},"body":{"index.html":{}}}],["databasedevconfig",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":42,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["datasource_database",{"_index":152,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_database:string",{"_index":175,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_host",{"_index":153,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_host:string",{"_index":176,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_password",{"_index":154,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_password:string",{"_index":174,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_port",{"_index":155,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_port:number",{"_index":178,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_username",{"_index":156,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_username:string",{"_index":173,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["date",{"_index":211,"title":{},"body":{"classes/RegistryDate.html":{},"entities/User.html":{}}}],["date().toisostring",{"_index":263,"title":{},"body":{"entities/User.html":{}}}],["date.ts",{"_index":208,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["date.ts:5",{"_index":213,"title":{},"body":{"classes/RegistryDate.html":{}}}],["date.ts:7",{"_index":215,"title":{},"body":{"classes/RegistryDate.html":{}}}],["db.config",{"_index":146,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["db.config.ts",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":730,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":778,"title":{},"body":{"license.html":{}}}],["debug",{"_index":87,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{}}}],["default",{"_index":238,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["delete",{"_index":319,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["delete(\":id",{"_index":339,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["delete(':id')@apitags()@apioperation({})@apiresponse",{"_index":311,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser",{"_index":308,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser(@param",{"_index":340,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser(undefined",{"_index":310,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":583,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":542,"title":{},"body":{"index.html":{}}}],["deployments",{"_index":553,"title":{},"body":{"index.html":{}}}],["deploys",{"_index":586,"title":{},"body":{"index.html":{}}}],["description",{"_index":787,"title":{},"body":{"properties.html":{}}}],["details",{"_index":261,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["dev.config.ts",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":468,"title":{},"body":{"index.html":{}}}],["directly",{"_index":599,"title":{},"body":{"index.html":{}}}],["display",{"_index":604,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":739,"title":{},"body":{"license.html":{}}}],["docs6",{"_index":654,"title":{},"body":{"index.html":{}}}],["docsapi",{"_index":656,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":361,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentationn",{"_index":653,"title":{},"body":{"index.html":{}}}],["documentbuilder",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropschema",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":324,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["dto.ts",{"_index":198,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["dto.ts:7",{"_index":201,"title":{},"body":{"classes/IdDto.html":{}}}],["dto/update",{"_index":325,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["e.g",{"_index":258,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["each",{"_index":473,"title":{},"body":{"index.html":{}}}],["effect",{"_index":257,"title":{},"body":{"entities/User.html":{}}}],["efficient",{"_index":529,"title":{},"body":{"index.html":{}}}],["email",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["email:string",{"_index":251,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["email_host=smtp.example.com",{"_index":640,"title":{},"body":{"index.html":{}}}],["email_password=your_email_password",{"_index":643,"title":{},"body":{"index.html":{}}}],["email_port=587",{"_index":641,"title":{},"body":{"index.html":{}}}],["email_user=your_email@example.com",{"_index":642,"title":{},"body":{"index.html":{}}}],["enablecircularcheck:true",{"_index":184,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["endpoints",{"_index":664,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":293,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["enforces",{"_index":591,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":548,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":566,"title":{},"body":{"index.html":{}}}],["entities",{"_index":220,"title":{},"body":{"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":219,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["entity.ts",{"_index":222,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":227,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:13",{"_index":230,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:15",{"_index":225,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:17",{"_index":231,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:24",{"_index":240,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:27",{"_index":235,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:9",{"_index":229,"title":{},"body":{"entities/User.html":{}}}],["entity/user",{"_index":291,"title":{},"body":{"classes/UserBaseDto.html":{},"modules/UsersModule.html":{}}}],["enum",{"_index":237,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["enumerations",{"_index":436,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":524,"title":{},"body":{"index.html":{}}}],["env.dev",{"_index":75,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["env.example",{"_index":629,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":74,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["environment",{"_index":193,"title":{},"body":{"classes/EnvironmentVariables.html":{},"index.html":{}}}],["environmentvariables",{"_index":148,"title":{"classes/EnvironmentVariables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["envvalidator",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["envvalidator(providedconfig",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["envvalidator(providedconfig:record",{"_index":181,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error(`${errors.length",{"_index":192,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors",{"_index":185,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors.length",{"_index":188,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["eslint",{"_index":568,"title":{},"body":{"index.html":{}}}],["etc",{"_index":677,"title":{},"body":{"index.html":{}}}],["event",{"_index":765,"title":{},"body":{"license.html":{}}}],["example",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"index.html":{}}}],["execute",{"_index":682,"title":{},"body":{"index.html":{}}}],["explore",{"_index":657,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":392,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["externals",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":234,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":698,"title":{},"body":{"index.html":{}}}],["feature/your",{"_index":701,"title":{},"body":{"index.html":{}}}],["features",{"_index":482,"title":{},"body":{"index.html":{}}}],["feel",{"_index":712,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":729,"title":{},"body":{"license.html":{}}}],["firstname",{"_index":100,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["firstname:string",{"_index":248,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["fitness",{"_index":761,"title":{},"body":{"license.html":{}}}],["follow",{"_index":697,"title":{},"body":{"index.html":{}}}],["following",{"_index":563,"title":{},"body":{"index.html":{},"license.html":{}}}],["fork",{"_index":397,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["found",{"_index":195,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["framework",{"_index":527,"title":{},"body":{"index.html":{}}}],["free",{"_index":506,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":180,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["functions",{"_index":440,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":746,"title":{},"body":{"license.html":{}}}],["gates",{"_index":592,"title":{},"body":{"index.html":{}}}],["gb",{"_index":513,"title":{},"body":{"index.html":{}}}],["generated",{"_index":662,"title":{},"body":{"index.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":452,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["git",{"_index":619,"title":{},"body":{"index.html":{}}}],["github",{"_index":554,"title":{},"body":{"index.html":{}}}],["granted",{"_index":722,"title":{},"body":{"license.html":{}}}],["graph",{"_index":782,"title":{},"body":{"modules.html":{}}}],["handling",{"_index":537,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["hereby",{"_index":721,"title":{},"body":{"license.html":{}}}],["high",{"_index":593,"title":{},"body":{"index.html":{}}}],["holders",{"_index":767,"title":{},"body":{"license.html":{}}}],["host",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api",{"_index":659,"title":{},"body":{"index.html":{}}}],["https://github.com/yourusername/task",{"_index":620,"title":{},"body":{"index.html":{}}}],["id",{"_index":199,"title":{},"body":{"classes/IdDto.html":{},"entities/User.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"index.html":{}}}],["id:number",{"_index":247,"title":{},"body":{"entities/User.html":{}}}],["iddto",{"_index":196,"title":{"classes/IdDto.html":{}},"body":{"classes/IdDto.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["identifier",{"_index":349,"title":{},"body":{"injectables/WriteUserService.html":{},"coverage.html":{}}}],["implied",{"_index":757,"title":{},"body":{"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["improvements",{"_index":684,"title":{},"body":{"index.html":{}}}],["include",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["included",{"_index":602,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":733,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["information",{"_index":673,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{},"overview.html":{}}}],["insert",{"_index":279,"title":{},"body":{"entities/User.html":{}}}],["install",{"_index":624,"title":{},"body":{"index.html":{}}}],["install3",{"_index":625,"title":{},"body":{"index.html":{}}}],["installed",{"_index":612,"title":{},"body":{"index.html":{}}}],["instance",{"_index":521,"title":{},"body":{"index.html":{}}}],["instead",{"_index":265,"title":{},"body":{"entities/User.html":{}}}],["integrates",{"_index":588,"title":{},"body":{"index.html":{}}}],["integration",{"_index":547,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":532,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["isenum",{"_index":289,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["isenum(userrole",{"_index":131,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["isglobal",{"_index":71,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["isnan(ttl",{"_index":89,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["isnotemptystring",{"_index":161,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/UserBaseDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotemptystring(validationoption",{"_index":447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispositive",{"_index":202,"title":{},"body":{"classes/IdDto.html":{}}}],["ispositiveinteger",{"_index":158,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ispositiveinteger(validationoption",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isstrongpassword",{"_index":138,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstrongpassword({minlength",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issues",{"_index":581,"title":{},"body":{"index.html":{}}}],["jest",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["jordach",{"_index":718,"title":{},"body":{"license.html":{},"properties.html":{}}}],["junit",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":487,"title":{},"body":{"index.html":{}}}],["jwt_secret=your_secret_key",{"_index":639,"title":{},"body":{"index.html":{}}}],["key",{"_index":663,"title":{},"body":{"index.html":{}}}],["kind",{"_index":756,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":101,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["lastname:string",{"_index":249,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":290,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["length(5",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["length(5,25",{"_index":292,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["levels",{"_index":495,"title":{},"body":{"index.html":{}}}],["liability",{"_index":771,"title":{},"body":{"license.html":{}}}],["liable",{"_index":768,"title":{},"body":{"license.html":{}}}],["licence",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":706,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":707,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":734,"title":{},"body":{"license.html":{}}}],["limited",{"_index":758,"title":{},"body":{"license.html":{}}}],["linting",{"_index":565,"title":{},"body":{"index.html":{}}}],["locally",{"_index":611,"title":{},"body":{"index.html":{}}}],["log",{"_index":262,"title":{},"body":{"entities/User.html":{}}}],["logging",{"_index":259,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":485,"title":{},"body":{"index.html":{}}}],["long",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lowercase",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["m",{"_index":703,"title":{},"body":{"index.html":{}}}],["main",{"_index":560,"title":{},"body":{"index.html":{}}}],["maintainability",{"_index":580,"title":{},"body":{"index.html":{}}}],["maintainer",{"_index":713,"title":{},"body":{"index.html":{}}}],["makaya",{"_index":719,"title":{},"body":{"license.html":{},"properties.html":{}}}],["manage",{"_index":463,"title":{},"body":{"index.html":{}}}],["management",{"_index":455,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["manager",{"_index":67,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{},"index.html":{}}}],["managers",{"_index":493,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max:number",{"_index":84,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["measures",{"_index":597,"title":{},"body":{"index.html":{}}}],["member",{"_index":472,"title":{},"body":{"index.html":{}}}],["members",{"_index":494,"title":{},"body":{"index.html":{}}}],["memory",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":760,"title":{},"body":{"license.html":{}}}],["merge",{"_index":737,"title":{},"body":{"license.html":{}}}],["message",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["metadata",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["middleware",{"_index":536,"title":{},"body":{"index.html":{}}}],["migration:run5",{"_index":649,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":607,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":140,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlowercase",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minnumbers",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minsymbols",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minuppercase",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":435,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":709,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mobile",{"_index":692,"title":{},"body":{"index.html":{}}}],["moderator",{"_index":135,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{}}}],["modify",{"_index":736,"title":{},"body":{"license.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":511,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":534,"title":{},"body":{"index.html":{}}}],["name",{"_index":270,"title":{},"body":{"entities/User.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":267,"title":{},"body":{"entities/User.html":{}}}],["neon",{"_index":503,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":458,"title":{},"body":{"index.html":{}}}],["nestjs/cache",{"_index":66,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"injectables/ReadOnlyUserService.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":64,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":69,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":331,"title":{},"body":{"controllers/UsersWriteController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":143,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":191,"title":{},"body":{"classes/EnvironmentVariables.html":{},"entities/User.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":526,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":157,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["node_env:string",{"_index":172,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["nodemailer",{"_index":540,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":764,"title":{},"body":{"license.html":{}}}],["notice",{"_index":750,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":479,"title":{},"body":{"index.html":{}}}],["notified",{"_index":499,"title":{},"body":{"index.html":{}}}],["npm",{"_index":615,"title":{},"body":{"index.html":{}}}],["number",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["obtain",{"_index":669,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":725,"title":{},"body":{"license.html":{}}}],["offers",{"_index":505,"title":{},"body":{"index.html":{}}}],["only.user.service",{"_index":301,"title":{},"body":{"modules/UsersModule.html":{}}}],["only.user.service.ts",{"_index":205,"title":{},"body":{"injectables/ReadOnlyUserService.html":{},"coverage.html":{}}}],["open",{"_index":705,"title":{},"body":{"index.html":{}}}],["operation",{"_index":260,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":314,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["organize",{"_index":410,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["origin",{"_index":704,"title":{},"body":{"index.html":{}}}],["orm",{"_index":531,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":776,"title":{},"body":{"license.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":459,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":387,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":320,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["parameters",{"_index":313,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.cache_max_ttl",{"_index":85,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["parseint(process.env.cache_ttl",{"_index":81,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["particular",{"_index":762,"title":{},"body":{"license.html":{}}}],["pass",{"_index":276,"title":{},"body":{"entities/User.html":{}}}],["passport.js",{"_index":535,"title":{},"body":{"index.html":{}}}],["password",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["password:string",{"_index":252,"title":{},"body":{"entities/User.html":{}}}],["password@@201",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["patch",{"_index":321,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["patch(\"/:id",{"_index":334,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["patch('/:id')@apitags()@apioperation({})@apiresponse({})@apibody",{"_index":316,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["payload",{"_index":357,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["per",{"_index":510,"title":{},"body":{"index.html":{}}}],["perform",{"_index":255,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["permission",{"_index":720,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":474,"title":{},"body":{"index.html":{}}}],["permit",{"_index":744,"title":{},"body":{"license.html":{}}}],["person",{"_index":724,"title":{},"body":{"license.html":{}}}],["persons",{"_index":745,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":544,"title":{},"body":{"index.html":{}}}],["plaintoinstance",{"_index":169,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoinstance(environmentvariables,providedconfig",{"_index":183,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["please",{"_index":696,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":753,"title":{},"body":{"license.html":{}}}],["post",{"_index":665,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":504,"title":{},"body":{"index.html":{}}}],["potential",{"_index":577,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":616,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":233,"title":{},"body":{"entities/User.html":{},"controllers/UsersWriteController.html":{}}}],["prefix:false",{"_index":254,"title":{},"body":{"entities/User.html":{}}}],["prerequisites",{"_index":610,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":228,"title":{},"body":{"entities/User.html":{}}}],["process.env.mit_licence_url",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_server",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_title",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":587,"title":{},"body":{"index.html":{}}}],["project",{"_index":470,"title":{},"body":{"index.html":{}}}],["projects",{"_index":466,"title":{},"body":{"index.html":{}}}],["projects/:id",{"_index":675,"title":{},"body":{"index.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"properties.html":{}}}],["provide",{"_index":688,"title":{},"body":{"index.html":{}}}],["provided",{"_index":754,"title":{},"body":{"license.html":{}}}],["providedconfig",{"_index":446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["publish",{"_index":738,"title":{},"body":{"license.html":{}}}],["pull",{"_index":558,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":763,"title":{},"body":{"license.html":{}}}],["push",{"_index":557,"title":{},"body":{"index.html":{}}}],["pushed",{"_index":678,"title":{},"body":{"index.html":{}}}],["quality",{"_index":550,"title":{},"body":{"index.html":{}}}],["questions",{"_index":711,"title":{},"body":{"index.html":{}}}],["rates",{"_index":691,"title":{},"body":{"index.html":{}}}],["rbac",{"_index":491,"title":{},"body":{"index.html":{}}}],["read/read",{"_index":300,"title":{},"body":{"modules/UsersModule.html":{}}}],["readme",{"_index":603,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{}}}],["readonlyuserservice",{"_index":203,"title":{"injectables/ReadOnlyUserService.html":{}},"body":{"injectables/ReadOnlyUserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["real",{"_index":476,"title":{},"body":{"index.html":{}}}],["receive",{"_index":500,"title":{},"body":{"index.html":{}}}],["record",{"_index":445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reflect",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":484,"title":{},"body":{"index.html":{}}}],["registry",{"_index":223,"title":{},"body":{"entities/User.html":{}}}],["registrydate",{"_index":206,"title":{"classes/RegistryDate.html":{}},"body":{"classes/RegistryDate.html":{},"entities/User.html":{},"coverage.html":{}}}],["remove",{"_index":281,"title":{},"body":{"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["remove(identifier",{"_index":347,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["remove(identifier:number",{"_index":358,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["removes",{"_index":359,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["reporter",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["reports",{"_index":572,"title":{},"body":{"index.html":{}}}],["repository",{"_index":618,"title":{},"body":{"index.html":{}}}],["request",{"_index":559,"title":{},"body":{"index.html":{}}}],["requests",{"_index":509,"title":{},"body":{"index.html":{}}}],["required",{"_index":671,"title":{},"body":{"index.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["restriction",{"_index":732,"title":{},"body":{"license.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariables.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["rights",{"_index":735,"title":{},"body":{"license.html":{}}}],["role",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["roles",{"_index":246,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["roles.ts",{"_index":438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["root",{"_index":630,"title":{},"body":{"index.html":{}}}],["run",{"_index":415,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["running",{"_index":647,"title":{},"body":{"index.html":{}}}],["runs",{"_index":562,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":501,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":516,"title":{},"body":{"index.html":{}}}],["scans",{"_index":594,"title":{},"body":{"index.html":{}}}],["schema",{"_index":648,"title":{},"body":{"index.html":{}}}],["script",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["seamless",{"_index":552,"title":{},"body":{"index.html":{}}}],["secret",{"_index":638,"title":{},"body":{"index.html":{}}}],["security",{"_index":595,"title":{},"body":{"index.html":{}}}],["see",{"_index":628,"title":{},"body":{"index.html":{}}}],["sell",{"_index":742,"title":{},"body":{"license.html":{}}}],["sending",{"_index":541,"title":{},"body":{"index.html":{}}}],["serve",{"_index":655,"title":{},"body":{"index.html":{}}}],["server",{"_index":651,"title":{},"body":{"index.html":{}}}],["service",{"_index":277,"title":{},"body":{"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["sessions",{"_index":486,"title":{},"body":{"index.html":{}}}],["set",{"_index":626,"title":{},"body":{"index.html":{}}}],["setdescription(\"api",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlicense(\"mit\",licence",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":645,"title":{},"body":{"index.html":{}}}],["settitle(swaggertitle",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":517,"title":{},"body":{"index.html":{}}}],["setversion(\"1.0",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":751,"title":{},"body":{"license.html":{}}}],["side",{"_index":256,"title":{},"body":{"entities/User.html":{}}}],["sign",{"_index":519,"title":{},"body":{"index.html":{}}}],["skipmissingproperties:false",{"_index":187,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["smells",{"_index":596,"title":{},"body":{"index.html":{}}}],["software",{"_index":727,"title":{},"body":{"license.html":{}}}],["sonar",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["sonarcloud",{"_index":575,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["special",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sqlite",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["src/.../database",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../swagger",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.const.ts",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validator.decotrator.ts",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":60,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/decorators/validator.decotrator.ts",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dto/id",{"_index":197,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["src/common/embedded/registry",{"_index":207,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["src/configuration/configuration.module.ts",{"_index":61,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["src/configuration/database",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/env.validation.ts",{"_index":149,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/configuration/env.validation.ts:11",{"_index":166,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:13",{"_index":164,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:15",{"_index":162,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:17",{"_index":163,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:21",{"_index":159,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:23",{"_index":165,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:25",{"_index":160,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:9",{"_index":167,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/swagger",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/swagger.const.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/test",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":141,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/main.ts",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":93,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":218,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":283,"title":{},"body":{"classes/UserBaseDto.html":{},"coverage.html":{}}}],["src/users/entity/user",{"_index":221,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/read/read",{"_index":204,"title":{},"body":{"injectables/ReadOnlyUserService.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":298,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/write/write.user.controller.ts",{"_index":306,"title":{},"body":{"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["src/users/write/write.user.controller.ts:18",{"_index":317,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["src/users/write/write.user.controller.ts:28",{"_index":312,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["src/users/write/write.user.service.ts",{"_index":342,"title":{},"body":{"injectables/WriteUserService.html":{},"coverage.html":{}}}],["src/users/write/write.user.service.ts:11",{"_index":351,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["src/users/write/write.user.service.ts:15",{"_index":348,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["src/users/write/write.user.service.ts:7",{"_index":346,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["start",{"_index":650,"title":{},"body":{"index.html":{}}}],["start:dev6",{"_index":652,"title":{},"body":{"index.html":{}}}],["started",{"_index":453,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":660,"title":{},"body":{"index.html":{}}}],["statements",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":589,"title":{},"body":{"index.html":{}}}],["status",{"_index":273,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["statuses",{"_index":680,"title":{},"body":{"index.html":{}}}],["steps",{"_index":518,"title":{},"body":{"index.html":{}}}],["storage",{"_index":515,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/WriteUserService.html":{},"index.html":{}}}],["subject",{"_index":747,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":740,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":679,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":752,"title":{},"body":{"license.html":{}}}],["successful",{"_index":274,"title":{},"body":{"entities/User.html":{}}}],["such",{"_index":469,"title":{},"body":{"index.html":{}}}],["sufficient",{"_index":600,"title":{},"body":{"index.html":{}}}],["support",{"_index":533,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supports",{"_index":475,"title":{},"body":{"index.html":{}}}],["svg",{"_index":780,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":421,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swaggerconfig",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerserver",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggertitle",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":460,"title":{},"body":{"index.html":{}}}],["table",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":454,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":464,"title":{},"body":{"index.html":{}}}],["tasks/:id",{"_index":676,"title":{},"body":{"index.html":{}}}],["team",{"_index":471,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":525,"title":{},"body":{"index.html":{}}}],["terser",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["test",{"_index":551,"title":{},"body":{"index.html":{}}}],["testdbconfig",{"_index":144,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testfuture",{"_index":683,"title":{},"body":{"index.html":{}}}],["tests",{"_index":570,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.firstname",{"_index":271,"title":{},"body":{"entities/User.html":{}}}],["this.id",{"_index":269,"title":{},"body":{"entities/User.html":{}}}],["this.userwriteservice.remove(id",{"_index":341,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["this.userwriteservice.update(id,updateuserdto",{"_index":338,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["throw",{"_index":190,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["tier",{"_index":605,"title":{},"body":{"index.html":{}}}],["time",{"_index":477,"title":{},"body":{"index.html":{}}}],["token",{"_index":670,"title":{},"body":{"index.html":{}}}],["tort",{"_index":775,"title":{},"body":{"license.html":{}}}],["track",{"_index":689,"title":{},"body":{"index.html":{}}}],["tracks",{"_index":598,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":170,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"dependencies.html":{}}}],["triggers",{"_index":556,"title":{},"body":{"index.html":{}}}],["true",{"_index":72,"title":{},"body":{"modules/ConfigurationModule.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":90,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["ttl:number",{"_index":80,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["type",{"_index":103,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type(undefined)@ispositive",{"_index":200,"title":{},"body":{"classes/IdDto.html":{}}}],["typeorm",{"_index":216,"title":{},"body":{"classes/RegistryDate.html":{},"entities/User.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/decorator/entity/entity",{"_index":241,"title":{},"body":{"entities/User.html":{}}}],["typeormmodule",{"_index":142,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":304,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(testdbconfig",{"_index":147,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":239,"title":{},"body":{"entities/User.html":{}}}],["under",{"_index":708,"title":{},"body":{"index.html":{}}}],["unit",{"_index":569,"title":{},"body":{"index.html":{}}}],["up",{"_index":520,"title":{},"body":{"index.html":{}}}],["update",{"_index":344,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["update(identifier",{"_index":350,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["update(identifier:number,updateuserdto:updateuserdto",{"_index":355,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["updated",{"_index":272,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["updatedat",{"_index":210,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updatedatecolumn",{"_index":214,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updates",{"_index":356,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["updateuser",{"_index":309,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuser(@param",{"_index":335,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuser(undefined",{"_index":315,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuserdto",{"_index":217,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{}}}],["updateuserdto:updateuserdto",{"_index":336,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["uploads",{"_index":571,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["use",{"_index":523,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":606,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":77,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["user",{"_index":134,"title":{"entities/User.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user.dto",{"_index":326,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["user.dto.ts",{"_index":94,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userbasedto",{"_index":96,"title":{"classes/UserBaseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"coverage.html":{}}}],["userbasedto:11",{"_index":129,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:13",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:15",{"_index":136,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:8",{"_index":128,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userid",{"_index":268,"title":{},"body":{"entities/User.html":{}}}],["username",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrole",{"_index":130,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.user",{"_index":253,"title":{},"body":{"entities/User.html":{}}}],["users",{"_index":307,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["users/:id",{"_index":672,"title":{},"body":{"index.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["userswritecontroller",{"_index":299,"title":{"controllers/UsersWriteController.html":{}},"body":{"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["userwriteservice:writeuserservice",{"_index":333,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["uses",{"_index":545,"title":{},"body":{"index.html":{}}}],["using",{"_index":266,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["v16",{"_index":613,"title":{},"body":{"index.html":{}}}],["valid",{"_index":132,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["validatedconfig",{"_index":182,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync",{"_index":171,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":186,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validation",{"_index":294,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["validationoption",{"_index":449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationoptions",{"_index":448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":62,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["validator",{"_index":139,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/UserBaseDto.html":{},"dependencies.html":{}}}],["value",{"_index":439,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":194,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["variables",{"_index":627,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vercel",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":785,"title":{},"body":{"properties.html":{}}}],["visiting",{"_index":658,"title":{},"body":{"index.html":{}}}],["vulnerabilities",{"_index":579,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":759,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":755,"title":{},"body":{"license.html":{}}}],["webpack",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["websocket",{"_index":644,"title":{},"body":{"index.html":{}}}],["websocket_port=30014",{"_index":646,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":478,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":695,"title":{},"body":{"index.html":{}}}],["whether",{"_index":772,"title":{},"body":{"license.html":{}}}],["within",{"_index":465,"title":{},"body":{"index.html":{}}}],["without",{"_index":731,"title":{},"body":{"license.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["write.user.service",{"_index":322,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["write/write.user.controller",{"_index":303,"title":{},"body":{"modules/UsersModule.html":{}}}],["write/write.user.service",{"_index":302,"title":{},"body":{"modules/UsersModule.html":{}}}],["writeuserservice",{"_index":297,"title":{"injectables/WriteUserService.html":{}},"body":{"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"overview.html":{}}}],["yarn",{"_index":614,"title":{},"body":{"index.html":{}}}],["yes",{"_index":450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["your_email@example.com",{"_index":714,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigurationModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { ConfigurationModule } from './configuration/configuration.module';\nimport { DatabaseModule } from './database/database.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n\n@Module({\n  imports: [ConfigurationModule, DatabaseModule, UsersModule, AuthModule,],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigurationModule.html":{"url":"modules/ConfigurationModule.html","title":"module - ConfigurationModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigurationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configuration/configuration.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { CacheModule } from \"@nestjs/cache-manager\";\nimport { APP_PIPE } from \"@nestjs/core\";\n\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      envFilePath: '.env.dev'\n    }),\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n\n      useFactory: async () => {\n        const ttl:number = parseInt(process.env.CACHE_TTL)|| 60 * 5\n        const max:number = parseInt(process.env.CACHE_MAX_TTL) || 100;\n\n\n        //DEBUG\n        console.log({ttl,max})\n\n        if (isNaN(ttl) || ttl \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserBaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1}, {message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserBaseDto } from \"./user-base.dto\";\nimport { IsStrongPassword } from \"class-validator\";\n\nexport class CreateUserDto extends UserBaseDto{\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201',\n    }\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TestDbConfig } from \"../configuration/test-db.config\";\n\n@Module({\n  imports: [TypeOrmModule.forRoot(TestDbConfig)],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration/env.validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                APP_PORT\n                            \n                            \n                                    \n                                DATABASE_URL\n                            \n                            \n                                    \n                                DATASOURCE_DATABASE\n                            \n                            \n                                    \n                                DATASOURCE_HOST\n                            \n                            \n                                    \n                                DATASOURCE_PASSWORD\n                            \n                            \n                                    \n                                DATASOURCE_PORT\n                            \n                            \n                                    \n                                DATASOURCE_USERNAME\n                            \n                            \n                                    \n                                NODE_ENV\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyString, IsPositiveInteger } from \"../common/decorators/validator.decotrator\";\nimport { plainToInstance } from \"class-transformer\";\nimport { validateSync } from \"class-validator\";\n\nexport class EnvironmentVariables {\n\n  // String\n  @IsNotEmptyString()\n  NODE_ENV:string\n  @IsNotEmptyString()\n  DATASOURCE_USERNAME:string\n  @IsNotEmptyString()\n  DATASOURCE_PASSWORD:string\n  @IsNotEmptyString()\n  DATASOURCE_DATABASE:string\n  @IsNotEmptyString()\n  DATASOURCE_HOST:string\n\n// Number\n  @IsPositiveInteger()\n  APP_PORT:number\n  @IsPositiveInteger()\n  DATASOURCE_PORT:number\n  @IsPositiveInteger()\n  DATABASE_URL:number\n}\n\n\nexport function envValidator(providedConfig:Record ){\n  const validatedConfig = plainToInstance(EnvironmentVariables,providedConfig,{\n    enableCircularCheck:true\n  })\n\n  const errors = validateSync(validatedConfig, {\n    skipMissingProperties:false\n  })\n\n  if (errors.length > 0) {\n    throw new Error(`${errors.length} not valid environment variable found`)\n  }\n\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto.html":{"url":"classes/IdDto.html","title":"class - IdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/id-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/id-dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsPositive } from \"class-validator\";\n\nexport class IdDto {\n  @Type(() => Number)\n  @IsPositive()\n  readonly id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadOnlyUserService.html":{"url":"injectables/ReadOnlyUserService.html","title":"injectable - ReadOnlyUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReadOnlyUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/read/read-only.user.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ReadOnlyUserService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistryDate.html":{"url":"classes/RegistryDate.html","title":"class - RegistryDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistryDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/embedded/registry-date.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\n\nexport class RegistryDate{\n  @CreateDateColumn()\n  createdAt: Date;\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserBaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserBaseDto } from \"./user-base.dto\";\n\nexport class UpdateUserDto extends UserBaseDto{}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entity/user-entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                registry\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(undefined, {prefix: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity } from \"typeorm/decorator/entity/Entity\";\nimport { RegistryDate } from \"../../common/embedded/registry-date\";\nimport { AfterInsert, AfterRemove, AfterUpdate, Column, PrimaryGeneratedColumn } from \"typeorm\";\nimport { UserRole } from \"./user-roles\";\n\n@Entity()\nexport class User{\n  @PrimaryGeneratedColumn()\n  id:number\n  @Column()\n  firstName:string\n  @Column()\n  lastName:string\n  @Column({unique:true})\n  email:string\n  @Column()\n  password:string\n\n  @Column({\n    type: \"enum\",\n    enum: UserRole,\n    default: UserRole.USER,\n  })\n  role: UserRole\n\n  @Column(() => RegistryDate,{ prefix:false})\n  registry: Date\n\n\n  @AfterUpdate()\n  afterUpdate() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'UPDATED',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Update Operation:', log);\n  }\n\n  @AfterInsert()\n  afterInsert() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'INSERT',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Insert Operation:', log);\n  }\n\n  @AfterRemove()\n  afterRemove() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'REMOVE',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Remove Operation:', log);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBaseDto.html":{"url":"classes/UserBaseDto.html","title":"class - UserBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-base.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyString } from \"../../common/decorators/validator.decotrator\";\nimport { IsEmail, IsEnum, Length } from \"class-validator\";\nimport { UserRole } from \"../entity/user-roles\";\n\nexport class UserBaseDto {\n  @Length(5,25)\n  @IsNotEmptyString()\n  readonly firstName:string\n  @Length(5,25)\n  @IsNotEmptyString()\n  readonly lastName:string\n  @IsEmail()\n  readonly email:string\n  @IsEnum(UserRole, { message: 'Role must be a valid UserRole (admin, user, moderator)' })\n  readonly role: UserRole;  // Enforce enum validation for role\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nReadOnlyUserService\n\nReadOnlyUserService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nReadOnlyUserService->UsersModule\n\n\n\n\n\nWriteUserService\n\nWriteUserService\n\nUsersModule -->\n\nWriteUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReadOnlyUserService\n                        \n                        \n                            WriteUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersWriteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReadOnlyUserService } from './read/read-only.user.service';\nimport { WriteUserService } from './write/write.user.service';\nimport { UsersWriteController } from \"./write/write.user.controller\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"./entity/user-entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [ReadOnlyUserService, WriteUserService],\n  controllers:[UsersWriteController]\n\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersWriteController.html":{"url":"controllers/UsersWriteController.html","title":"controller - UsersWriteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersWriteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/write/write.user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(undefined: IdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiTags()@ApiOperation({})@ApiResponse({})\n                \n            \n\n                    \n                        \n                            Defined in src/users/write/write.user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(undefined: IdDto, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@ApiTags()@ApiOperation({})@ApiResponse({})@ApiBody({})\n                \n            \n\n                    \n                        \n                            Defined in src/users/write/write.user.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, } from \"@nestjs/common\";\nimport { WriteUserService } from \"./write.user.service\";\nimport { IdDto } from \"../../common/dto/id-dto\";\nimport { UpdateUserDto } from \"../dto/update-user.dto\";\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from \"@nestjs/swagger\";\n\n@Controller('users')\nexport class UsersWriteController {\n\n  constructor(private readonly userWriteService:WriteUserService) {}\n\n\n  @Patch(\"/:id\")\n  @ApiTags()\n  @ApiOperation({})\n  @ApiResponse({})\n  @ApiBody({})\n  updateUser(@Param() { id }: IdDto, @Body() updateUserDto:UpdateUserDto) {\n    console.log(typeof id);\n    return this.userWriteService.update(id,updateUserDto)\n  }\n\n\n  @Delete(\":id\")\n  @ApiTags()\n  @ApiOperation({})\n  @ApiResponse({})\n  deleteUser(@Param() { id }: IdDto) {\n   return this.userWriteService.remove(id)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WriteUserService.html":{"url":"injectables/WriteUserService.html","title":"injectable - WriteUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WriteUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/write/write.user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(body: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(identifier: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(identifier: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from \"@nestjs/common\";\nimport { UpdateUserDto } from \"../dto/update-user.dto\";\n\n@Injectable()\nexport class WriteUserService {\n\n  createUser(@Body() body:any) {\n    return `This service create a new user with body ${body}`\n  }\n\n  update(identifier:number,updateUserDto:UpdateUserDto) {\n    return `This service updates user with ID ${identifier} and payload ${updateUserDto} `\n  }\n\n  remove(identifier:number){\n    return `This service removes a user with ID ${identifier}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/decorators/validator.decotrator.ts\n            \n            function\n            IsNotEmptyString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/validator.decotrator.ts\n            \n            function\n            IsPositiveInteger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/id-dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/embedded/registry-date.ts\n            \n            class\n            RegistryDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/configuration/database-dev.config.ts\n            \n            variable\n            databaseDevConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/env.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/configuration/env.validation.ts\n            \n            function\n            envValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger-config.document.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            licence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            swaggerServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            swaggerTitle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/test-db.config.ts\n            \n            variable\n            TestDbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/user-base.dto.ts\n            \n            class\n            UserBaseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/entity/user-entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/read/read-only.user.service.ts\n            \n            injectable\n            ReadOnlyUserService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/write/write.user.controller.ts\n            \n            controller\n            UsersWriteController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/write/write.user.service.ts\n            \n            injectable\n            WriteUserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            cache-manager : 5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            fork-ts-checker-webpack-plugin : ^9.0.2\n        \n            jest-junit : ^16.0.0\n        \n            jest-sonar-reporter : ^2.0.0\n        \n            prettier-plugin-organize-imports : ^4.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            run-script-webpack-plugin : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            sqlite3 : ^5.1.7\n        \n            swagger-ui-express : ^5.0.1\n        \n            terser-webpack-plugin : ^5.3.10\n        \n            typeorm : ^0.3.20\n        \n            vercel : ^37.4.2\n        \n            webpack : ^5.94.0\n        \n            webpack-cli : ^5.1.4\n        \n            webpack-node-externals : ^3.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRole   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/entity/user-roles.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 MODERATOR\n                            \n                        \n                        \n                            \n                                Value : moderator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            envValidator   (src/.../env.validation.ts)\n                        \n                        \n                            IsNotEmptyString   (src/.../validator.decotrator.ts)\n                        \n                        \n                            IsPositiveInteger   (src/.../validator.decotrator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/configuration/env.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envValidator\n                        \n                    \n                \n            \n            \n                \nenvValidator(providedConfig: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                providedConfig\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/validator.decotrator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNotEmptyString\n                        \n                    \n                \n            \n            \n                \nIsNotEmptyString(validationOption?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOption\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IsPositiveInteger\n                        \n                    \n                \n            \n            \n                \nIsPositiveInteger(validationOption?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOption\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTask Management API (Backend NestJS)\nOverview\nThe Task Management API is a backend system built using NestJS that allows users to create, update, and manage tasks within projects. Users can be assigned different roles such as Admin, Project Manager, or Team Member, each with different permissions. The API also supports real-time task updates using WebSockets and email notifications for task assignment and status changes.\n\nFeatures\n\nUser Authentication: Register, login, and manage user sessions using JWT-based authentication.\nRole-Based Access Control (RBAC): Admins, Project Managers, and Team Members with different access levels.\nTask Management: Create, update, delete, and assign tasks to users within projects.\nProject Management: Organize tasks into projects for better task categorization.\nReal-time Notifications: Get notified of task updates (e.g., status changes) in real-time using WebSockets.\nEmail Notifications: Receive email notifications when tasks are assigned or updated.\nScalable Architecture: Neon (PostgreSQL)\nNeon offers a free PostgreSQL database with 10,000 requests per month, 3 GB of data storage, and free scaling.\n  Setup Steps:\nSign up for Neon.\nCreate a new PostgreSQL database instance.\nGet the connection string from Neon, and use it in your .env file (DATABASE_URL).\n\n\n\n\n\nTechnologies\n\nNestJS: Node.js framework for building efficient, scalable applications.\nTypeORM: ORM for database interactions with support for PostgreSQL or MySQL.\nPassport.js: Authentication middleware for handling JWT-based auth.\nWebSockets: Real-time communication for task updates.\nNodemailer: For sending email notifications.\nDeployment for Backend (NestJS API)\n\nCI/CD Pipeline\nThis project uses a continuous integration and continuous deployment (CI/CD) pipeline to ensure code quality, test coverage, and seamless deployments.\nPipeline Overview\n\nGitHub Actions:\nTriggers on every push or pull request to the main branch.\nRuns the following checks:\nLinting: Ensures code consistency with ESLint.\nUnit Tests: Runs unit tests and uploads coverage reports to\n CodeCov.\n\n\n\n2. SonarCloud: \n\nAnalyzes code for potential bugs, vulnerabilities,     * and maintainability issues.\nBuild & Deploy: Builds the application and deploys it to the production environment.\n\n3. SonarCloud:\n\nIntegrates with GitHub Actions to perform static code analysis.\nEnforces quality gates to ensure high code quality.\nScans for bugs, security vulnerabilities, and code smells.\n\n\nCodeCov:\n\nMeasures and tracks test coverage.\nReports coverage results directly in pull requests to ensure sufficient code coverage.\nA badge is included in the README to display current coverage status.\n\n\nNeon PostgreSQL:\n\nFree-tier PostgreSQL database used for production.\nMigrations are automatically applied after deployment.\n\n\n\nPrerequisites\nTo run this project locally, ensure you have the following installed:\n\nNode.js (v16+)\nPostgreSQL or MySQL database\nYarn or npm (Yarn is preferred)\n\nGetting Started\n1. Clone the Repository\nExample :git clone https://github.com/yourusername/task-management-api.git\ncd task-management-api2. Install Dependencies\nExample :yarn install3. Set Up Environment Variables\nCreate a .env (see .env.example) file in the project root and add the following variables:\nExample :# Database configuration\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_USER=your_db_user\nDATABASE_PASSWORD=your_db_password\nDATABASE_NAME=task_management_db\n\n# JWT Secret\nJWT_SECRET=your_secret_key\n\n# Email configuration (for Nodemailer)\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_USER=your_email@example.com\nEMAIL_PASSWORD=your_email_password\n\n# WebSocket settings\nWEBSOCKET_PORT=30014. Set Up the Database\nEnsure that you have PostgreSQL or MySQL running, then run migrations to set up the database schema:\nExample :yarn typeorm migration:run5. Start the Server\nExample :yarn start:dev6. Build documentationn\nExample :yarn run docs6. Build documentationn\nExample :yarn serve-docsAPI Documentation\nYou can explore the API documentation by visiting http://localhost:3000/api after starting the server. The documentation is auto-generated using Swagger.\nKey Endpoints\n\nAuthentication\n\nPOST /auth/signup: Register a new user\nPOST /auth/login: Authenticate and obtain a JWT token\n\n\nUsers\n\nGET /users: Get all users (Admin access required)\nGET /users/:id: Get a user by ID\nPATCH /users/:id: Update user information (Admin/Project Manager)\n\n\nProjects\n\nGET /projects: Get all projects\nPOST /projects: Create a new project (Admin/Project Manager)\nPATCH /projects/:id: Update project details (Admin/Project Manager)\n\n\nTasks\n\nGET /tasks: Get all tasks for the current user\nPOST /tasks: Create a new task (Admin/Project Manager)\nPATCH /tasks/:id: Update task status, assignment, etc. (Admin/Project Manager)\n\n\nWebSockets\n\nReal-time updates are pushed to subscribed users when task statuses change or new tasks are assigned.\n\n\nTests\nTo run tests, execute:\nExample :\nyarn testFuture Improvements\n\nFile Attachments: Support file uploads and attachments to tasks.\nAnalytics Dashboard: Provide project managers with a dashboard to track task completion rates, project statuses, etc.\nPush Notifications: Add support for mobile push notifications.\n\nContributing\nContributions are welcome! Please follow these steps:\n\nFork the repository.\n\nCreate a new feature branch (git checkout -b feature/your-feature).\n\nCommit your changes (git commit -m 'Add some feature').\n\nPush to the branch (git push origin feature/your-feature).\n\nOpen a pull request.\n\nLicense\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\nContact\nFor any questions, feel free to contact the project maintainer at your_email@example.com.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Jordach Makaya\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigurationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nReadOnlyUserService\n\nReadOnlyUserService\n\nUsersModule -->\n\nReadOnlyUserService->UsersModule\n\n\n\n\n\nWriteUserService\n\nWriteUserService\n\nUsersModule -->\n\nWriteUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Author : Jordach Makaya\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseDevConfig   (src/.../database-dev.config.ts)\n                        \n                        \n                            licence   (src/.../swagger.const.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger-config.document.ts)\n                        \n                        \n                            swaggerServer   (src/.../swagger.const.ts)\n                        \n                        \n                            swaggerTitle   (src/.../swagger.const.ts)\n                        \n                        \n                            TestDbConfig   (src/.../test-db.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configuration/database-dev.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseDevConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService:ConfigService) => ({\n    type: \"postgres\",\n    host: configService.getOrThrow('DATASOURCE_HOST'),\n    port: configService.getOrThrow('DATASOURCE_PORT'),\n    username: configService.getOrThrow('DATASOURCE_USERNAME'),\n    password: configService.getOrThrow('DATASOURCE_PASSWORD'),\n    database: configService.getOrThrow('DATASOURCE_DATABASE'),\n    synchronize: true,\n    logging: true,\n    entities: [],}\n)\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        licence\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MIT_LICENCE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerServer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.SWAGGER_SERVER\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.SWAGGER_TITLE\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger-config.document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setLicense(\"MIT\",licence)\n  .addServer(swaggerServer)\n  .setTitle(swaggerTitle)\n  .setVersion(\"1.0\")\n  .setDescription(\"API documentation for Task Management app\")\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/configuration/test-db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TestDbConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: \"sqlite\",\n  database: \":memory:\",\n  dropSchema: true,\n  entities: [\"dist/**/*.entity{.ts,.js}\"],\n  synchronize: true,\n  logging: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
