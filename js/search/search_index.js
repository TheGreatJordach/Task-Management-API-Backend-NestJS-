var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.708,1,1.918]],["body/controllers/AppController.html",[0,2.623,1,2.946,2,2.069,3,0.598,4,0.598,5,0.46,6,3.072,7,0.752,8,2.946,9,4.495,10,1.375,11,0.038,12,1.132,13,3.722,14,2.325,15,1.742,16,0.757,17,1.132,18,2.584,19,3.072,20,0.672,21,0.17,22,3.072,23,1.857,24,2.069,25,3.722,26,0.029,27,0.029]],["title/modules/AppModule.html",[28,0.765,29,1.918]],["body/modules/AppModule.html",[1,2.827,2,2.191,3,0.456,4,0.456,5,0.351,11,0.038,16,0.875,17,0.863,18,2.652,19,2.344,20,0.513,21,0.13,26,0.024,27,0.024,28,1.128,29,3.688,30,1.157,31,1.417,32,2.017,33,2.017,34,1.579,35,3.216,36,2.017,37,2.344,38,2.344,39,2.344,40,2.956,41,2.956,42,2.956,43,2.956,44,2.8,45,2.017,46,1.774,47,2.839,48,2.191,49,2.839,50,2.839,51,2.839,52,2.839,53,2.839]],["title/injectables/AppService.html",[18,1.532,54,1.382]],["body/injectables/AppService.html",[3,0.631,4,0.631,5,0.486,7,0.794,8,3.048,9,4.583,11,0.037,12,1.194,14,2.454,15,1.802,16,0.631,17,1.194,18,2.435,20,0.71,21,0.179,24,2.184,26,0.03,27,0.03,54,2.196,55,2.454,56,3.243,57,3.928,58,3.928,59,3.928]],["title/modules/AuthModule.html",[28,0.765,40,1.708]],["body/modules/AuthModule.html",[3,0.698,4,0.698,5,0.537,11,0.036,16,0.698,17,1.321,20,0.785,21,0.198,26,0.032,27,0.032,28,1.293,30,1.77,40,2.885,60,4.345]],["title/modules/ConfigurationModule.html",[28,0.765,41,1.708]],["body/modules/ConfigurationModule.html",[3,0.548,4,0.548,5,0.422,11,0.038,16,0.846,17,1.037,26,0.027,27,0.027,28,1.112,30,1.39,41,1.897,48,2.48,61,3.412,62,3.412,63,4.46,64,2.816,65,3.412,66,2.816,67,2.424,68,3.412,69,2.816,70,3.412,71,3.412,72,3.169,73,2.816,74,3.412,75,3.412,76,3.412,77,3.412,78,3.412,79,3.169,80,3.412,81,3.412,82,3.412,83,2.424,84,3.412,85,3.412,86,3.412,87,3.412,88,3.412,89,3.412,90,3.412]],["title/classes/CreateUserDto.html",[21,0.14,91,2.182]],["body/classes/CreateUserDto.html",[3,0.384,4,0.384,5,0.296,7,0.484,10,1.777,11,0.037,12,1.463,15,1.777,16,0.561,20,0.433,21,0.159,23,2.785,26,0.021,27,0.021,91,2.48,92,1.078,93,2.881,94,1.701,95,2.881,96,2.884,97,1.289,98,3.419,99,1.941,100,2.18,101,2.18,102,2.29,103,1.326,104,2.394,105,4.527,106,3.49,107,3.777,108,3.49,109,3.49,110,3.49,111,2.927,112,3.49,113,3.49,114,3.49,115,3.49,116,3.49,117,1.941,118,3.49,119,3.49,120,2.48,121,3.49,122,2.394,123,1.701,124,3.737,125,1.976,126,2.48,127,2.48,128,1.976,129,1.976,130,1.941,131,1.701,132,1.495,133,1.331,134,1.17,135,1.495,136,1.976,137,1.976,138,3.49,139,1.331,140,2.394]],["title/modules/DatabaseModule.html",[28,0.765,42,1.708]],["body/modules/DatabaseModule.html",[3,0.647,4,0.647,5,0.498,11,0.037,16,0.862,17,1.225,20,0.728,21,0.184,26,0.031,27,0.031,28,1.236,30,1.641,42,2.757,48,2.241,141,4.03,142,3.327,143,2.863,144,2.863,145,4.03,146,4.03,147,4.03]],["title/classes/EnvironmentVariables.html",[21,0.14,148,2.182]],["body/classes/EnvironmentVariables.html",[3,0.382,4,0.382,5,0.294,7,0.481,10,1.96,11,0.038,12,1.614,15,1.852,16,0.659,20,0.628,21,0.187,24,1.323,26,0.021,27,0.021,79,2.469,92,1.071,97,1.283,103,1.462,117,2.51,132,1.486,139,1.323,148,2.469,149,1.691,150,3.475,151,2.868,152,3.475,153,3.475,154,3.475,155,3.475,156,3.475,157,3.475,158,3.678,159,2.379,160,2.379,161,3.482,162,2.379,163,2.379,164,2.379,165,2.379,166,2.379,167,2.379,168,1.964,169,2.379,170,1.691,171,2.379,172,2.379,173,2.379,174,2.379,175,2.379,176,2.379,177,2.379,178,2.379,179,2.379,180,1.964,181,2.379,182,3.475,183,2.379,184,2.379,185,2.379,186,2.379,187,2.379,188,2.379,189,1.964,190,2.379,191,1.187,192,2.379,193,1.964,194,1.964,195,2.379]],["title/classes/IdDto.html",[21,0.14,196,1.918]],["body/classes/IdDto.html",[3,0.595,4,0.595,5,0.458,7,0.748,10,1.368,11,0.037,12,1.126,16,0.755,20,0.669,21,0.236,23,2.578,26,0.029,27,0.029,92,1.667,97,1.737,103,1.424,117,2.873,139,2.06,170,2.632,196,2.937,197,3.882,198,3.057,199,2.873,200,3.704,201,3.704,202,4.703]],["title/injectables/ReadOnlyUserService.html",[54,1.382,203,1.708]],["body/injectables/ReadOnlyUserService.html",[3,0.694,4,0.694,5,0.534,11,0.036,16,0.694,17,1.314,20,0.781,21,0.197,26,0.032,27,0.032,54,2.328,55,2.699,203,2.876,204,3.567,205,3.567]],["title/classes/RegistryDate.html",[21,0.14,206,1.918]],["body/classes/RegistryDate.html",[3,0.592,4,0.592,5,0.456,7,0.745,10,1.732,11,0.037,12,1.426,16,0.592,20,0.666,21,0.168,26,0.029,27,0.029,92,1.659,97,1.732,103,1.292,206,2.929,207,4.256,208,3.043,209,5.156,210,5.156,211,4.479,212,5.156,213,3.686,214,5.156,215,3.686,216,2.303]],["title/classes/UpdateUserDto.html",[21,0.14,217,1.708]],["body/classes/UpdateUserDto.html",[3,0.498,4,0.498,5,0.383,7,0.626,10,1.873,11,0.036,12,1.542,15,1.75,16,0.498,20,0.56,21,0.141,23,2.832,26,0.026,27,0.026,92,1.395,94,2.202,95,3.454,96,3.103,97,1.545,99,2.327,100,2.614,101,2.614,102,2.634,103,1.398,111,2.202,123,2.202,124,4.187,125,2.558,126,2.973,127,2.973,128,2.558,129,2.558,130,2.327,131,2.202,132,1.936,133,1.723,134,1.402,135,1.936,136,2.558,137,2.558,217,2.327,218,2.558]],["title/entities/User.html",[134,1.029,219,1.918]],["body/entities/User.html",[3,0.278,4,0.278,5,0.214,7,0.349,10,1.712,11,0.038,12,1.409,15,1.415,16,0.615,20,0.312,21,0.079,26,0.017,27,0.017,72,1.229,79,2.398,97,1.007,98,1.937,99,1.516,100,1.703,101,1.703,102,1.877,103,1.324,117,0.962,120,2.398,130,2.318,134,1.131,191,1.684,199,1.516,206,1.703,211,4.08,216,1.08,219,1.703,220,1.229,221,3.413,222,1.427,223,4.429,224,1.729,225,1.729,226,4.943,227,1.729,228,3.375,229,1.729,230,1.729,231,1.729,232,1.729,233,1.427,234,1.427,235,1.729,236,1.729,237,3.162,238,2.251,239,1.729,240,1.729,241,1.729,242,1.729,243,3.375,244,3.375,245,3.375,246,1.229,247,1.729,248,1.427,249,1.427,250,1.729,251,1.427,252,1.729,253,1.729,254,1.729,255,2.786,256,3.375,257,3.375,258,2.786,259,3.656,260,4.943,261,2.786,262,4.943,263,3.375,264,2.786,265,3.375,266,2.786,267,3.375,268,3.375,269,3.375,270,2.108,271,3.375,272,1.427,273,2.786,274,3.375,275,3.375,276,3.375,277,2.786,278,1.729,279,1.729,280,1.729,281,1.427,282,1.729]],["title/classes/UserBaseDto.html",[21,0.14,96,1.708]],["body/classes/UserBaseDto.html",[3,0.435,4,0.435,5,0.335,7,0.548,10,1.77,11,0.037,12,1.457,15,1.631,16,0.709,20,0.49,21,0.174,23,2.883,26,0.023,27,0.023,92,1.22,96,2.122,97,1.409,99,2.122,100,2.383,101,2.383,102,2.913,103,1.32,111,2.711,123,3.137,126,2.711,127,2.711,130,2.808,131,2.711,132,2.383,133,2.122,134,1.279,135,2.383,139,1.507,161,2.758,168,2.238,237,2.238,246,1.926,248,2.238,249,2.238,251,2.238,283,4.168,284,2.238,285,2.711,286,2.711,287,2.711,288,2.711,289,2.711,290,2.711,291,2.238,292,3.815,293,2.711,294,2.711]],["title/modules/UsersModule.html",[28,0.765,43,1.708]],["body/modules/UsersModule.html",[2,1.766,3,0.51,4,0.51,5,0.393,11,0.037,16,0.883,17,0.965,20,0.574,21,0.145,26,0.026,27,0.026,28,1.195,30,1.293,31,1.584,32,2.256,33,2.256,34,1.766,35,3.407,36,2.256,43,3.173,44,3.022,45,2.256,46,1.983,48,1.766,134,1.064,142,2.621,143,2.256,203,3.057,219,1.983,291,2.621,295,2.621,296,2.621,297,2.743,298,3.175,299,2.657,300,3.175,301,3.175,302,3.175,303,3.175,304,3.175,305,3.175]],["title/controllers/UsersWriteController.html",[0,1.708,299,1.918]],["body/controllers/UsersWriteController.html",[0,1.507,2,1.507,3,0.435,4,0.435,5,0.335,7,0.548,8,2.383,10,1.409,11,0.038,12,1.16,14,2.383,16,0.811,17,0.824,20,0.49,21,0.124,22,2.238,23,1.353,24,2.122,26,0.023,27,0.023,103,1.051,196,3.361,199,2.455,217,2.808,233,2.238,270,2.383,297,1.353,299,2.383,306,2.238,307,2.238,308,3.815,309,3.815,310,2.711,311,2.711,312,2.711,313,2.711,314,2.711,315,2.711,316,2.711,317,2.711,318,3.149,319,2.238,320,2.711,321,2.238,322,2.711,323,2.711,324,2.711,325,2.238,326,2.238,327,3.815,328,4.415,329,4.415,330,4.415,331,2.238,332,2.711,333,2.711,334,2.711,335,2.711,336,2.711,337,2.711,338,2.711,339,2.711,340,2.711,341,2.711]],["title/injectables/WriteUserService.html",[54,1.382,297,1.532]],["body/injectables/WriteUserService.html",[3,0.461,4,0.461,5,0.355,7,0.58,8,2.48,11,0.037,12,1.384,14,2.844,15,1.681,16,0.638,17,0.873,20,0.519,21,0.131,24,2.532,26,0.024,27,0.024,54,1.787,55,1.793,103,1.255,117,2.732,134,1.526,191,1.432,199,2.208,217,2.966,270,2.844,277,3.758,281,3.278,297,1.981,313,3.235,314,3.235,318,4.055,325,2.37,326,2.37,342,2.37,343,3.971,344,3.278,345,2.871,346,2.871,347,2.871,348,2.871,349,4.055,350,2.871,351,2.871,352,2.871,353,2.871,354,2.37,355,2.871,356,2.37,357,2.871,358,2.871,359,2.871]],["title/coverage.html",[360,2.955]],["body/coverage.html",[0,1.963,1,1.519,5,0.301,6,2.007,11,0.037,18,1.213,21,0.23,26,0.022,27,0.022,28,0.606,34,1.352,54,1.87,56,2.007,91,1.728,93,2.007,94,2.508,96,1.352,103,0.67,134,0.815,144,1.728,148,1.728,149,2.508,158,1.728,161,1.519,180,3.764,189,4.96,191,1.213,194,4.302,196,1.519,197,2.007,198,2.007,203,1.352,204,2.007,205,2.007,206,1.519,207,2.007,208,2.007,217,1.352,218,2.007,219,1.519,221,1.728,222,2.007,283,2.007,284,2.007,297,1.213,299,1.519,306,2.007,342,2.007,349,2.007,360,1.728,361,1.519,362,2.431,363,4.156,364,2.914,365,5.714,366,3.53,367,2.007,368,2.007,369,2.007,370,2.431,371,2.007,372,2.007,373,2.007,374,2.007,375,3.43,376,2.007,377,2.007,378,2.007,379,2.007,380,2.007,381,2.508,382,2.431,383,3.53,384,2.431,385,2.431,386,2.431]],["title/dependencies.html",[31,1.839,387,2.13]],["body/dependencies.html",[11,0.038,17,0.924,21,0.188,26,0.025,27,0.025,31,1.516,48,1.69,64,2.508,66,2.508,67,2.934,69,2.508,73,2.508,83,2.159,139,1.69,143,2.159,170,2.159,216,1.898,331,2.508,388,3.039,389,4.69,390,3.039,391,3.039,392,3.408,393,3.039,394,3.039,395,3.039,396,3.039,397,2.508,398,3.039,399,3.039,400,5.427,401,5.031,402,3.039,403,3.039,404,2.508,405,3.039,406,3.039,407,3.039,408,4.129,409,2.508,410,3.039,411,3.039,412,3.039,413,3.039,414,3.039,415,2.508,416,3.039,417,3.039,418,3.039,419,3.039,420,3.039,421,3.039,422,3.039,423,3.039,424,3.039,425,3.039,426,3.039,427,3.039,428,3.039]],["title/miscellaneous/enumerations.html",[429,1.288,430,3.041]],["body/miscellaneous/enumerations.html",[7,0.854,11,0.036,26,0.031,27,0.031,130,2.838,133,2.838,134,1.71,135,3.188,221,3.003,429,2.109,430,3.489,431,4.227,432,5.103,433,4.526]],["title/miscellaneous/functions.html",[429,1.288,434,3.041]],["body/miscellaneous/functions.html",[7,0.745,11,0.034,26,0.029,27,0.029,34,2.867,103,1.421,149,2.619,158,3.331,161,2.929,270,3.22,313,3.663,314,3.663,364,3.043,371,3.87,381,2.619,429,1.839,434,3.043,435,3.043,436,3.686,437,4.689,438,3.686,439,4.689,440,3.686,441,3.686,442,5.426,443,4.689,444,4.689,445,3.686]],["title/index.html",[7,0.521,446,1.834,447,1.834]],["body/index.html",[5,0.388,11,0.025,15,0.38,26,0.014,27,0.011,31,0.513,67,2.437,99,1.744,102,0.572,107,0.73,120,2.76,133,0.986,134,1.15,151,0.849,191,1.712,193,1.464,199,0.572,216,1.108,246,0.73,255,0.849,258,0.849,261,1.464,264,1.464,266,2.59,272,0.849,273,2.295,307,3.034,319,0.849,321,1.93,344,2.59,354,3.034,356,2.295,360,2.437,361,1.46,397,0.849,404,0.849,409,2.295,415,0.849,446,0.73,447,0.73,448,3.783,449,2.832,450,3.137,451,2.338,452,2.781,453,1.26,454,1.028,455,1.028,456,1.028,457,1.773,458,4.219,459,1.773,460,3.676,461,2.338,462,2.338,463,1.028,464,4.476,465,1.773,466,1.028,467,1.028,468,1.028,469,1.028,470,3.137,471,3.137,472,2.781,473,3.676,474,1.773,475,2.338,476,1.028,477,2.781,478,1.773,479,1.028,480,1.028,481,2.781,482,2.338,483,2.338,484,1.028,485,1.028,486,1.028,487,1.773,488,1.028,489,1.028,490,1.028,491,1.028,492,1.028,493,1.028,494,1.028,495,1.773,496,1.028,497,3.137,498,3.884,499,1.028,500,2.295,501,3.206,502,1.028,503,1.773,504,1.028,505,1.028,506,1.464,507,1.028,508,1.028,509,1.028,510,1.028,511,1.028,512,1.773,513,1.028,514,2.781,515,1.028,516,0.849,517,0.849,518,1.773,519,1.028,520,1.773,521,1.028,522,1.028,523,1.028,524,1.028,525,1.028,526,1.028,527,1.93,528,2.338,529,1.028,530,1.028,531,1.028,532,1.028,533,1.028,534,1.773,535,1.028,536,2.338,537,1.773,538,2.338,539,1.028,540,1.773,541,1.028,542,3.137,543,3.676,544,2.338,545,1.773,546,1.028,547,1.028,548,1.773,549,1.773,550,1.028,551,3.137,552,2.338,553,1.773,554,1.028,555,2.338,556,1.773,557,1.93,558,1.028,559,1.028,560,1.028,561,1.028,562,1.028,563,1.773,564,2.781,565,1.773,566,1.773,567,1.773,568,0.849,569,1.773,570,1.028,571,1.028,572,1.773,573,1.773,574,1.028,575,1.028,576,1.93,577,1.028,578,1.028,579,1.028,580,1.028,581,1.773,582,1.028,583,1.028,584,1.028,585,1.028,586,1.028,587,1.028,588,1.028,589,1.028,590,1.028,591,1.028,592,1.028,593,1.028,594,1.028,595,1.028,596,0.849,597,1.028,598,1.028,599,1.028,600,1.028,601,1.773,602,1.028,603,1.028,604,1.028,605,1.028,606,1.028,607,1.028,608,3.884,609,1.028,610,1.028,611,1.773,612,1.773,613,2.781,614,1.028,615,1.028,616,1.028,617,1.028,618,1.028,619,1.028,620,2.338,621,1.26,622,1.773,623,1.028,624,1.028,625,2.338,626,1.773,627,1.028,628,1.028,629,1.028,630,1.028,631,1.028,632,1.028,633,1.028,634,1.028,635,1.028,636,1.028,637,1.028,638,1.028,639,1.028,640,1.028,641,1.028,642,1.028,643,1.028,644,1.028,645,1.773,646,1.028,647,1.773,648,1.028,649,1.028,650,1.028,651,1.028,652,1.028,653,1.028,654,1.028,655,1.028,656,1.028,657,1.028,658,1.028,659,2.781,660,1.028,661,1.028,662,1.028,663,1.028,664,1.028,665,1.028,666,1.773,667,1.028,668,3.137,669,1.028,670,1.028,671,1.773,672,1.028,673,1.028,674,1.773,675,1.028,676,1.028,677,1.028,678,1.028,679,1.773,680,1.028,681,1.773,682,1.028,683,1.028,684,1.028,685,1.028,686,1.028,687,1.028,688,1.028,689,1.028,690,1.028,691,1.028,692,2.781,693,1.028,694,1.028,695,1.773,696,1.773,697,1.028,698,1.028,699,1.028,700,1.46,701,1.028,702,1.028,703,0.73,704,1.773,705,1.028,706,1.028,707,1.028,708,1.028]],["title/license.html",[446,1.834,447,1.834,700,1.612]],["body/license.html",[11,0.025,26,0.025,27,0.025,46,1.898,361,1.898,392,2.508,500,2.508,516,2.508,517,3.408,557,2.508,596,2.508,700,1.898,703,2.159,709,4.69,710,3.039,711,3.039,712,2.508,713,2.508,714,4.129,715,3.039,716,3.039,717,3.039,718,3.039,719,3.039,720,4.129,721,5.727,722,3.039,723,3.039,724,3.039,725,4.69,726,3.039,727,4.129,728,3.039,729,3.039,730,3.039,731,3.039,732,3.039,733,3.039,734,3.039,735,3.039,736,3.039,737,4.129,738,3.039,739,3.039,740,3.039,741,3.039,742,3.039,743,3.039,744,4.129,745,4.129,746,3.039,747,3.039,748,3.039,749,3.039,750,3.039,751,3.039,752,3.039,753,3.039,754,3.039,755,3.039,756,3.039,757,3.039,758,3.039,759,3.039,760,3.039,761,3.039,762,3.039,763,3.039,764,3.039,765,3.039,766,3.039,767,3.039,768,3.039,769,3.039,770,3.039,771,3.039,772,3.039]],["title/modules.html",[30,1.694]],["body/modules.html",[11,0.031,26,0.031,27,0.031,29,2.612,30,1.703,40,2.325,41,2.325,42,2.325,43,2.325,527,4.185,773,5.07,774,5.07,775,5.811,776,5.457,777,5.457]],["title/overview.html",[453,2.955]],["body/overview.html",[2,1.849,11,0.036,18,2.448,26,0.027,27,0.027,28,0.829,29,3.731,30,1.354,31,1.659,32,2.362,33,2.362,34,1.849,35,2.362,36,2.362,37,2.744,38,2.744,39,2.744,40,2.728,41,2.728,42,2.728,43,3.158,44,3.115,45,2.362,46,2.076,55,2.076,83,2.362,92,1.496,107,2.362,203,2.728,220,2.362,295,2.744,296,2.744,297,2.448,453,2.362,506,2.744,568,2.744,778,3.324]],["title/properties.html",[97,1.361,387,2.13]],["body/properties.html",[11,0.037,26,0.032,27,0.032,97,1.632,700,2.76,703,3.14,712,3.648,713,3.648,779,4.419,780,4.419,781,4.419,782,4.419]],["title/miscellaneous/variables.html",[429,1.288,621,2.618]],["body/miscellaneous/variables.html",[7,0.578,11,0.037,26,0.024,27,0.024,28,0.987,72,3.485,98,2.032,103,1.352,144,2.814,191,1.427,220,2.814,234,2.361,238,4.398,259,3.27,361,1.787,367,2.361,368,3.27,369,3.27,372,2.361,373,3.27,374,3.27,375,2.361,376,3.27,377,3.27,378,3.27,379,2.361,380,3.27,381,2.032,429,1.427,433,4.398,435,2.361,448,2.361,449,2.361,501,3.27,576,2.361,621,2.032,783,2.86,784,4.544,785,2.86,786,2.86,787,2.86,788,2.86,789,2.86,790,2.86,791,2.86,792,2.86,793,2.86,794,2.86,795,2.86,796,2.86,797,3.961,798,2.86,799,2.86,800,2.86,801,2.86,802,2.86,803,2.86,804,2.86,805,2.86,806,2.86,807,2.86,808,2.86,809,2.86,810,2.86,811,2.86,812,2.86]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":189,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["0.0.1",{"_index":780,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":107,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"overview.html":{}}}],["10,000",{"_index":502,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":86,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["2",{"_index":568,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.2.2",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":711,"title":{},"body":{"license.html":{}}}],["25)@isnotemptystring",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["3",{"_index":506,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["37.4.2",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":83,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["5.0.1",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["5.1.7",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["5.3.10",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["5.94.0",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":778,"title":{},"body":{"overview.html":{}}}],["60",{"_index":82,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["7.4.2",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9.0.2",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":743,"title":{},"body":{"license.html":{}}}],["access",{"_index":483,"title":{},"body":{"index.html":{}}}],["action",{"_index":767,"title":{},"body":{"license.html":{}}}],["actions",{"_index":549,"title":{},"body":{"index.html":{}}}],["add",{"_index":625,"title":{},"body":{"index.html":{}}}],["addserver(swaggerserver",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":133,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["admin/project",{"_index":668,"title":{},"body":{"index.html":{}}}],["admins",{"_index":486,"title":{},"body":{"index.html":{}}}],["afterinsert",{"_index":243,"title":{},"body":{"entities/User.html":{}}}],["afterremove",{"_index":244,"title":{},"body":{"entities/User.html":{}}}],["afterupdate",{"_index":245,"title":{},"body":{"entities/User.html":{}}}],["allows",{"_index":456,"title":{},"body":{"index.html":{}}}],["analysis",{"_index":584,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":680,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":570,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":735,"title":{},"body":{"license.html":{}}}],["api",{"_index":450,"title":{},"body":{"index.html":{}}}],["api.git",{"_index":615,"title":{},"body":{"index.html":{}}}],["api2",{"_index":617,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":327,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apioperation",{"_index":328,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apiresponse",{"_index":329,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apitags",{"_index":330,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["app",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":68,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["app_port",{"_index":150,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["app_port:number",{"_index":177,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":579,"title":{},"body":{"index.html":{}}}],["applications",{"_index":524,"title":{},"body":{"index.html":{}}}],["applied",{"_index":603,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":496,"title":{},"body":{"index.html":{}}}],["arising",{"_index":771,"title":{},"body":{"license.html":{}}}],["assign",{"_index":490,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":461,"title":{},"body":{"index.html":{}}}],["assignment",{"_index":474,"title":{},"body":{"index.html":{}}}],["associated",{"_index":722,"title":{},"body":{"license.html":{}}}],["async",{"_index":78,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["attachments",{"_index":679,"title":{},"body":{"index.html":{}}}],["auth",{"_index":532,"title":{},"body":{"index.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/login",{"_index":661,"title":{},"body":{"index.html":{}}}],["auth/signup",{"_index":660,"title":{},"body":{"index.html":{}}}],["authenticate",{"_index":662,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":477,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":782,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":760,"title":{},"body":{"license.html":{}}}],["auto",{"_index":655,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":602,"title":{},"body":{"index.html":{}}}],["available",{"_index":777,"title":{},"body":{"modules.html":{}}}],["b",{"_index":694,"title":{},"body":{"index.html":{}}}],["backend",{"_index":451,"title":{},"body":{"index.html":{}}}],["badge",{"_index":595,"title":{},"body":{"index.html":{}}}],["base.dto",{"_index":137,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["base.dto.ts",{"_index":284,"title":{},"body":{"classes/UserBaseDto.html":{},"coverage.html":{}}}],["base.dto.ts:11",{"_index":287,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:13",{"_index":285,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:15",{"_index":288,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:8",{"_index":286,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["based",{"_index":482,"title":{},"body":{"index.html":{}}}],["better",{"_index":491,"title":{},"body":{"index.html":{}}}],["body",{"_index":318,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["body:any",{"_index":353,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":555,"title":{},"body":{"index.html":{}}}],["browse",{"_index":775,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":773,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":572,"title":{},"body":{"index.html":{}}}],["build",{"_index":576,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":522,"title":{},"body":{"index.html":{}}}],["builds",{"_index":578,"title":{},"body":{"index.html":{}}}],["built",{"_index":455,"title":{},"body":{"index.html":{}}}],["c",{"_index":710,"title":{},"body":{"license.html":{}}}],["cache",{"_index":73,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["cachemodule",{"_index":65,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["cachemodule.registerasync",{"_index":76,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["categorization",{"_index":492,"title":{},"body":{"index.html":{}}}],["cd",{"_index":616,"title":{},"body":{"index.html":{}}}],["change",{"_index":675,"title":{},"body":{"index.html":{}}}],["changes",{"_index":475,"title":{},"body":{"index.html":{}}}],["character",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["charge",{"_index":717,"title":{},"body":{"license.html":{}}}],["checker",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["checkout",{"_index":693,"title":{},"body":{"index.html":{}}}],["checks",{"_index":558,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":537,"title":{},"body":{"index.html":{}}}],["claim",{"_index":763,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":92,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"overview.html":{}}}],["cli",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["clone",{"_index":611,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":295,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":296,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":543,"title":{},"body":{"index.html":{}}}],["codecov",{"_index":567,"title":{},"body":{"index.html":{}}}],["column",{"_index":226,"title":{},"body":{"entities/User.html":{}}}],["column(undefined",{"_index":232,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":236,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":224,"title":{},"body":{"entities/User.html":{}}}],["column({unique:true",{"_index":250,"title":{},"body":{"entities/User.html":{}}}],["commit",{"_index":696,"title":{},"body":{"index.html":{}}}],["common/decorators/validator.decotrator",{"_index":168,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/UserBaseDto.html":{}}}],["common/dto/id",{"_index":323,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["common/embedded/registry",{"_index":242,"title":{},"body":{"entities/User.html":{}}}],["communication",{"_index":533,"title":{},"body":{"index.html":{}}}],["completion",{"_index":684,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":742,"title":{},"body":{"license.html":{}}}],["config.document.ts",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":63,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["configmodule.forroot",{"_index":70,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["configservice.getorthrow('datasource_database",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_host",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_password",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_port",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_username",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice:configservice",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":626,"title":{},"body":{"index.html":{}}}],["configuration/configuration.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration/test",{"_index":145,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configurationmodule",{"_index":41,"title":{"modules/ConfigurationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules.html":{},"overview.html":{}}}],["connection",{"_index":516,"title":{},"body":{"index.html":{},"license.html":{}}}],["consistency",{"_index":561,"title":{},"body":{"index.html":{}}}],["console",{"_index":275,"title":{},"body":{"entities/User.html":{}}}],["console.log('insert",{"_index":280,"title":{},"body":{"entities/User.html":{}}}],["console.log('remove",{"_index":282,"title":{},"body":{"entities/User.html":{}}}],["console.log('update",{"_index":278,"title":{},"body":{"entities/User.html":{}}}],["console.log(typeof",{"_index":337,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["console.log({ttl,max",{"_index":88,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["const",{"_index":79,"title":{},"body":{"modules/ConfigurationModule.html":{},"classes/EnvironmentVariables.html":{},"entities/User.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{}}}],["contact",{"_index":704,"title":{},"body":{"index.html":{}}}],["continuous",{"_index":540,"title":{},"body":{"index.html":{}}}],["contract",{"_index":768,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":687,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":688,"title":{},"body":{"index.html":{}}}],["control",{"_index":484,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["controller('users",{"_index":332,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"overview.html":{}}}],["controllers:[userswritecontroller",{"_index":305,"title":{},"body":{"modules/UsersModule.html":{}}}],["copies",{"_index":737,"title":{},"body":{"license.html":{}}}],["copy",{"_index":720,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":709,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":360,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":354,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["createdat",{"_index":209,"title":{},"body":{"classes/RegistryDate.html":{}}}],["createdatecolumn",{"_index":212,"title":{},"body":{"classes/RegistryDate.html":{}}}],["createuser",{"_index":343,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuser(@body",{"_index":352,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuser(body",{"_index":345,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuserdto",{"_index":91,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["current",{"_index":264,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["damages",{"_index":764,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":681,"title":{},"body":{"index.html":{}}}],["data",{"_index":508,"title":{},"body":{"index.html":{}}}],["database",{"_index":501,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["database_host=localhost",{"_index":627,"title":{},"body":{"index.html":{}}}],["database_name=task_management_db",{"_index":631,"title":{},"body":{"index.html":{}}}],["database_password=your_db_password",{"_index":630,"title":{},"body":{"index.html":{}}}],["database_port=5432",{"_index":628,"title":{},"body":{"index.html":{}}}],["database_url",{"_index":151,"title":{},"body":{"classes/EnvironmentVariables.html":{},"index.html":{}}}],["database_url:number",{"_index":179,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_user=your_db_user",{"_index":629,"title":{},"body":{"index.html":{}}}],["databasedevconfig",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":42,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["datasource_database",{"_index":152,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_database:string",{"_index":175,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_host",{"_index":153,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_host:string",{"_index":176,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_password",{"_index":154,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_password:string",{"_index":174,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_port",{"_index":155,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_port:number",{"_index":178,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_username",{"_index":156,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_username:string",{"_index":173,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["date",{"_index":211,"title":{},"body":{"classes/RegistryDate.html":{},"entities/User.html":{}}}],["date().toisostring",{"_index":263,"title":{},"body":{"entities/User.html":{}}}],["date.ts",{"_index":208,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["date.ts:5",{"_index":213,"title":{},"body":{"classes/RegistryDate.html":{}}}],["date.ts:7",{"_index":215,"title":{},"body":{"classes/RegistryDate.html":{}}}],["db.config",{"_index":146,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["db.config.ts",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":724,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":772,"title":{},"body":{"license.html":{}}}],["debug",{"_index":87,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{}}}],["default",{"_index":238,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["delete",{"_index":319,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["delete(\":id",{"_index":339,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["delete(':id')@apitags()@apioperation({})@apiresponse",{"_index":311,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser",{"_index":308,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser(@param",{"_index":340,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser(undefined",{"_index":310,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":577,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":536,"title":{},"body":{"index.html":{}}}],["deployments",{"_index":547,"title":{},"body":{"index.html":{}}}],["deploys",{"_index":580,"title":{},"body":{"index.html":{}}}],["description",{"_index":781,"title":{},"body":{"properties.html":{}}}],["details",{"_index":261,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["dev.config.ts",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":462,"title":{},"body":{"index.html":{}}}],["directly",{"_index":593,"title":{},"body":{"index.html":{}}}],["display",{"_index":598,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":733,"title":{},"body":{"license.html":{}}}],["docs6",{"_index":648,"title":{},"body":{"index.html":{}}}],["docsapi",{"_index":650,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":361,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentationn",{"_index":647,"title":{},"body":{"index.html":{}}}],["documentbuilder",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropschema",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":324,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["dto.ts",{"_index":198,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["dto.ts:7",{"_index":201,"title":{},"body":{"classes/IdDto.html":{}}}],["dto/update",{"_index":325,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["e.g",{"_index":258,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["each",{"_index":467,"title":{},"body":{"index.html":{}}}],["effect",{"_index":257,"title":{},"body":{"entities/User.html":{}}}],["efficient",{"_index":523,"title":{},"body":{"index.html":{}}}],["email",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["email:string",{"_index":251,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["email_host=smtp.example.com",{"_index":634,"title":{},"body":{"index.html":{}}}],["email_password=your_email_password",{"_index":637,"title":{},"body":{"index.html":{}}}],["email_port=587",{"_index":635,"title":{},"body":{"index.html":{}}}],["email_user=your_email@example.com",{"_index":636,"title":{},"body":{"index.html":{}}}],["enablecircularcheck:true",{"_index":184,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["endpoints",{"_index":658,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":293,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["enforces",{"_index":585,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":542,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":560,"title":{},"body":{"index.html":{}}}],["entities",{"_index":220,"title":{},"body":{"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":219,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["entity.ts",{"_index":222,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":227,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:13",{"_index":230,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:15",{"_index":225,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:17",{"_index":231,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:24",{"_index":240,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:27",{"_index":235,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:9",{"_index":229,"title":{},"body":{"entities/User.html":{}}}],["entity/user",{"_index":291,"title":{},"body":{"classes/UserBaseDto.html":{},"modules/UsersModule.html":{}}}],["enum",{"_index":237,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["enumerations",{"_index":430,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":518,"title":{},"body":{"index.html":{}}}],["env.dev",{"_index":75,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["env.example",{"_index":623,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":74,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["environment",{"_index":193,"title":{},"body":{"classes/EnvironmentVariables.html":{},"index.html":{}}}],["environmentvariables",{"_index":148,"title":{"classes/EnvironmentVariables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["envvalidator",{"_index":371,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["envvalidator(providedconfig",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["envvalidator(providedconfig:record",{"_index":181,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error(`${errors.length",{"_index":192,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors",{"_index":185,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors.length",{"_index":188,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["eslint",{"_index":562,"title":{},"body":{"index.html":{}}}],["etc",{"_index":671,"title":{},"body":{"index.html":{}}}],["event",{"_index":759,"title":{},"body":{"license.html":{}}}],["example",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"index.html":{}}}],["execute",{"_index":676,"title":{},"body":{"index.html":{}}}],["explore",{"_index":651,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":392,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["externals",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":234,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":692,"title":{},"body":{"index.html":{}}}],["feature/your",{"_index":695,"title":{},"body":{"index.html":{}}}],["features",{"_index":476,"title":{},"body":{"index.html":{}}}],["feel",{"_index":706,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":723,"title":{},"body":{"license.html":{}}}],["firstname",{"_index":100,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["firstname:string",{"_index":248,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["fitness",{"_index":755,"title":{},"body":{"license.html":{}}}],["follow",{"_index":691,"title":{},"body":{"index.html":{}}}],["following",{"_index":557,"title":{},"body":{"index.html":{},"license.html":{}}}],["fork",{"_index":397,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["found",{"_index":195,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["framework",{"_index":521,"title":{},"body":{"index.html":{}}}],["free",{"_index":500,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":180,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["functions",{"_index":434,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":740,"title":{},"body":{"license.html":{}}}],["gates",{"_index":586,"title":{},"body":{"index.html":{}}}],["gb",{"_index":507,"title":{},"body":{"index.html":{}}}],["generated",{"_index":656,"title":{},"body":{"index.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":446,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["git",{"_index":613,"title":{},"body":{"index.html":{}}}],["github",{"_index":548,"title":{},"body":{"index.html":{}}}],["granted",{"_index":716,"title":{},"body":{"license.html":{}}}],["graph",{"_index":776,"title":{},"body":{"modules.html":{}}}],["handling",{"_index":531,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["hereby",{"_index":715,"title":{},"body":{"license.html":{}}}],["high",{"_index":587,"title":{},"body":{"index.html":{}}}],["holders",{"_index":761,"title":{},"body":{"license.html":{}}}],["host",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api",{"_index":653,"title":{},"body":{"index.html":{}}}],["https://github.com/yourusername/task",{"_index":614,"title":{},"body":{"index.html":{}}}],["id",{"_index":199,"title":{},"body":{"classes/IdDto.html":{},"entities/User.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"index.html":{}}}],["id:number",{"_index":247,"title":{},"body":{"entities/User.html":{}}}],["iddto",{"_index":196,"title":{"classes/IdDto.html":{}},"body":{"classes/IdDto.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["identifier",{"_index":349,"title":{},"body":{"injectables/WriteUserService.html":{},"coverage.html":{}}}],["implied",{"_index":751,"title":{},"body":{"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["improvements",{"_index":678,"title":{},"body":{"index.html":{}}}],["include",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["included",{"_index":596,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":727,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["information",{"_index":667,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{},"overview.html":{}}}],["insert",{"_index":279,"title":{},"body":{"entities/User.html":{}}}],["install",{"_index":618,"title":{},"body":{"index.html":{}}}],["install3",{"_index":619,"title":{},"body":{"index.html":{}}}],["installed",{"_index":606,"title":{},"body":{"index.html":{}}}],["instance",{"_index":515,"title":{},"body":{"index.html":{}}}],["instead",{"_index":265,"title":{},"body":{"entities/User.html":{}}}],["integrates",{"_index":582,"title":{},"body":{"index.html":{}}}],["integration",{"_index":541,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":526,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["isenum",{"_index":289,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["isenum(userrole",{"_index":131,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["isglobal",{"_index":71,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["isnan(ttl",{"_index":89,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["isnotemptystring",{"_index":161,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/UserBaseDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotemptystring(validationoption",{"_index":441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispositive",{"_index":202,"title":{},"body":{"classes/IdDto.html":{}}}],["ispositiveinteger",{"_index":158,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ispositiveinteger(validationoption",{"_index":445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isstrongpassword",{"_index":138,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstrongpassword({minlength",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issues",{"_index":575,"title":{},"body":{"index.html":{}}}],["jordach",{"_index":712,"title":{},"body":{"license.html":{},"properties.html":{}}}],["jwt",{"_index":481,"title":{},"body":{"index.html":{}}}],["jwt_secret=your_secret_key",{"_index":633,"title":{},"body":{"index.html":{}}}],["key",{"_index":657,"title":{},"body":{"index.html":{}}}],["kind",{"_index":750,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":101,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["lastname:string",{"_index":249,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":290,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["length(5",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["length(5,25",{"_index":292,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["levels",{"_index":489,"title":{},"body":{"index.html":{}}}],["liability",{"_index":765,"title":{},"body":{"license.html":{}}}],["liable",{"_index":762,"title":{},"body":{"license.html":{}}}],["licence",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":700,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":701,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":728,"title":{},"body":{"license.html":{}}}],["limited",{"_index":752,"title":{},"body":{"license.html":{}}}],["linting",{"_index":559,"title":{},"body":{"index.html":{}}}],["locally",{"_index":605,"title":{},"body":{"index.html":{}}}],["log",{"_index":262,"title":{},"body":{"entities/User.html":{}}}],["logging",{"_index":259,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":479,"title":{},"body":{"index.html":{}}}],["long",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lowercase",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["m",{"_index":697,"title":{},"body":{"index.html":{}}}],["main",{"_index":554,"title":{},"body":{"index.html":{}}}],["maintainability",{"_index":574,"title":{},"body":{"index.html":{}}}],["maintainer",{"_index":707,"title":{},"body":{"index.html":{}}}],["makaya",{"_index":713,"title":{},"body":{"license.html":{},"properties.html":{}}}],["manage",{"_index":457,"title":{},"body":{"index.html":{}}}],["management",{"_index":449,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["manager",{"_index":67,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{},"index.html":{}}}],["managers",{"_index":487,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max:number",{"_index":84,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["measures",{"_index":591,"title":{},"body":{"index.html":{}}}],["member",{"_index":466,"title":{},"body":{"index.html":{}}}],["members",{"_index":488,"title":{},"body":{"index.html":{}}}],["memory",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":754,"title":{},"body":{"license.html":{}}}],["merge",{"_index":731,"title":{},"body":{"license.html":{}}}],["message",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["metadata",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["middleware",{"_index":530,"title":{},"body":{"index.html":{}}}],["migration:run5",{"_index":643,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":601,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":140,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlowercase",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minnumbers",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minsymbols",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minuppercase",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":429,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":703,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mobile",{"_index":686,"title":{},"body":{"index.html":{}}}],["moderator",{"_index":135,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{}}}],["modify",{"_index":730,"title":{},"body":{"license.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":505,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":528,"title":{},"body":{"index.html":{}}}],["name",{"_index":270,"title":{},"body":{"entities/User.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":267,"title":{},"body":{"entities/User.html":{}}}],["neon",{"_index":497,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":452,"title":{},"body":{"index.html":{}}}],["nestjs/cache",{"_index":66,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"injectables/ReadOnlyUserService.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":64,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":69,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":331,"title":{},"body":{"controllers/UsersWriteController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":143,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":191,"title":{},"body":{"classes/EnvironmentVariables.html":{},"entities/User.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":520,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":157,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["node_env:string",{"_index":172,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["nodemailer",{"_index":534,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":758,"title":{},"body":{"license.html":{}}}],["notice",{"_index":744,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":473,"title":{},"body":{"index.html":{}}}],["notified",{"_index":493,"title":{},"body":{"index.html":{}}}],["npm",{"_index":609,"title":{},"body":{"index.html":{}}}],["number",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["obtain",{"_index":663,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":719,"title":{},"body":{"license.html":{}}}],["offers",{"_index":499,"title":{},"body":{"index.html":{}}}],["only.user.service",{"_index":301,"title":{},"body":{"modules/UsersModule.html":{}}}],["only.user.service.ts",{"_index":205,"title":{},"body":{"injectables/ReadOnlyUserService.html":{},"coverage.html":{}}}],["open",{"_index":699,"title":{},"body":{"index.html":{}}}],["operation",{"_index":260,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":314,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["organize",{"_index":404,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["origin",{"_index":698,"title":{},"body":{"index.html":{}}}],["orm",{"_index":525,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":770,"title":{},"body":{"license.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":453,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":387,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":320,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["parameters",{"_index":313,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.cache_max_ttl",{"_index":85,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["parseint(process.env.cache_ttl",{"_index":81,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["particular",{"_index":756,"title":{},"body":{"license.html":{}}}],["pass",{"_index":276,"title":{},"body":{"entities/User.html":{}}}],["passport.js",{"_index":529,"title":{},"body":{"index.html":{}}}],["password",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["password:string",{"_index":252,"title":{},"body":{"entities/User.html":{}}}],["password@@201",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["patch",{"_index":321,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["patch(\"/:id",{"_index":334,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["patch('/:id')@apitags()@apioperation({})@apiresponse({})@apibody",{"_index":316,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["payload",{"_index":357,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["per",{"_index":504,"title":{},"body":{"index.html":{}}}],["perform",{"_index":255,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["permission",{"_index":714,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":468,"title":{},"body":{"index.html":{}}}],["permit",{"_index":738,"title":{},"body":{"license.html":{}}}],["person",{"_index":718,"title":{},"body":{"license.html":{}}}],["persons",{"_index":739,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":538,"title":{},"body":{"index.html":{}}}],["plaintoinstance",{"_index":169,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoinstance(environmentvariables,providedconfig",{"_index":183,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["please",{"_index":690,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":747,"title":{},"body":{"license.html":{}}}],["post",{"_index":659,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":498,"title":{},"body":{"index.html":{}}}],["potential",{"_index":571,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":610,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":233,"title":{},"body":{"entities/User.html":{},"controllers/UsersWriteController.html":{}}}],["prefix:false",{"_index":254,"title":{},"body":{"entities/User.html":{}}}],["prerequisites",{"_index":604,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":228,"title":{},"body":{"entities/User.html":{}}}],["process.env.mit_licence_url",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_server",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_title",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":581,"title":{},"body":{"index.html":{}}}],["project",{"_index":464,"title":{},"body":{"index.html":{}}}],["projects",{"_index":460,"title":{},"body":{"index.html":{}}}],["projects/:id",{"_index":669,"title":{},"body":{"index.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"properties.html":{}}}],["provide",{"_index":682,"title":{},"body":{"index.html":{}}}],["provided",{"_index":748,"title":{},"body":{"license.html":{}}}],["providedconfig",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["publish",{"_index":732,"title":{},"body":{"license.html":{}}}],["pull",{"_index":552,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":757,"title":{},"body":{"license.html":{}}}],["push",{"_index":551,"title":{},"body":{"index.html":{}}}],["pushed",{"_index":672,"title":{},"body":{"index.html":{}}}],["quality",{"_index":544,"title":{},"body":{"index.html":{}}}],["questions",{"_index":705,"title":{},"body":{"index.html":{}}}],["rates",{"_index":685,"title":{},"body":{"index.html":{}}}],["rbac",{"_index":485,"title":{},"body":{"index.html":{}}}],["read/read",{"_index":300,"title":{},"body":{"modules/UsersModule.html":{}}}],["readme",{"_index":597,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{}}}],["readonlyuserservice",{"_index":203,"title":{"injectables/ReadOnlyUserService.html":{}},"body":{"injectables/ReadOnlyUserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["real",{"_index":470,"title":{},"body":{"index.html":{}}}],["receive",{"_index":494,"title":{},"body":{"index.html":{}}}],["record",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reflect",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":478,"title":{},"body":{"index.html":{}}}],["registry",{"_index":223,"title":{},"body":{"entities/User.html":{}}}],["registrydate",{"_index":206,"title":{"classes/RegistryDate.html":{}},"body":{"classes/RegistryDate.html":{},"entities/User.html":{},"coverage.html":{}}}],["remove",{"_index":281,"title":{},"body":{"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["remove(identifier",{"_index":347,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["remove(identifier:number",{"_index":358,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["removes",{"_index":359,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["reports",{"_index":566,"title":{},"body":{"index.html":{}}}],["repository",{"_index":612,"title":{},"body":{"index.html":{}}}],["request",{"_index":553,"title":{},"body":{"index.html":{}}}],["requests",{"_index":503,"title":{},"body":{"index.html":{}}}],["required",{"_index":665,"title":{},"body":{"index.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["restriction",{"_index":726,"title":{},"body":{"license.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariables.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["rights",{"_index":729,"title":{},"body":{"license.html":{}}}],["role",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["roles",{"_index":246,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["roles.ts",{"_index":432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["root",{"_index":624,"title":{},"body":{"index.html":{}}}],["run",{"_index":409,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["running",{"_index":641,"title":{},"body":{"index.html":{}}}],["runs",{"_index":556,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":495,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":510,"title":{},"body":{"index.html":{}}}],["scans",{"_index":588,"title":{},"body":{"index.html":{}}}],["schema",{"_index":642,"title":{},"body":{"index.html":{}}}],["script",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["seamless",{"_index":546,"title":{},"body":{"index.html":{}}}],["secret",{"_index":632,"title":{},"body":{"index.html":{}}}],["security",{"_index":589,"title":{},"body":{"index.html":{}}}],["see",{"_index":622,"title":{},"body":{"index.html":{}}}],["sell",{"_index":736,"title":{},"body":{"license.html":{}}}],["sending",{"_index":535,"title":{},"body":{"index.html":{}}}],["serve",{"_index":649,"title":{},"body":{"index.html":{}}}],["server",{"_index":645,"title":{},"body":{"index.html":{}}}],["service",{"_index":277,"title":{},"body":{"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["sessions",{"_index":480,"title":{},"body":{"index.html":{}}}],["set",{"_index":620,"title":{},"body":{"index.html":{}}}],["setdescription(\"api",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlicense(\"mit\",licence",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":639,"title":{},"body":{"index.html":{}}}],["settitle(swaggertitle",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":511,"title":{},"body":{"index.html":{}}}],["setversion(\"1.0",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":745,"title":{},"body":{"license.html":{}}}],["side",{"_index":256,"title":{},"body":{"entities/User.html":{}}}],["sign",{"_index":513,"title":{},"body":{"index.html":{}}}],["skipmissingproperties:false",{"_index":187,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["smells",{"_index":590,"title":{},"body":{"index.html":{}}}],["software",{"_index":721,"title":{},"body":{"license.html":{}}}],["sonarcloud",{"_index":569,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["special",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sqlite",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["src/.../database",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../swagger",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.const.ts",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validator.decotrator.ts",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":60,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/decorators/validator.decotrator.ts",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dto/id",{"_index":197,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["src/common/embedded/registry",{"_index":207,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["src/configuration/configuration.module.ts",{"_index":61,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["src/configuration/database",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/env.validation.ts",{"_index":149,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/configuration/env.validation.ts:11",{"_index":166,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:13",{"_index":164,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:15",{"_index":162,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:17",{"_index":163,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:21",{"_index":159,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:23",{"_index":165,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:25",{"_index":160,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:9",{"_index":167,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/swagger",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/swagger.const.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/test",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":141,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/main.ts",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":93,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":218,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":283,"title":{},"body":{"classes/UserBaseDto.html":{},"coverage.html":{}}}],["src/users/entity/user",{"_index":221,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/read/read",{"_index":204,"title":{},"body":{"injectables/ReadOnlyUserService.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":298,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/write/write.user.controller.ts",{"_index":306,"title":{},"body":{"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["src/users/write/write.user.controller.ts:18",{"_index":317,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["src/users/write/write.user.controller.ts:28",{"_index":312,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["src/users/write/write.user.service.ts",{"_index":342,"title":{},"body":{"injectables/WriteUserService.html":{},"coverage.html":{}}}],["src/users/write/write.user.service.ts:11",{"_index":351,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["src/users/write/write.user.service.ts:15",{"_index":348,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["src/users/write/write.user.service.ts:7",{"_index":346,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["start",{"_index":644,"title":{},"body":{"index.html":{}}}],["start:dev6",{"_index":646,"title":{},"body":{"index.html":{}}}],["started",{"_index":447,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":654,"title":{},"body":{"index.html":{}}}],["statements",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":583,"title":{},"body":{"index.html":{}}}],["status",{"_index":273,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["statuses",{"_index":674,"title":{},"body":{"index.html":{}}}],["steps",{"_index":512,"title":{},"body":{"index.html":{}}}],["storage",{"_index":509,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/WriteUserService.html":{},"index.html":{}}}],["subject",{"_index":741,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":734,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":673,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":746,"title":{},"body":{"license.html":{}}}],["successful",{"_index":274,"title":{},"body":{"entities/User.html":{}}}],["such",{"_index":463,"title":{},"body":{"index.html":{}}}],["sufficient",{"_index":594,"title":{},"body":{"index.html":{}}}],["support",{"_index":527,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supports",{"_index":469,"title":{},"body":{"index.html":{}}}],["svg",{"_index":774,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":415,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swaggerconfig",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerserver",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggertitle",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":454,"title":{},"body":{"index.html":{}}}],["table",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":448,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":458,"title":{},"body":{"index.html":{}}}],["tasks/:id",{"_index":670,"title":{},"body":{"index.html":{}}}],["team",{"_index":465,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":519,"title":{},"body":{"index.html":{}}}],["terser",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["test",{"_index":545,"title":{},"body":{"index.html":{}}}],["testdbconfig",{"_index":144,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testfuture",{"_index":677,"title":{},"body":{"index.html":{}}}],["tests",{"_index":564,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.firstname",{"_index":271,"title":{},"body":{"entities/User.html":{}}}],["this.id",{"_index":269,"title":{},"body":{"entities/User.html":{}}}],["this.userwriteservice.remove(id",{"_index":341,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["this.userwriteservice.update(id,updateuserdto",{"_index":338,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["throw",{"_index":190,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["tier",{"_index":599,"title":{},"body":{"index.html":{}}}],["time",{"_index":471,"title":{},"body":{"index.html":{}}}],["token",{"_index":664,"title":{},"body":{"index.html":{}}}],["tort",{"_index":769,"title":{},"body":{"license.html":{}}}],["track",{"_index":683,"title":{},"body":{"index.html":{}}}],["tracks",{"_index":592,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":170,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"dependencies.html":{}}}],["triggers",{"_index":550,"title":{},"body":{"index.html":{}}}],["true",{"_index":72,"title":{},"body":{"modules/ConfigurationModule.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":90,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["ttl:number",{"_index":80,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["type",{"_index":103,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type(undefined)@ispositive",{"_index":200,"title":{},"body":{"classes/IdDto.html":{}}}],["typeorm",{"_index":216,"title":{},"body":{"classes/RegistryDate.html":{},"entities/User.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/decorator/entity/entity",{"_index":241,"title":{},"body":{"entities/User.html":{}}}],["typeormmodule",{"_index":142,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":304,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(testdbconfig",{"_index":147,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":239,"title":{},"body":{"entities/User.html":{}}}],["under",{"_index":702,"title":{},"body":{"index.html":{}}}],["unit",{"_index":563,"title":{},"body":{"index.html":{}}}],["up",{"_index":514,"title":{},"body":{"index.html":{}}}],["update",{"_index":344,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["update(identifier",{"_index":350,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["update(identifier:number,updateuserdto:updateuserdto",{"_index":355,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["updated",{"_index":272,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["updatedat",{"_index":210,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updatedatecolumn",{"_index":214,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updates",{"_index":356,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["updateuser",{"_index":309,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuser(@param",{"_index":335,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuser(undefined",{"_index":315,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuserdto",{"_index":217,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{}}}],["updateuserdto:updateuserdto",{"_index":336,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["uploads",{"_index":565,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["use",{"_index":517,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":600,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":77,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["user",{"_index":134,"title":{"entities/User.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user.dto",{"_index":326,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["user.dto.ts",{"_index":94,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userbasedto",{"_index":96,"title":{"classes/UserBaseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"coverage.html":{}}}],["userbasedto:11",{"_index":129,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:13",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:15",{"_index":136,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:8",{"_index":128,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userid",{"_index":268,"title":{},"body":{"entities/User.html":{}}}],["username",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrole",{"_index":130,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.user",{"_index":253,"title":{},"body":{"entities/User.html":{}}}],["users",{"_index":307,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["users/:id",{"_index":666,"title":{},"body":{"index.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["userswritecontroller",{"_index":299,"title":{"controllers/UsersWriteController.html":{}},"body":{"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["userwriteservice:writeuserservice",{"_index":333,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["uses",{"_index":539,"title":{},"body":{"index.html":{}}}],["using",{"_index":266,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["v16",{"_index":607,"title":{},"body":{"index.html":{}}}],["valid",{"_index":132,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["validatedconfig",{"_index":182,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync",{"_index":171,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":186,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validation",{"_index":294,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["validationoption",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationoptions",{"_index":442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":62,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["validator",{"_index":139,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/UserBaseDto.html":{},"dependencies.html":{}}}],["value",{"_index":433,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":194,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["variables",{"_index":621,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vercel",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":779,"title":{},"body":{"properties.html":{}}}],["visiting",{"_index":652,"title":{},"body":{"index.html":{}}}],["vulnerabilities",{"_index":573,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":753,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":749,"title":{},"body":{"license.html":{}}}],["webpack",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["websocket",{"_index":638,"title":{},"body":{"index.html":{}}}],["websocket_port=30014",{"_index":640,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":472,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":689,"title":{},"body":{"index.html":{}}}],["whether",{"_index":766,"title":{},"body":{"license.html":{}}}],["within",{"_index":459,"title":{},"body":{"index.html":{}}}],["without",{"_index":725,"title":{},"body":{"license.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["write.user.service",{"_index":322,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["write/write.user.controller",{"_index":303,"title":{},"body":{"modules/UsersModule.html":{}}}],["write/write.user.service",{"_index":302,"title":{},"body":{"modules/UsersModule.html":{}}}],["writeuserservice",{"_index":297,"title":{"injectables/WriteUserService.html":{}},"body":{"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"overview.html":{}}}],["yarn",{"_index":608,"title":{},"body":{"index.html":{}}}],["yes",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["your_email@example.com",{"_index":708,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigurationModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { ConfigurationModule } from './configuration/configuration.module';\nimport { DatabaseModule } from './database/database.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n\n@Module({\n  imports: [ConfigurationModule, DatabaseModule, UsersModule, AuthModule,],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigurationModule.html":{"url":"modules/ConfigurationModule.html","title":"module - ConfigurationModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigurationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configuration/configuration.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { CacheModule } from \"@nestjs/cache-manager\";\nimport { APP_PIPE } from \"@nestjs/core\";\n\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      envFilePath: '.env.dev'\n    }),\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n\n      useFactory: async () => {\n        const ttl:number = parseInt(process.env.CACHE_TTL)|| 60 * 5\n        const max:number = parseInt(process.env.CACHE_MAX_TTL) || 100;\n\n\n        //DEBUG\n        console.log({ttl,max})\n\n        if (isNaN(ttl) || ttl \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserBaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1}, {message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserBaseDto } from \"./user-base.dto\";\nimport { IsStrongPassword } from \"class-validator\";\n\nexport class CreateUserDto extends UserBaseDto{\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201',\n    }\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TestDbConfig } from \"../configuration/test-db.config\";\n\n@Module({\n  imports: [TypeOrmModule.forRoot(TestDbConfig)],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration/env.validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                APP_PORT\n                            \n                            \n                                    \n                                DATABASE_URL\n                            \n                            \n                                    \n                                DATASOURCE_DATABASE\n                            \n                            \n                                    \n                                DATASOURCE_HOST\n                            \n                            \n                                    \n                                DATASOURCE_PASSWORD\n                            \n                            \n                                    \n                                DATASOURCE_PORT\n                            \n                            \n                                    \n                                DATASOURCE_USERNAME\n                            \n                            \n                                    \n                                NODE_ENV\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyString, IsPositiveInteger } from \"../common/decorators/validator.decotrator\";\nimport { plainToInstance } from \"class-transformer\";\nimport { validateSync } from \"class-validator\";\n\nexport class EnvironmentVariables {\n\n  // String\n  @IsNotEmptyString()\n  NODE_ENV:string\n  @IsNotEmptyString()\n  DATASOURCE_USERNAME:string\n  @IsNotEmptyString()\n  DATASOURCE_PASSWORD:string\n  @IsNotEmptyString()\n  DATASOURCE_DATABASE:string\n  @IsNotEmptyString()\n  DATASOURCE_HOST:string\n\n// Number\n  @IsPositiveInteger()\n  APP_PORT:number\n  @IsPositiveInteger()\n  DATASOURCE_PORT:number\n  @IsPositiveInteger()\n  DATABASE_URL:number\n}\n\n\nexport function envValidator(providedConfig:Record ){\n  const validatedConfig = plainToInstance(EnvironmentVariables,providedConfig,{\n    enableCircularCheck:true\n  })\n\n  const errors = validateSync(validatedConfig, {\n    skipMissingProperties:false\n  })\n\n  if (errors.length > 0) {\n    throw new Error(`${errors.length} not valid environment variable found`)\n  }\n\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto.html":{"url":"classes/IdDto.html","title":"class - IdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/id-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/id-dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsPositive } from \"class-validator\";\n\nexport class IdDto {\n  @Type(() => Number)\n  @IsPositive()\n  readonly id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadOnlyUserService.html":{"url":"injectables/ReadOnlyUserService.html","title":"injectable - ReadOnlyUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReadOnlyUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/read/read-only.user.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ReadOnlyUserService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistryDate.html":{"url":"classes/RegistryDate.html","title":"class - RegistryDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistryDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/embedded/registry-date.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\n\nexport class RegistryDate{\n  @CreateDateColumn()\n  createdAt: Date;\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserBaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserBaseDto } from \"./user-base.dto\";\n\nexport class UpdateUserDto extends UserBaseDto{}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entity/user-entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                registry\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(undefined, {prefix: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity } from \"typeorm/decorator/entity/Entity\";\nimport { RegistryDate } from \"../../common/embedded/registry-date\";\nimport { AfterInsert, AfterRemove, AfterUpdate, Column, PrimaryGeneratedColumn } from \"typeorm\";\nimport { UserRole } from \"./user-roles\";\n\n@Entity()\nexport class User{\n  @PrimaryGeneratedColumn()\n  id:number\n  @Column()\n  firstName:string\n  @Column()\n  lastName:string\n  @Column({unique:true})\n  email:string\n  @Column()\n  password:string\n\n  @Column({\n    type: \"enum\",\n    enum: UserRole,\n    default: UserRole.USER,\n  })\n  role: UserRole\n\n  @Column(() => RegistryDate,{ prefix:false})\n  registry: Date\n\n\n  @AfterUpdate()\n  afterUpdate() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'UPDATED',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Update Operation:', log);\n  }\n\n  @AfterInsert()\n  afterInsert() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'INSERT',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Insert Operation:', log);\n  }\n\n  @AfterRemove()\n  afterRemove() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'REMOVE',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Remove Operation:', log);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBaseDto.html":{"url":"classes/UserBaseDto.html","title":"class - UserBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-base.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyString } from \"../../common/decorators/validator.decotrator\";\nimport { IsEmail, IsEnum, Length } from \"class-validator\";\nimport { UserRole } from \"../entity/user-roles\";\n\nexport class UserBaseDto {\n  @Length(5,25)\n  @IsNotEmptyString()\n  readonly firstName:string\n  @Length(5,25)\n  @IsNotEmptyString()\n  readonly lastName:string\n  @IsEmail()\n  readonly email:string\n  @IsEnum(UserRole, { message: 'Role must be a valid UserRole (admin, user, moderator)' })\n  readonly role: UserRole;  // Enforce enum validation for role\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nReadOnlyUserService\n\nReadOnlyUserService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nReadOnlyUserService->UsersModule\n\n\n\n\n\nWriteUserService\n\nWriteUserService\n\nUsersModule -->\n\nWriteUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReadOnlyUserService\n                        \n                        \n                            WriteUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersWriteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReadOnlyUserService } from './read/read-only.user.service';\nimport { WriteUserService } from './write/write.user.service';\nimport { UsersWriteController } from \"./write/write.user.controller\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"./entity/user-entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [ReadOnlyUserService, WriteUserService],\n  controllers:[UsersWriteController]\n\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersWriteController.html":{"url":"controllers/UsersWriteController.html","title":"controller - UsersWriteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersWriteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/write/write.user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(undefined: IdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiTags()@ApiOperation({})@ApiResponse({})\n                \n            \n\n                    \n                        \n                            Defined in src/users/write/write.user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(undefined: IdDto, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@ApiTags()@ApiOperation({})@ApiResponse({})@ApiBody({})\n                \n            \n\n                    \n                        \n                            Defined in src/users/write/write.user.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, } from \"@nestjs/common\";\nimport { WriteUserService } from \"./write.user.service\";\nimport { IdDto } from \"../../common/dto/id-dto\";\nimport { UpdateUserDto } from \"../dto/update-user.dto\";\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from \"@nestjs/swagger\";\n\n@Controller('users')\nexport class UsersWriteController {\n\n  constructor(private readonly userWriteService:WriteUserService) {}\n\n\n  @Patch(\"/:id\")\n  @ApiTags()\n  @ApiOperation({})\n  @ApiResponse({})\n  @ApiBody({})\n  updateUser(@Param() { id }: IdDto, @Body() updateUserDto:UpdateUserDto) {\n    console.log(typeof id);\n    return this.userWriteService.update(id,updateUserDto)\n  }\n\n\n  @Delete(\":id\")\n  @ApiTags()\n  @ApiOperation({})\n  @ApiResponse({})\n  deleteUser(@Param() { id }: IdDto) {\n   return this.userWriteService.remove(id)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WriteUserService.html":{"url":"injectables/WriteUserService.html","title":"injectable - WriteUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WriteUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/write/write.user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(body: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(identifier: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(identifier: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from \"@nestjs/common\";\nimport { UpdateUserDto } from \"../dto/update-user.dto\";\n\n@Injectable()\nexport class WriteUserService {\n\n  createUser(@Body() body:any) {\n    return `This service create a new user with body ${body}`\n  }\n\n  update(identifier:number,updateUserDto:UpdateUserDto) {\n    return `This service updates user with ID ${identifier} and payload ${updateUserDto} `\n  }\n\n  remove(identifier:number){\n    return `This service removes a user with ID ${identifier}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/decorators/validator.decotrator.ts\n            \n            function\n            IsNotEmptyString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/validator.decotrator.ts\n            \n            function\n            IsPositiveInteger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/id-dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/embedded/registry-date.ts\n            \n            class\n            RegistryDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/configuration/database-dev.config.ts\n            \n            variable\n            databaseDevConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/env.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/configuration/env.validation.ts\n            \n            function\n            envValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger-config.document.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            licence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            swaggerServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            swaggerTitle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/test-db.config.ts\n            \n            variable\n            TestDbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/user-base.dto.ts\n            \n            class\n            UserBaseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/entity/user-entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/read/read-only.user.service.ts\n            \n            injectable\n            ReadOnlyUserService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/write/write.user.controller.ts\n            \n            controller\n            UsersWriteController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/write/write.user.service.ts\n            \n            injectable\n            WriteUserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            cache-manager : 5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            fork-ts-checker-webpack-plugin : ^9.0.2\n        \n            prettier-plugin-organize-imports : ^4.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            run-script-webpack-plugin : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            sqlite3 : ^5.1.7\n        \n            swagger-ui-express : ^5.0.1\n        \n            terser-webpack-plugin : ^5.3.10\n        \n            typeorm : ^0.3.20\n        \n            vercel : ^37.4.2\n        \n            webpack : ^5.94.0\n        \n            webpack-cli : ^5.1.4\n        \n            webpack-node-externals : ^3.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRole   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/entity/user-roles.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 MODERATOR\n                            \n                        \n                        \n                            \n                                Value : moderator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            envValidator   (src/.../env.validation.ts)\n                        \n                        \n                            IsNotEmptyString   (src/.../validator.decotrator.ts)\n                        \n                        \n                            IsPositiveInteger   (src/.../validator.decotrator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/configuration/env.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envValidator\n                        \n                    \n                \n            \n            \n                \nenvValidator(providedConfig: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                providedConfig\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/validator.decotrator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNotEmptyString\n                        \n                    \n                \n            \n            \n                \nIsNotEmptyString(validationOption?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOption\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IsPositiveInteger\n                        \n                    \n                \n            \n            \n                \nIsPositiveInteger(validationOption?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOption\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTask Management API (Backend NestJS)\nOverview\nThe Task Management API is a backend system built using NestJS that allows users to create, update, and manage tasks within projects. Users can be assigned different roles such as Admin, Project Manager, or Team Member, each with different permissions. The API also supports real-time task updates using WebSockets and email notifications for task assignment and status changes.\n\n\nFeatures\n\nUser Authentication: Register, login, and manage user sessions using JWT-based authentication.\nRole-Based Access Control (RBAC): Admins, Project Managers, and Team Members with different access levels.\nTask Management: Create, update, delete, and assign tasks to users within projects.\nProject Management: Organize tasks into projects for better task categorization.\nReal-time Notifications: Get notified of task updates (e.g., status changes) in real-time using WebSockets.\nEmail Notifications: Receive email notifications when tasks are assigned or updated.\nScalable Architecture: Neon (PostgreSQL)\nNeon offers a free PostgreSQL database with 10,000 requests per month, 3 GB of data storage, and free scaling.\n  Setup Steps:\nSign up for Neon.\nCreate a new PostgreSQL database instance.\nGet the connection string from Neon, and use it in your .env file (DATABASE_URL).\n\n\n\n\n\nTechnologies\n\nNestJS: Node.js framework for building efficient, scalable applications.\nTypeORM: ORM for database interactions with support for PostgreSQL or MySQL.\nPassport.js: Authentication middleware for handling JWT-based auth.\nWebSockets: Real-time communication for task updates.\nNodemailer: For sending email notifications.\nDeployment for Backend (NestJS API)\n\nCI/CD Pipeline\nThis project uses a continuous integration and continuous deployment (CI/CD) pipeline to ensure code quality, test coverage, and seamless deployments.\nPipeline Overview\n\nGitHub Actions:\nTriggers on every push or pull request to the main branch.\nRuns the following checks:\nLinting: Ensures code consistency with ESLint.\nUnit Tests: Runs unit tests and uploads coverage reports to\n CodeCov.\n\n\n\n2. SonarCloud: \n\nAnalyzes code for potential bugs, vulnerabilities,     * and maintainability issues.\nBuild & Deploy: Builds the application and deploys it to the production environment.\n\n3. SonarCloud:\n\nIntegrates with GitHub Actions to perform static code analysis.\nEnforces quality gates to ensure high code quality.\nScans for bugs, security vulnerabilities, and code smells.\n\n\nCodeCov:\n\nMeasures and tracks test coverage.\nReports coverage results directly in pull requests to ensure sufficient code coverage.\nA badge is included in the README to display current coverage status.\n\n\nNeon PostgreSQL:\n\nFree-tier PostgreSQL database used for production.\nMigrations are automatically applied after deployment.\n\n\n\nPrerequisites\nTo run this project locally, ensure you have the following installed:\n\nNode.js (v16+)\nPostgreSQL or MySQL database\nYarn or npm (Yarn is preferred)\n\nGetting Started\n1. Clone the Repository\nExample :git clone https://github.com/yourusername/task-management-api.git\ncd task-management-api2. Install Dependencies\nExample :yarn install3. Set Up Environment Variables\nCreate a .env (see .env.example) file in the project root and add the following variables:\nExample :# Database configuration\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_USER=your_db_user\nDATABASE_PASSWORD=your_db_password\nDATABASE_NAME=task_management_db\n\n# JWT Secret\nJWT_SECRET=your_secret_key\n\n# Email configuration (for Nodemailer)\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_USER=your_email@example.com\nEMAIL_PASSWORD=your_email_password\n\n# WebSocket settings\nWEBSOCKET_PORT=30014. Set Up the Database\nEnsure that you have PostgreSQL or MySQL running, then run migrations to set up the database schema:\nExample :yarn typeorm migration:run5. Start the Server\nExample :yarn start:dev6. Build documentationn\nExample :yarn run docs6. Build documentationn\nExample :yarn serve-docsAPI Documentation\nYou can explore the API documentation by visiting http://localhost:3000/api after starting the server. The documentation is auto-generated using Swagger.\nKey Endpoints\n\nAuthentication\n\nPOST /auth/signup: Register a new user\nPOST /auth/login: Authenticate and obtain a JWT token\n\n\nUsers\n\nGET /users: Get all users (Admin access required)\nGET /users/:id: Get a user by ID\nPATCH /users/:id: Update user information (Admin/Project Manager)\n\n\nProjects\n\nGET /projects: Get all projects\nPOST /projects: Create a new project (Admin/Project Manager)\nPATCH /projects/:id: Update project details (Admin/Project Manager)\n\n\nTasks\n\nGET /tasks: Get all tasks for the current user\nPOST /tasks: Create a new task (Admin/Project Manager)\nPATCH /tasks/:id: Update task status, assignment, etc. (Admin/Project Manager)\n\n\nWebSockets\n\nReal-time updates are pushed to subscribed users when task statuses change or new tasks are assigned.\n\n\nTests\nTo run tests, execute:\nExample :\nyarn testFuture Improvements\n\nFile Attachments: Support file uploads and attachments to tasks.\nAnalytics Dashboard: Provide project managers with a dashboard to track task completion rates, project statuses, etc.\nPush Notifications: Add support for mobile push notifications.\n\nContributing\nContributions are welcome! Please follow these steps:\n\nFork the repository.\n\nCreate a new feature branch (git checkout -b feature/your-feature).\n\nCommit your changes (git commit -m 'Add some feature').\n\nPush to the branch (git push origin feature/your-feature).\n\nOpen a pull request.\n\nLicense\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\nContact\nFor any questions, feel free to contact the project maintainer at your_email@example.com.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Jordach Makaya\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigurationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nReadOnlyUserService\n\nReadOnlyUserService\n\nUsersModule -->\n\nReadOnlyUserService->UsersModule\n\n\n\n\n\nWriteUserService\n\nWriteUserService\n\nUsersModule -->\n\nWriteUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Author : Jordach Makaya\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseDevConfig   (src/.../database-dev.config.ts)\n                        \n                        \n                            licence   (src/.../swagger.const.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger-config.document.ts)\n                        \n                        \n                            swaggerServer   (src/.../swagger.const.ts)\n                        \n                        \n                            swaggerTitle   (src/.../swagger.const.ts)\n                        \n                        \n                            TestDbConfig   (src/.../test-db.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configuration/database-dev.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseDevConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService:ConfigService) => ({\n    type: \"postgres\",\n    host: configService.getOrThrow('DATASOURCE_HOST'),\n    port: configService.getOrThrow('DATASOURCE_PORT'),\n    username: configService.getOrThrow('DATASOURCE_USERNAME'),\n    password: configService.getOrThrow('DATASOURCE_PASSWORD'),\n    database: configService.getOrThrow('DATASOURCE_DATABASE'),\n    synchronize: true,\n    logging: true,\n    entities: [],}\n)\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        licence\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MIT_LICENCE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerServer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.SWAGGER_SERVER\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.SWAGGER_TITLE\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger-config.document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setLicense(\"MIT\",licence)\n  .addServer(swaggerServer)\n  .setTitle(swaggerTitle)\n  .setVersion(\"1.0\")\n  .setDescription(\"API documentation for Task Management app\")\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/configuration/test-db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TestDbConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: \"sqlite\",\n  database: \":memory:\",\n  dropSchema: true,\n  entities: [\"dist/**/*.entity{.ts,.js}\"],\n  synchronize: true,\n  logging: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
