name: Main Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  validate-env:
    name: Load and Validate Environment Variables
    runs-on: ubuntu-latest

    steps:
      - name: Check environment variables
        run: |
          echo "DATASOURCE_HOST=${{ secrets.DATASOURCE_HOST }}"
          echo "DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME }}"
          echo "DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }}"
          echo "DATASOURCE_DATABASE=${{ secrets.DATASOURCE_DATABASE }}"
          echo "DATABASE_URL"=${{ secrets.DATABASE_URL }}
          echo "APP_PORT=${{ secrets.APP_PORT }}"
          echo "VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}"
          echo "SWAGGER_PATH=${{ secrets.SWAGGER_PATH }}"
          # Add more checks as needed
        env:
          DATASOURCE_HOST: ${{ secrets.DATASOURCE_HOST }}
          DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
          DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
          DATASOURCE_DATABASE: ${{ secrets.DATASOURCE_DATABASE }}
          APP_PORT: ${{ secrets.APP_PORT }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          API_PREFIX: ${{ secrets.API_PREFIX }}
          # Add Swagger Variables
          MIT_LICENCE_URL: ${{ secrets.MIT_LICENCE_URL }}
          SWAGGER_SERVER: ${{ secrets.SWAGGER_SERVER }}
          SWAGGER_TITLE: ${{ secrets.SWAGGER_TITLE }}
          SWAGGER_PATH: ${{ secrets.SWAGGER_PATH }}
          # Add more environment variables here


  sonarcloud:
    name: SonarCloud Code Analysis
    runs-on: ubuntu-latest
    needs: validate-env
    if: success() # Ensure the build is clean
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full depth is recommended for accurate SonarCloud analysis

      - name: Install dependencies
        run: yarn install

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=thegreatjordach
            -Dsonar.projectKey=TheGreatJordach_Task-Management-API-Backend-NestJS-
            -Dsonar.sources=src/
            -Dsonar.test.exclusions=**/*.spec.ts
            -Dsonar.tests=src/
            -Dsonar.verbose=true
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}





