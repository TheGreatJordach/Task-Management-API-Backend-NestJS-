var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.742,1,1.952]],["body/controllers/AppController.html",[0,2.697,1,3.023,2,2.136,3,0.578,4,0.578,5,0.446,6,3.15,7,0.725,8,2.697,9,4.577,10,1.434,11,0.036,12,1.081,13,3.806,14,1.922,15,1.811,16,0.729,17,1.081,18,2.659,19,3.15,20,0.649,21,0.116,22,2.717,23,1.738,24,1.922,25,3.806,26,0.028,27,0.028]],["title/modules/AppModule.html",[28,0.801,29,1.952]],["body/modules/AppModule.html",[1,2.909,2,2.267,3,0.444,4,0.444,5,0.343,11,0.036,16,0.841,17,0.831,18,2.731,19,2.421,20,0.499,21,0.089,26,0.024,27,0.024,28,1.194,29,3.769,30,1.212,31,1.336,32,1.84,33,1.84,34,1.477,35,2.909,36,1.84,37,2.421,38,2.421,39,2.421,40,3.037,41,3.037,42,3.037,43,3.037,44,2.54,45,1.84,46,1.642,47,2.926,48,2.267,49,2.926,50,2.926,51,2.926,52,2.926,53,2.926]],["title/injectables/AppService.html",[18,1.567,54,1.169]],["body/injectables/AppService.html",[3,0.609,4,0.609,5,0.47,7,0.764,8,2.787,9,4.664,11,0.036,12,1.139,14,2.025,15,1.871,16,0.609,17,1.139,18,2.507,20,0.684,21,0.122,24,2.025,26,0.029,27,0.029,54,1.871,55,2.251,56,3.318,57,4.01,58,4.01,59,4.01]],["title/modules/AuthModule.html",[28,0.801,40,1.742]],["body/modules/AuthModule.html",[3,0.671,4,0.671,5,0.518,11,0.035,16,0.671,17,1.256,20,0.754,21,0.135,26,0.031,27,0.031,28,1.36,30,1.831,40,2.956,60,4.42]],["title/modules/ConfigurationModule.html",[28,0.801,41,1.742]],["body/modules/ConfigurationModule.html",[3,0.531,4,0.531,5,0.41,11,0.037,16,0.814,17,0.994,26,0.027,27,0.027,28,1.175,30,1.45,41,1.964,48,2.555,61,3.498,62,3.498,63,3.767,64,2.201,65,3.498,66,2.895,67,2.498,68,3.498,69,2.895,70,3.498,71,3.498,72,3.25,73,2.895,74,3.498,75,3.498,76,3.498,77,3.498,78,2.895,79,2.864,80,3.498,81,3.498,82,3.498,83,2.498,84,3.498,85,3.498,86,2.895,87,3.498,88,3.498,89,3.498,90,3.498]],["title/classes/CreateUserDto.html",[21,0.094,91,2.215]],["body/classes/CreateUserDto.html",[3,0.376,4,0.376,5,0.29,7,0.471,10,1.851,11,0.036,12,1.396,15,1.851,16,0.545,20,0.422,21,0.109,23,2.591,26,0.021,27,0.021,91,2.562,92,1.131,93,2.97,94,1.768,95,2.97,96,2.966,97,1.231,98,3.508,99,2.014,100,2.258,101,2.258,102,2.369,103,1.268,104,2.476,105,4.628,106,3.589,107,3.864,108,3.589,109,3.589,110,3.589,111,3.013,112,3.589,113,3.589,114,3.589,115,3.589,116,3.589,117,1.812,118,3.589,119,3.589,120,2.562,121,3.589,122,2.476,123,1.768,124,3.83,125,2.049,126,2.562,127,2.562,128,2.049,129,2.049,130,2.014,131,1.768,132,1.558,133,1.39,134,1.231,135,1.558,136,2.049,137,2.049,138,3.589,139,1.25,140,2.476]],["title/modules/DatabaseModule.html",[28,0.801,42,1.742]],["body/modules/DatabaseModule.html",[3,0.529,4,0.529,5,0.408,11,0.036,16,0.842,17,0.99,20,0.594,21,0.106,26,0.027,27,0.027,28,1.304,30,1.443,31,1.591,32,2.191,33,2.191,34,1.759,35,3.177,36,2.191,42,3.194,44,2.856,45,2.191,46,1.955,48,1.955,63,2.883,64,2.191,141,2.883,142,2.883,143,3.194,144,3.483,145,2.883,146,2.487,147,2.487,148,3.483,149,3.483,150,2.487,151,3.483,152,3.483]],["title/classes/EnvironmentVariables.html",[21,0.094,153,1.952]],["body/classes/EnvironmentVariables.html",[3,0.319,4,0.319,5,0.246,7,0.4,10,1.945,11,0.037,12,1.467,14,1.062,15,1.889,16,0.582,20,0.542,21,0.14,24,1.062,26,0.019,27,0.019,79,2,92,0.96,97,1.091,103,1.333,117,2.158,132,1.323,139,1.605,153,2.887,154,1.501,155,3.179,156,2.631,157,3.179,158,3.179,159,3.179,160,3.179,161,3.179,162,3.179,163,3.277,164,2.103,165,3.529,166,2.103,167,2.103,168,2.103,169,2.103,170,2.103,171,2.103,172,2.103,173,1.74,174,2.631,175,1.501,176,2.631,177,2.103,178,2.103,179,2.103,180,2.103,181,2.103,182,2.103,183,2.103,184,2.103,185,2.631,186,2.27,187,3.051,188,3.537,189,1.74,190,1.501,191,1.74,192,2.737,193,2,194,1.74,195,1.501,196,2.631,197,2.631,198,2.631,199,2.631,200,2.631,201,2.737,202,1.18,203,1.74,204,1.74,205,1.74,206,2.103,207,2.631,208,1.74,209,2.103,210,3.179,211,2.103,212,2.103,213,2.103,214,2.103,215,2.103,216,1.74,217,2.103,218,1.062,219,2.103]],["title/classes/IdDto.html",[21,0.094,220,1.952]],["body/classes/IdDto.html",[3,0.575,4,0.575,5,0.444,7,0.721,10,1.427,11,0.036,12,1.076,16,0.727,20,0.646,21,0.16,23,2.399,26,0.028,27,0.028,92,1.73,97,1.643,103,1.357,117,2.653,139,1.913,175,2.705,220,3.014,221,3.965,222,3.135,223,2.95,224,3.788,225,3.788,226,4.791]],["title/injectables/NeonDatabaseService.html",[54,1.169,143,1.742]],["body/injectables/NeonDatabaseService.html",[3,0.484,4,0.484,5,0.373,7,0.607,8,2.402,11,0.036,12,1.373,14,1.609,16,0.733,17,0.905,20,0.543,21,0.097,22,2.275,23,2.207,24,1.609,26,0.025,27,0.025,54,1.613,55,1.789,64,2.005,78,3.999,79,2.005,97,1.468,103,0.823,143,2.402,150,2.275,227,4.275,228,2.637,229,4.833,230,4.833,231,5.166,232,3.186,233,3.186,234,5.55,235,4.28,236,2.005,237,1.789,238,2.005,239,3.186,240,3.186,241,2.637,242,3.186,243,3.186,244,4.28,245,3.186,246,3.186]],["title/injectables/ReadOnlyUserService.html",[54,1.169,247,1.742]],["body/injectables/ReadOnlyUserService.html",[3,0.667,4,0.667,5,0.515,11,0.035,16,0.667,17,1.249,20,0.75,21,0.134,26,0.031,27,0.031,54,1.978,55,2.468,247,2.947,248,3.638,249,3.638]],["title/classes/RegistryDate.html",[21,0.094,250,1.952]],["body/classes/RegistryDate.html",[3,0.572,4,0.572,5,0.442,7,0.718,10,1.8,11,0.035,12,1.357,16,0.572,20,0.643,21,0.115,26,0.028,27,0.028,92,1.722,97,1.639,103,1.233,250,3.005,251,4.339,252,3.121,253,5.244,254,5.244,255,4.562,256,5.244,257,3.771,258,5.244,259,3.771,260,2.372]],["title/classes/UpdateUserDto.html",[21,0.094,261,1.742]],["body/classes/UpdateUserDto.html",[3,0.484,4,0.484,5,0.373,7,0.607,10,1.947,11,0.035,12,1.468,15,1.821,16,0.484,20,0.543,21,0.097,23,2.632,26,0.025,27,0.025,92,1.455,94,2.275,95,3.542,96,3.183,97,1.468,99,2.402,100,2.692,101,2.692,102,2.713,103,1.334,111,2.275,123,2.275,124,4.275,125,2.637,126,3.056,127,3.056,128,2.637,129,2.637,130,2.402,131,2.275,132,2.005,133,1.789,134,1.468,135,2.005,136,2.637,137,2.637,261,2.402,262,2.637]],["title/entities/User.html",[134,1.064,263,1.952]],["body/entities/User.html",[3,0.273,4,0.273,5,0.211,7,0.343,10,1.786,11,0.036,12,1.347,15,1.483,16,0.597,20,0.307,21,0.055,26,0.017,27,0.017,72,1.284,79,2.187,97,0.967,98,2.013,99,1.583,100,1.774,101,1.774,102,1.952,103,1.267,117,0.908,120,2.482,130,2.399,134,1.193,193,2.187,218,1.756,223,1.583,237,1.952,250,1.774,255,4.176,260,1.132,263,1.774,264,1.284,265,3.504,266,1.489,267,4.535,268,1.799,269,1.799,270,5.046,271,1.799,272,3.477,273,1.799,274,1.799,275,1.799,276,1.799,277,1.489,278,1.489,279,1.799,280,1.799,281,3.257,282,2.333,283,1.799,284,1.799,285,1.799,286,1.799,287,3.477,288,3.477,289,3.477,290,1.284,291,1.799,292,1.489,293,1.489,294,1.799,295,1.489,296,1.799,297,1.799,298,1.799,299,2.877,300,3.477,301,3.477,302,2.877,303,3.752,304,5.046,305,2.877,306,5.046,307,3.477,308,2.877,309,3.477,310,3.477,311,3.477,312,3.477,313,3.477,314,1.489,315,2.877,316,3.477,317,3.477,318,3.477,319,2.877,320,1.799,321,1.799,322,1.799,323,1.489,324,1.799]],["title/classes/UserBaseDto.html",[21,0.094,96,1.742]],["body/classes/UserBaseDto.html",[3,0.424,4,0.424,5,0.327,7,0.532,10,1.842,11,0.036,12,1.389,15,1.701,16,0.685,20,0.477,21,0.119,23,2.678,26,0.023,27,0.023,92,1.277,96,2.197,97,1.342,99,2.197,100,2.462,101,2.462,102,2.994,103,1.262,111,2.794,123,3.223,126,2.794,127,2.794,130,2.889,131,2.794,132,2.462,133,2.197,134,1.342,135,2.462,139,1.412,165,2.84,173,2.314,195,1.996,281,2.314,290,1.996,292,2.314,293,2.314,295,2.314,325,4.259,326,2.314,327,2.796,328,2.796,329,2.796,330,2.796,331,2.796,332,2.796,333,2.314,334,3.913,335,2.796]],["title/modules/UsersModule.html",[28,0.801,43,1.742]],["body/modules/UsersModule.html",[2,1.831,3,0.495,4,0.495,5,0.382,11,0.036,16,0.848,17,0.927,20,0.556,21,0.099,26,0.026,27,0.026,28,1.262,30,1.352,31,1.49,32,2.052,33,2.052,34,1.647,35,3.076,36,2.052,43,3.252,44,2.735,45,2.052,46,1.831,48,1.831,134,1.119,145,2.7,146,2.329,247,3.136,263,2.052,333,2.7,336,2.7,337,2.7,338,2.821,339,3.262,340,2.735,341,3.262,342,3.262,343,3.262,344,3.262,345,3.262,346,3.262]],["title/controllers/UsersWriteController.html",[0,1.742,340,1.952]],["body/controllers/UsersWriteController.html",[0,1.57,2,1.57,3,0.424,4,0.424,5,0.327,7,0.532,8,2.197,10,1.475,11,0.037,12,1.112,14,1.976,16,0.781,17,0.795,20,0.477,21,0.085,22,1.996,23,1.277,24,1.976,26,0.023,27,0.023,103,1.01,203,2.314,220,3.445,223,2.534,236,2.462,237,2.197,238,2.462,261,2.889,277,2.314,338,1.412,340,2.462,347,2.314,348,2.314,349,3.913,350,3.913,351,2.796,352,2.796,353,2.796,354,2.796,355,2.796,356,2.796,357,3.238,358,2.314,359,2.314,360,2.796,361,2.796,362,2.796,363,2.314,364,2.314,365,3.913,366,4.514,367,4.514,368,4.514,369,2.314,370,2.796,371,2.796,372,2.796,373,2.796,374,2.796,375,2.796,376,2.796,377,2.796,378,2.796,379,2.796]],["title/injectables/WriteUserService.html",[54,1.169,338,1.567]],["body/injectables/WriteUserService.html",[3,0.449,4,0.449,5,0.346,7,0.563,8,2.284,11,0.036,12,1.321,14,2.348,15,1.752,16,0.617,17,0.84,20,0.504,21,0.09,24,2.348,26,0.024,27,0.024,54,1.533,55,1.66,103,1.201,117,2.529,134,1.595,218,1.493,223,2.284,236,2.926,237,2.61,238,2.926,261,3.047,319,3.848,323,3.367,338,2.054,357,4.145,363,2.447,364,2.447,380,2.447,381,4.068,382,3.367,383,2.957,384,2.957,385,2.957,386,2.957,387,4.145,388,2.957,389,2.957,390,2.957,391,2.957,392,2.447,393,2.957,394,2.447,395,2.957,396,2.957,397,2.957]],["title/coverage.html",[398,3.001]],["body/coverage.html",[0,2.006,1,1.548,5,0.288,6,2.037,11,0.036,18,1.243,21,0.156,26,0.021,27,0.021,28,0.635,34,1.243,54,1.739,56,2.037,86,2.037,91,1.757,93,2.037,94,2.551,96,1.382,103,0.635,134,0.844,143,1.382,147,1.757,153,1.548,154,2.551,163,1.757,165,1.548,207,4.365,208,3.819,216,5.032,218,1.243,220,1.548,221,2.037,222,2.037,227,2.037,228,2.037,247,1.382,248,2.037,249,2.037,250,1.548,251,2.037,252,2.037,261,1.382,262,2.037,263,1.548,265,1.757,266,2.037,325,2.037,326,2.037,338,1.243,340,1.548,347,2.037,380,2.037,387,2.037,398,1.757,399,1.548,400,2.462,401,4.206,402,2.957,403,5.73,404,3.573,405,2.037,406,2.037,407,2.037,408,2.462,409,2.037,410,2.462,411,2.037,412,2.037,413,2.037,414,3.481,415,2.037,416,2.037,417,2.037,418,2.037,419,2.037,420,3.573,421,2.551,422,2.462,423,3.573,424,2.462,425,2.462]],["title/dependencies.html",[31,1.7,426,2.157]],["body/dependencies.html",[11,0.037,17,0.878,21,0.128,26,0.025,27,0.025,31,1.411,48,1.735,64,1.944,66,2.558,67,2.993,69,2.558,73,2.558,83,2.207,139,1.561,146,2.207,175,2.207,241,2.558,260,1.944,369,2.558,427,3.091,428,3.091,429,4.758,430,3.091,431,3.091,432,3.47,433,3.091,434,3.091,435,3.091,436,3.091,437,2.558,438,3.091,439,3.091,440,5.5,441,5.102,442,3.091,443,3.091,444,2.558,445,3.091,446,3.091,447,3.091,448,4.193,449,2.558,450,3.091,451,3.091,452,3.091,453,3.091,454,3.091,455,2.558,456,3.091,457,3.091,458,3.091,459,3.091,460,3.091,461,3.091,462,3.091,463,3.091,464,3.091,465,3.091,466,3.091,467,3.091,468,3.091]],["title/miscellaneous/enumerations.html",[469,1.316,470,3.081]],["body/miscellaneous/enumerations.html",[7,0.819,11,0.035,26,0.03,27,0.03,130,2.91,133,2.91,134,1.778,135,3.261,265,3.073,469,2.173,470,3.562,471,4.304,472,5.184,473,4.604]],["title/miscellaneous/functions.html",[469,1.316,474,3.081]],["body/miscellaneous/functions.html",[7,0.616,11,0.032,21,0.132,26,0.025,27,0.025,34,2.459,103,1.257,117,1.634,139,1.634,153,2.721,154,2.311,163,3.088,165,2.721,174,2.678,176,2.678,185,3.579,186,3.088,187,3.477,188,4.031,189,2.678,190,2.311,191,2.678,192,3.088,193,2.721,194,2.678,195,2.311,196,2.678,197,2.678,198,2.678,199,2.678,200,2.678,201,2.311,202,1.817,204,2.678,205,2.678,236,3.064,237,2.734,238,3.064,402,2.678,409,3.579,421,2.311,469,1.634,474,2.678,475,2.678,476,3.237,477,4.325,478,3.237,479,4.325,480,2.678,481,3.237,482,5.199,483,4.325,484,4.325,485,3.237]],["title/index.html",[7,0.496,486,1.861,487,1.861]],["body/index.html",[5,0.379,11,0.025,15,0.406,26,0.014,27,0.011,31,0.491,67,2.525,99,1.819,102,0.604,107,0.768,120,2.851,133,1.037,134,1.213,150,2.313,156,0.891,187,1.319,190,0.768,192,0.768,193,2.038,201,1.319,202,1.037,218,1.786,223,0.604,260,1.162,290,0.768,299,0.891,302,0.891,305,1.529,308,1.529,314,0.891,315,2.382,348,3.131,358,0.891,359,2.008,382,2.681,392,3.131,394,2.382,398,2.525,399,1.527,437,0.891,444,0.891,449,2.382,455,0.891,486,0.768,487,0.768,488,3.883,489,2.927,490,3.24,491,2.427,492,2.879,493,1.319,494,1.076,495,1.076,496,1.076,497,1.847,498,4.328,499,1.847,500,3.784,501,2.427,502,2.427,503,1.076,504,4.585,505,1.847,506,1.076,507,1.076,508,1.076,509,1.076,510,3.24,511,3.24,512,2.879,513,3.784,514,1.847,515,2.427,516,1.076,517,2.879,518,1.847,519,1.076,520,1.076,521,2.879,522,2.427,523,2.427,524,1.076,525,1.076,526,1.076,527,1.847,528,1.076,529,1.076,530,1.076,531,1.076,532,1.076,533,1.076,534,1.076,535,1.847,536,1.076,537,3.993,538,1.076,539,2.382,540,3.304,541,1.076,542,1.847,543,1.076,544,1.076,545,1.847,546,1.076,547,1.076,548,1.076,549,1.076,550,1.076,551,1.847,552,1.076,553,2.879,554,0.891,555,0.891,556,1.847,557,1.076,558,1.847,559,1.076,560,1.076,561,1.076,562,1.076,563,1.076,564,1.076,565,2.008,566,2.427,567,1.076,568,1.076,569,1.076,570,1.076,571,1.076,572,1.847,573,1.076,574,2.427,575,1.847,576,2.427,577,1.076,578,1.847,579,1.076,580,3.24,581,3.784,582,2.427,583,1.847,584,1.076,585,1.076,586,1.847,587,1.847,588,1.076,589,3.24,590,2.427,591,1.847,592,1.076,593,2.427,594,1.847,595,2.008,596,1.076,597,1.076,598,1.076,599,1.076,600,1.076,601,1.847,602,2.879,603,1.847,604,1.847,605,1.847,606,0.891,607,1.847,608,1.076,609,1.076,610,1.847,611,1.847,612,1.076,613,1.076,614,2.008,615,1.076,616,1.076,617,1.076,618,1.076,619,1.847,620,1.076,621,1.076,622,1.076,623,1.076,624,1.076,625,1.076,626,1.076,627,1.076,628,1.076,629,1.076,630,1.076,631,1.076,632,1.076,633,1.076,634,0.891,635,1.076,636,1.076,637,1.076,638,1.076,639,1.847,640,1.076,641,1.076,642,1.076,643,1.076,644,1.076,645,1.076,646,3.993,647,1.076,648,1.076,649,1.847,650,1.847,651,2.879,652,1.076,653,1.076,654,1.076,655,1.076,656,1.076,657,1.076,658,2.427,659,1.847,660,1.076,661,1.076,662,2.427,663,1.076,664,1.076,665,1.076,666,1.076,667,1.076,668,1.076,669,1.076,670,1.076,671,1.076,672,1.076,673,1.076,674,1.076,675,1.076,676,1.076,677,1.076,678,1.076,679,1.076,680,1.847,681,1.076,682,1.847,683,1.076,684,1.076,685,1.076,686,1.076,687,1.076,688,1.076,689,1.076,690,1.076,691,1.076,692,1.076,693,1.076,694,2.879,695,1.076,696,1.076,697,1.076,698,1.076,699,1.076,700,1.076,701,1.847,702,1.076,703,3.24,704,1.076,705,1.076,706,1.847,707,1.076,708,1.076,709,1.847,710,1.076,711,1.076,712,1.076,713,1.076,714,1.847,715,1.076,716,1.847,717,1.076,718,1.076,719,1.076,720,1.076,721,1.076,722,1.076,723,1.076,724,1.076,725,1.076,726,1.076,727,2.879,728,1.076,729,1.076,730,1.847,731,1.847,732,1.076,733,1.076,734,1.076,735,1.527,736,1.076,737,1.076,738,0.768,739,1.847,740,1.076,741,1.076,742,1.076,743,1.076]],["title/license.html",[486,1.861,487,1.861,735,1.64]],["body/license.html",[11,0.025,26,0.025,27,0.025,46,1.755,186,2.232,399,1.966,432,2.587,539,2.587,554,2.587,555,3.496,595,2.587,634,2.587,735,1.966,738,2.232,744,4.786,745,3.126,746,3.126,747,2.587,748,2.587,749,4.225,750,3.126,751,3.126,752,3.126,753,3.126,754,3.126,755,4.225,756,5.815,757,3.126,758,3.126,759,3.126,760,4.786,761,3.126,762,4.225,763,3.126,764,3.126,765,3.126,766,3.126,767,3.126,768,3.126,769,3.126,770,3.126,771,3.126,772,4.225,773,3.126,774,3.126,775,3.126,776,3.126,777,3.126,778,3.126,779,4.225,780,4.225,781,3.126,782,3.126,783,3.126,784,3.126,785,3.126,786,3.126,787,3.126,788,3.126,789,3.126,790,3.126,791,3.126,792,3.126,793,3.126,794,3.126,795,3.126,796,3.126,797,3.126,798,3.126,799,3.126,800,3.126,801,3.126,802,3.126,803,3.126,804,3.126,805,3.126,806,3.126]],["title/modules.html",[30,1.742]],["body/modules.html",[11,0.03,26,0.03,27,0.03,29,2.666,30,1.756,40,2.379,41,2.379,42,2.379,43,2.379,565,4.573,807,5.526,808,5.526,809,5.883,810,5.135,811,5.135]],["title/overview.html",[493,3.001]],["body/overview.html",[2,1.853,11,0.035,18,2.484,26,0.026,27,0.026,28,0.852,29,3.791,30,1.368,31,1.508,32,2.077,33,2.077,34,1.667,35,2.077,36,2.077,37,2.732,38,2.732,39,2.732,40,2.761,41,2.761,42,3.061,43,3.211,44,2.757,45,2.077,46,1.853,55,1.853,83,2.357,92,1.508,107,2.357,141,2.732,142,2.732,143,2.761,247,2.761,264,2.357,336,2.732,337,2.732,338,2.484,493,2.357,606,2.732,812,3.302,813,3.302]],["title/properties.html",[97,1.277,426,2.157]],["body/properties.html",[11,0.036,26,0.031,27,0.031,97,1.541,480,3.717,735,2.826,738,3.207,747,3.717,748,3.717,814,4.492,815,4.492,816,4.492]],["title/miscellaneous/variables.html",[202,2.09,469,1.316]],["body/miscellaneous/variables.html",[7,0.561,11,0.036,26,0.024,27,0.024,28,1.048,72,3.571,98,2.104,103,1.291,147,2.897,202,1.654,218,1.488,264,2.897,278,2.438,282,4.486,303,3.358,399,1.854,405,2.438,406,3.358,407,3.358,411,2.438,412,3.358,413,3.358,414,2.438,415,3.358,416,3.358,417,3.358,418,2.438,419,3.358,421,2.104,469,1.488,473,4.486,475,2.438,488,2.438,489,2.438,540,3.358,614,2.438,817,2.947,818,4.642,819,2.947,820,2.947,821,2.947,822,2.947,823,2.947,824,2.947,825,2.947,826,2.947,827,2.947,828,2.947,829,2.947,830,2.947,831,4.058,832,2.947,833,2.947,834,2.947,835,2.947,836,2.947,837,2.947,838,2.947,839,2.947,840,2.947,841,2.947,842,2.947,843,2.947,844,2.947,845,2.947,846,2.947]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["0.0.1",{"_index":815,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["0.9.5",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":107,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"overview.html":{}}}],["1/1",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["10,000",{"_index":541,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":86,"title":{},"body":{"modules/ConfigurationModule.html":{},"coverage.html":{}}}],["2",{"_index":606,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.2.2",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":746,"title":{},"body":{"license.html":{}}}],["25)@isnotemptystring",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["3",{"_index":545,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["37.4.2",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":812,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":83,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["5.0.1",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["5.1.7",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["5.3.10",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["5.94.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":813,"title":{},"body":{"overview.html":{}}}],["60",{"_index":82,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["7.4.2",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9.0.2",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":778,"title":{},"body":{"license.html":{}}}],["access",{"_index":523,"title":{},"body":{"index.html":{}}}],["action",{"_index":801,"title":{},"body":{"license.html":{}}}],["actions",{"_index":587,"title":{},"body":{"index.html":{}}}],["add",{"_index":662,"title":{},"body":{"index.html":{}}}],["addserver(swaggerserver",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":133,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["admin/project",{"_index":703,"title":{},"body":{"index.html":{}}}],["admins",{"_index":526,"title":{},"body":{"index.html":{}}}],["afterinsert",{"_index":287,"title":{},"body":{"entities/User.html":{}}}],["afterremove",{"_index":288,"title":{},"body":{"entities/User.html":{}}}],["afterupdate",{"_index":289,"title":{},"body":{"entities/User.html":{}}}],["against",{"_index":189,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["allows",{"_index":496,"title":{},"body":{"index.html":{}}}],["analysis",{"_index":622,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":715,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":608,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":770,"title":{},"body":{"license.html":{}}}],["api",{"_index":490,"title":{},"body":{"index.html":{}}}],["api.git",{"_index":653,"title":{},"body":{"index.html":{}}}],["api2",{"_index":655,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":365,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apioperation",{"_index":366,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apiresponse",{"_index":367,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["apitags",{"_index":368,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["app",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":68,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["app_port",{"_index":155,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["app_port:number",{"_index":183,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":617,"title":{},"body":{"index.html":{}}}],["applications",{"_index":562,"title":{},"body":{"index.html":{}}}],["applied",{"_index":641,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":536,"title":{},"body":{"index.html":{}}}],["arising",{"_index":805,"title":{},"body":{"license.html":{}}}],["assign",{"_index":530,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":501,"title":{},"body":{"index.html":{}}}],["assignment",{"_index":514,"title":{},"body":{"index.html":{}}}],["associated",{"_index":757,"title":{},"body":{"license.html":{}}}],["async",{"_index":78,"title":{},"body":{"modules/ConfigurationModule.html":{},"injectables/NeonDatabaseService.html":{}}}],["attachments",{"_index":714,"title":{},"body":{"index.html":{}}}],["auth",{"_index":570,"title":{},"body":{"index.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/login",{"_index":696,"title":{},"body":{"index.html":{}}}],["auth/signup",{"_index":695,"title":{},"body":{"index.html":{}}}],["authenticate",{"_index":697,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":517,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":816,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":794,"title":{},"body":{"license.html":{}}}],["auto",{"_index":690,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":640,"title":{},"body":{"index.html":{}}}],["available",{"_index":811,"title":{},"body":{"modules.html":{}}}],["await",{"_index":246,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["b",{"_index":729,"title":{},"body":{"index.html":{}}}],["backend",{"_index":491,"title":{},"body":{"index.html":{}}}],["badge",{"_index":633,"title":{},"body":{"index.html":{}}}],["base.dto",{"_index":137,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["base.dto.ts",{"_index":326,"title":{},"body":{"classes/UserBaseDto.html":{},"coverage.html":{}}}],["base.dto.ts:11",{"_index":329,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:13",{"_index":327,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:15",{"_index":330,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["base.dto.ts:8",{"_index":328,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["based",{"_index":522,"title":{},"body":{"index.html":{}}}],["better",{"_index":531,"title":{},"body":{"index.html":{}}}],["body",{"_index":357,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["body:any",{"_index":391,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":593,"title":{},"body":{"index.html":{}}}],["browse",{"_index":809,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":807,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":610,"title":{},"body":{"index.html":{}}}],["build",{"_index":614,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["building",{"_index":560,"title":{},"body":{"index.html":{}}}],["builds",{"_index":616,"title":{},"body":{"index.html":{}}}],["built",{"_index":495,"title":{},"body":{"index.html":{}}}],["c",{"_index":745,"title":{},"body":{"license.html":{}}}],["cache",{"_index":73,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["cachemodule",{"_index":65,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["cachemodule.registerasync",{"_index":76,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["categorization",{"_index":532,"title":{},"body":{"index.html":{}}}],["cd",{"_index":654,"title":{},"body":{"index.html":{}}}],["change",{"_index":710,"title":{},"body":{"index.html":{}}}],["changes",{"_index":515,"title":{},"body":{"index.html":{}}}],["character",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["charge",{"_index":752,"title":{},"body":{"license.html":{}}}],["checker",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["checkout",{"_index":728,"title":{},"body":{"index.html":{}}}],["checks",{"_index":596,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":575,"title":{},"body":{"index.html":{}}}],["claim",{"_index":797,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":92,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"overview.html":{}}}],["cli",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["clone",{"_index":649,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":141,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":142,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":336,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":337,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":581,"title":{},"body":{"index.html":{}}}],["codecov",{"_index":605,"title":{},"body":{"index.html":{}}}],["column",{"_index":270,"title":{},"body":{"entities/User.html":{}}}],["column(undefined",{"_index":276,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":280,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":268,"title":{},"body":{"entities/User.html":{}}}],["column({unique:true",{"_index":294,"title":{},"body":{"entities/User.html":{}}}],["commit",{"_index":731,"title":{},"body":{"index.html":{}}}],["common/decorators/validator.decotrator",{"_index":173,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/UserBaseDto.html":{}}}],["common/dto/id",{"_index":361,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["common/embedded/registry",{"_index":286,"title":{},"body":{"entities/User.html":{}}}],["communication",{"_index":571,"title":{},"body":{"index.html":{}}}],["completion",{"_index":719,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":777,"title":{},"body":{"license.html":{}}}],["config.document.ts",{"_index":412,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":63,"title":{},"body":{"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule,typeormmodule.forroot(testdbconfig",{"_index":152,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":70,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["configservice",{"_index":234,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["configservice.getorthrow('datasource_database",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_host",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_password",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_port",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.getorthrow('datasource_username",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice:configservice",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":187,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["configuration/configuration.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration/test",{"_index":148,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configurationmodule",{"_index":41,"title":{"modules/ConfigurationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules.html":{},"overview.html":{}}}],["connection",{"_index":554,"title":{},"body":{"index.html":{},"license.html":{}}}],["consistency",{"_index":599,"title":{},"body":{"index.html":{}}}],["console",{"_index":317,"title":{},"body":{"entities/User.html":{}}}],["console.log('insert",{"_index":322,"title":{},"body":{"entities/User.html":{}}}],["console.log('remove",{"_index":324,"title":{},"body":{"entities/User.html":{}}}],["console.log('update",{"_index":320,"title":{},"body":{"entities/User.html":{}}}],["console.log(typeof",{"_index":375,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["console.log({ttl,max",{"_index":88,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["const",{"_index":79,"title":{},"body":{"modules/ConfigurationModule.html":{},"classes/EnvironmentVariables.html":{},"injectables/NeonDatabaseService.html":{},"entities/User.html":{}}}],["constructor",{"_index":232,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["constructor(configservice",{"_index":233,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/NeonDatabaseService.html":{},"controllers/UsersWriteController.html":{}}}],["contact",{"_index":739,"title":{},"body":{"index.html":{}}}],["continuous",{"_index":578,"title":{},"body":{"index.html":{}}}],["contract",{"_index":802,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":722,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":723,"title":{},"body":{"index.html":{}}}],["control",{"_index":524,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["controller('users",{"_index":370,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"overview.html":{}}}],["controllers:[userswritecontroller",{"_index":346,"title":{},"body":{"modules/UsersModule.html":{}}}],["converted",{"_index":194,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["converts",{"_index":191,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["copies",{"_index":772,"title":{},"body":{"license.html":{}}}],["copy",{"_index":755,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":744,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":398,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":392,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["createdat",{"_index":253,"title":{},"body":{"classes/RegistryDate.html":{}}}],["createdatecolumn",{"_index":256,"title":{},"body":{"classes/RegistryDate.html":{}}}],["createuser",{"_index":381,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuser(@body",{"_index":390,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuser(body",{"_index":383,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["createuserdto",{"_index":91,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["current",{"_index":308,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["damages",{"_index":798,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":716,"title":{},"body":{"index.html":{}}}],["data",{"_index":547,"title":{},"body":{"index.html":{}}}],["database",{"_index":540,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["database.service",{"_index":151,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database.service.ts",{"_index":228,"title":{},"body":{"injectables/NeonDatabaseService.html":{},"coverage.html":{}}}],["database.service.ts:13",{"_index":239,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["database.service.ts:7",{"_index":235,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["database/database.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["database_host=localhost",{"_index":663,"title":{},"body":{"index.html":{}}}],["database_name=task_management_db",{"_index":667,"title":{},"body":{"index.html":{}}}],["database_password=your_db_password",{"_index":666,"title":{},"body":{"index.html":{}}}],["database_port=5432",{"_index":664,"title":{},"body":{"index.html":{}}}],["database_url",{"_index":156,"title":{},"body":{"classes/EnvironmentVariables.html":{},"index.html":{}}}],["database_url:string",{"_index":182,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_user=your_db_user",{"_index":665,"title":{},"body":{"index.html":{}}}],["databasedevconfig",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":42,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseurl",{"_index":242,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["datasource_database",{"_index":157,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_database:string",{"_index":180,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_host",{"_index":158,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_host:string",{"_index":181,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_password",{"_index":159,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_password:string",{"_index":179,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_port",{"_index":160,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_port:number",{"_index":184,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_username",{"_index":161,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["datasource_username:string",{"_index":178,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["date",{"_index":255,"title":{},"body":{"classes/RegistryDate.html":{},"entities/User.html":{}}}],["date().toisostring",{"_index":307,"title":{},"body":{"entities/User.html":{}}}],["date.ts",{"_index":252,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["date.ts:5",{"_index":257,"title":{},"body":{"classes/RegistryDate.html":{}}}],["date.ts:7",{"_index":259,"title":{},"body":{"classes/RegistryDate.html":{}}}],["db.config",{"_index":149,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["db.config.ts",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":759,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":806,"title":{},"body":{"license.html":{}}}],["debug",{"_index":87,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{}}}],["default",{"_index":282,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["delete",{"_index":358,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["delete(\":id",{"_index":377,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["delete(':id')@apitags()@apioperation({})@apiresponse",{"_index":352,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser",{"_index":349,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser(@param",{"_index":378,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["deleteuser(undefined",{"_index":351,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":615,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":574,"title":{},"body":{"index.html":{}}}],["deployments",{"_index":585,"title":{},"body":{"index.html":{}}}],["deploys",{"_index":618,"title":{},"body":{"index.html":{}}}],["description",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["details",{"_index":305,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["dev.config.ts",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":502,"title":{},"body":{"index.html":{}}}],["directly",{"_index":631,"title":{},"body":{"index.html":{}}}],["display",{"_index":636,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":768,"title":{},"body":{"license.html":{}}}],["docs6",{"_index":683,"title":{},"body":{"index.html":{}}}],["docsapi",{"_index":685,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":399,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["documentationn",{"_index":682,"title":{},"body":{"index.html":{}}}],["documentbuilder",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropschema",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":362,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["dto.ts",{"_index":222,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["dto.ts:7",{"_index":225,"title":{},"body":{"classes/IdDto.html":{}}}],["dto/update",{"_index":363,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["e.g",{"_index":302,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["each",{"_index":507,"title":{},"body":{"index.html":{}}}],["effect",{"_index":301,"title":{},"body":{"entities/User.html":{}}}],["efficient",{"_index":561,"title":{},"body":{"index.html":{}}}],["email",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["email:string",{"_index":295,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["email_host=smtp.example.com",{"_index":670,"title":{},"body":{"index.html":{}}}],["email_password=your_email_password",{"_index":673,"title":{},"body":{"index.html":{}}}],["email_port=587",{"_index":671,"title":{},"body":{"index.html":{}}}],["email_user=your_email@example.com",{"_index":672,"title":{},"body":{"index.html":{}}}],["enablecircularcheck:true",{"_index":212,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["endpoints",{"_index":693,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":335,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["enforces",{"_index":623,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":580,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":598,"title":{},"body":{"index.html":{}}}],["entities",{"_index":264,"title":{},"body":{"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":263,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["entity.ts",{"_index":266,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":271,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:13",{"_index":274,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:15",{"_index":269,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:17",{"_index":275,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:24",{"_index":284,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:27",{"_index":279,"title":{},"body":{"entities/User.html":{}}}],["entity.ts:9",{"_index":273,"title":{},"body":{"entities/User.html":{}}}],["entity/user",{"_index":333,"title":{},"body":{"classes/UserBaseDto.html":{},"modules/UsersModule.html":{}}}],["enum",{"_index":281,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["enumerations",{"_index":470,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":556,"title":{},"body":{"index.html":{}}}],["env.dev",{"_index":75,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["env.example",{"_index":660,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":74,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["environment",{"_index":201,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["environmentvariables",{"_index":153,"title":{"classes/EnvironmentVariables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["envvalidator",{"_index":409,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["envvalidator(providedconfig",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["envvalidator(providedconfig:record",{"_index":209,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["error",{"_index":199,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["error(`${errors.length",{"_index":219,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors",{"_index":196,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["errors.length",{"_index":215,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["eslint",{"_index":600,"title":{},"body":{"index.html":{}}}],["etc",{"_index":706,"title":{},"body":{"index.html":{}}}],["event",{"_index":793,"title":{},"body":{"license.html":{}}}],["example",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"index.html":{}}}],["execute",{"_index":711,"title":{},"body":{"index.html":{}}}],["explore",{"_index":686,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":432,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["externals",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":278,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":727,"title":{},"body":{"index.html":{}}}],["feature/your",{"_index":730,"title":{},"body":{"index.html":{}}}],["features",{"_index":516,"title":{},"body":{"index.html":{}}}],["feel",{"_index":741,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":758,"title":{},"body":{"license.html":{}}}],["firstname",{"_index":100,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["firstname:string",{"_index":292,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["fitness",{"_index":789,"title":{},"body":{"license.html":{}}}],["follow",{"_index":726,"title":{},"body":{"index.html":{}}}],["following",{"_index":595,"title":{},"body":{"index.html":{},"license.html":{}}}],["fork",{"_index":437,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["found",{"_index":197,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["framework",{"_index":559,"title":{},"body":{"index.html":{}}}],["free",{"_index":539,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":208,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["functions",{"_index":474,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":775,"title":{},"body":{"license.html":{}}}],["gates",{"_index":624,"title":{},"body":{"index.html":{}}}],["gb",{"_index":546,"title":{},"body":{"index.html":{}}}],["generated",{"_index":691,"title":{},"body":{"index.html":{}}}],["getdata",{"_index":231,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":486,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["git",{"_index":651,"title":{},"body":{"index.html":{}}}],["github",{"_index":586,"title":{},"body":{"index.html":{}}}],["granted",{"_index":751,"title":{},"body":{"license.html":{}}}],["graph",{"_index":810,"title":{},"body":{"modules.html":{}}}],["handling",{"_index":569,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["hereby",{"_index":750,"title":{},"body":{"license.html":{}}}],["high",{"_index":625,"title":{},"body":{"index.html":{}}}],["holders",{"_index":795,"title":{},"body":{"license.html":{}}}],["host",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api",{"_index":688,"title":{},"body":{"index.html":{}}}],["https://github.com/yourusername/task",{"_index":652,"title":{},"body":{"index.html":{}}}],["id",{"_index":223,"title":{},"body":{"classes/IdDto.html":{},"entities/User.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"index.html":{}}}],["id:number",{"_index":291,"title":{},"body":{"entities/User.html":{}}}],["iddto",{"_index":220,"title":{"classes/IdDto.html":{}},"body":{"classes/IdDto.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["identifier",{"_index":387,"title":{},"body":{"injectables/WriteUserService.html":{},"coverage.html":{}}}],["implied",{"_index":785,"title":{},"body":{"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["improvements",{"_index":713,"title":{},"body":{"index.html":{}}}],["include",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["included",{"_index":634,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":762,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["information",{"_index":702,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"injectables/WriteUserService.html":{},"overview.html":{}}}],["insert",{"_index":321,"title":{},"body":{"entities/User.html":{}}}],["install",{"_index":656,"title":{},"body":{"index.html":{}}}],["install3",{"_index":657,"title":{},"body":{"index.html":{}}}],["installed",{"_index":644,"title":{},"body":{"index.html":{}}}],["instance",{"_index":192,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["instead",{"_index":309,"title":{},"body":{"entities/User.html":{}}}],["integrates",{"_index":620,"title":{},"body":{"index.html":{}}}],["integration",{"_index":579,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":564,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":200,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["isemail",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["isenum",{"_index":331,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["isenum(userrole",{"_index":131,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["isglobal",{"_index":71,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["isnan(ttl",{"_index":89,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["isnotemptystring",{"_index":165,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/UserBaseDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotemptystring(validationoption",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispositive",{"_index":226,"title":{},"body":{"classes/IdDto.html":{}}}],["ispositiveinteger",{"_index":163,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ispositiveinteger(validationoption",{"_index":485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isstrongpassword",{"_index":138,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstrongpassword({minlength",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issues",{"_index":613,"title":{},"body":{"index.html":{}}}],["jordach",{"_index":747,"title":{},"body":{"license.html":{},"properties.html":{}}}],["jwt",{"_index":521,"title":{},"body":{"index.html":{}}}],["jwt_secret=your_secret_key",{"_index":669,"title":{},"body":{"index.html":{}}}],["key",{"_index":692,"title":{},"body":{"index.html":{}}}],["kind",{"_index":784,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":101,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["lastname:string",{"_index":293,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":332,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["length(5",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["length(5,25",{"_index":334,"title":{},"body":{"classes/UserBaseDto.html":{}}}],["levels",{"_index":529,"title":{},"body":{"index.html":{}}}],["liability",{"_index":799,"title":{},"body":{"license.html":{}}}],["liable",{"_index":796,"title":{},"body":{"license.html":{}}}],["licence",{"_index":415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":735,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":736,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":763,"title":{},"body":{"license.html":{}}}],["limited",{"_index":786,"title":{},"body":{"license.html":{}}}],["linting",{"_index":597,"title":{},"body":{"index.html":{}}}],["locally",{"_index":643,"title":{},"body":{"index.html":{}}}],["log",{"_index":306,"title":{},"body":{"entities/User.html":{}}}],["logging",{"_index":303,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":519,"title":{},"body":{"index.html":{}}}],["long",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lowercase",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["m",{"_index":732,"title":{},"body":{"index.html":{}}}],["main",{"_index":592,"title":{},"body":{"index.html":{}}}],["maintainability",{"_index":612,"title":{},"body":{"index.html":{}}}],["maintainer",{"_index":742,"title":{},"body":{"index.html":{}}}],["makaya",{"_index":748,"title":{},"body":{"license.html":{},"properties.html":{}}}],["manage",{"_index":497,"title":{},"body":{"index.html":{}}}],["management",{"_index":489,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["manager",{"_index":67,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{},"index.html":{}}}],["managers",{"_index":527,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max:number",{"_index":84,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["measures",{"_index":629,"title":{},"body":{"index.html":{}}}],["member",{"_index":506,"title":{},"body":{"index.html":{}}}],["members",{"_index":528,"title":{},"body":{"index.html":{}}}],["memory",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":788,"title":{},"body":{"license.html":{}}}],["merge",{"_index":766,"title":{},"body":{"license.html":{}}}],["message",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["metadata",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/NeonDatabaseService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["middleware",{"_index":568,"title":{},"body":{"index.html":{}}}],["migration:run5",{"_index":678,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":639,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":140,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlowercase",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minnumbers",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minsymbols",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minuppercase",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":469,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":738,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mobile",{"_index":721,"title":{},"body":{"index.html":{}}}],["moderator",{"_index":135,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{}}}],["modify",{"_index":765,"title":{},"body":{"license.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":544,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":566,"title":{},"body":{"index.html":{}}}],["name",{"_index":237,"title":{},"body":{"injectables/NeonDatabaseService.html":{},"entities/User.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":310,"title":{},"body":{"entities/User.html":{}}}],["neon",{"_index":150,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/NeonDatabaseService.html":{},"index.html":{}}}],["neon(databaseurl",{"_index":245,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["neondatabase/serverless",{"_index":241,"title":{},"body":{"injectables/NeonDatabaseService.html":{},"dependencies.html":{}}}],["neondatabaseservice",{"_index":143,"title":{"injectables/NeonDatabaseService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/NeonDatabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["nestjs",{"_index":492,"title":{},"body":{"index.html":{}}}],["nestjs/cache",{"_index":66,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":64,"title":{},"body":{"modules/ConfigurationModule.html":{},"modules/DatabaseModule.html":{},"injectables/NeonDatabaseService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":69,"title":{},"body":{"modules/ConfigurationModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":369,"title":{},"body":{"controllers/UsersWriteController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":146,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":218,"title":{},"body":{"classes/EnvironmentVariables.html":{},"entities/User.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":558,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":162,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["node_env:string",{"_index":177,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["nodemailer",{"_index":572,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":792,"title":{},"body":{"license.html":{}}}],["notice",{"_index":779,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":513,"title":{},"body":{"index.html":{}}}],["notified",{"_index":533,"title":{},"body":{"index.html":{}}}],["npm",{"_index":647,"title":{},"body":{"index.html":{}}}],["number",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"entities/User.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":188,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["obtain",{"_index":698,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":754,"title":{},"body":{"license.html":{}}}],["offers",{"_index":538,"title":{},"body":{"index.html":{}}}],["only.user.service",{"_index":342,"title":{},"body":{"modules/UsersModule.html":{}}}],["only.user.service.ts",{"_index":249,"title":{},"body":{"injectables/ReadOnlyUserService.html":{},"coverage.html":{}}}],["open",{"_index":734,"title":{},"body":{"index.html":{}}}],["operation",{"_index":304,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":238,"title":{},"body":{"injectables/NeonDatabaseService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["organize",{"_index":444,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["origin",{"_index":733,"title":{},"body":{"index.html":{}}}],["orm",{"_index":563,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":804,"title":{},"body":{"license.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":493,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":426,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":203,"title":{},"body":{"classes/EnvironmentVariables.html":{},"controllers/UsersWriteController.html":{}}}],["parameters",{"_index":236,"title":{},"body":{"injectables/NeonDatabaseService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.cache_max_ttl",{"_index":85,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["parseint(process.env.cache_ttl",{"_index":81,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["particular",{"_index":790,"title":{},"body":{"license.html":{}}}],["pass",{"_index":318,"title":{},"body":{"entities/User.html":{}}}],["passport.js",{"_index":567,"title":{},"body":{"index.html":{}}}],["password",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["password:string",{"_index":296,"title":{},"body":{"entities/User.html":{}}}],["password@@201",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["patch",{"_index":359,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["patch(\"/:id",{"_index":372,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["patch('/:id')@apitags()@apioperation({})@apiresponse({})@apibody",{"_index":355,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["payload",{"_index":395,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["per",{"_index":543,"title":{},"body":{"index.html":{}}}],["perform",{"_index":299,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["permission",{"_index":749,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":508,"title":{},"body":{"index.html":{}}}],["permit",{"_index":773,"title":{},"body":{"license.html":{}}}],["person",{"_index":753,"title":{},"body":{"license.html":{}}}],["persons",{"_index":774,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":576,"title":{},"body":{"index.html":{}}}],["plaintoinstance",{"_index":174,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["plaintoinstance(environmentvariables,providedconfig",{"_index":211,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["please",{"_index":725,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":782,"title":{},"body":{"license.html":{}}}],["post",{"_index":694,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":537,"title":{},"body":{"index.html":{}}}],["potential",{"_index":609,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":648,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":277,"title":{},"body":{"entities/User.html":{},"controllers/UsersWriteController.html":{}}}],["prefix:false",{"_index":298,"title":{},"body":{"entities/User.html":{}}}],["prerequisites",{"_index":642,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":272,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":229,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["process.env.mit_licence_url",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_server",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.swagger_title",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":619,"title":{},"body":{"index.html":{}}}],["project",{"_index":504,"title":{},"body":{"index.html":{}}}],["projects",{"_index":500,"title":{},"body":{"index.html":{}}}],["projects/:id",{"_index":704,"title":{},"body":{"index.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"properties.html":{}}}],["provide",{"_index":717,"title":{},"body":{"index.html":{}}}],["provided",{"_index":186,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["providedconfig",{"_index":204,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["publish",{"_index":767,"title":{},"body":{"license.html":{}}}],["pull",{"_index":590,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":791,"title":{},"body":{"license.html":{}}}],["push",{"_index":589,"title":{},"body":{"index.html":{}}}],["pushed",{"_index":707,"title":{},"body":{"index.html":{}}}],["quality",{"_index":582,"title":{},"body":{"index.html":{}}}],["questions",{"_index":740,"title":{},"body":{"index.html":{}}}],["rates",{"_index":720,"title":{},"body":{"index.html":{}}}],["rbac",{"_index":525,"title":{},"body":{"index.html":{}}}],["read/read",{"_index":341,"title":{},"body":{"modules/UsersModule.html":{}}}],["readme",{"_index":635,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{}}}],["readonlyuserservice",{"_index":247,"title":{"injectables/ReadOnlyUserService.html":{}},"body":{"injectables/ReadOnlyUserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["real",{"_index":510,"title":{},"body":{"index.html":{}}}],["receive",{"_index":534,"title":{},"body":{"index.html":{}}}],["record",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reflect",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":518,"title":{},"body":{"index.html":{}}}],["registry",{"_index":267,"title":{},"body":{"entities/User.html":{}}}],["registrydate",{"_index":250,"title":{"classes/RegistryDate.html":{}},"body":{"classes/RegistryDate.html":{},"entities/User.html":{},"coverage.html":{}}}],["remove",{"_index":323,"title":{},"body":{"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["remove(identifier",{"_index":385,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["remove(identifier:number",{"_index":396,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["removes",{"_index":397,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["reports",{"_index":604,"title":{},"body":{"index.html":{}}}],["repository",{"_index":650,"title":{},"body":{"index.html":{}}}],["request",{"_index":591,"title":{},"body":{"index.html":{}}}],["requests",{"_index":542,"title":{},"body":{"index.html":{}}}],["required",{"_index":700,"title":{},"body":{"index.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["restriction",{"_index":761,"title":{},"body":{"license.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariables.html":{},"injectables/NeonDatabaseService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariables.html":{},"injectables/NeonDatabaseService.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["rights",{"_index":764,"title":{},"body":{"license.html":{}}}],["role",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["roles",{"_index":290,"title":{},"body":{"entities/User.html":{},"classes/UserBaseDto.html":{},"index.html":{}}}],["roles.ts",{"_index":472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["root",{"_index":661,"title":{},"body":{"index.html":{}}}],["run",{"_index":449,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["running",{"_index":677,"title":{},"body":{"index.html":{}}}],["runs",{"_index":594,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":535,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":549,"title":{},"body":{"index.html":{}}}],["scans",{"_index":626,"title":{},"body":{"index.html":{}}}],["schema",{"_index":190,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["script",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["seamless",{"_index":584,"title":{},"body":{"index.html":{}}}],["secret",{"_index":668,"title":{},"body":{"index.html":{}}}],["security",{"_index":627,"title":{},"body":{"index.html":{}}}],["see",{"_index":659,"title":{},"body":{"index.html":{}}}],["sell",{"_index":771,"title":{},"body":{"license.html":{}}}],["sending",{"_index":573,"title":{},"body":{"index.html":{}}}],["serve",{"_index":684,"title":{},"body":{"index.html":{}}}],["server",{"_index":680,"title":{},"body":{"index.html":{}}}],["service",{"_index":319,"title":{},"body":{"entities/User.html":{},"injectables/WriteUserService.html":{}}}],["sessions",{"_index":520,"title":{},"body":{"index.html":{}}}],["set",{"_index":658,"title":{},"body":{"index.html":{}}}],["setdescription(\"api",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlicense(\"mit\",licence",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":675,"title":{},"body":{"index.html":{}}}],["settitle(swaggertitle",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":550,"title":{},"body":{"index.html":{}}}],["setversion(\"1.0",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":780,"title":{},"body":{"license.html":{}}}],["side",{"_index":300,"title":{},"body":{"entities/User.html":{}}}],["sign",{"_index":552,"title":{},"body":{"index.html":{}}}],["skipmissingproperties:false",{"_index":214,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["smells",{"_index":628,"title":{},"body":{"index.html":{}}}],["software",{"_index":756,"title":{},"body":{"license.html":{}}}],["sonarcloud",{"_index":607,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"injectables/ReadOnlyUserService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["special",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sql",{"_index":230,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["sqlite",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["src/.../database",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../swagger",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.const.ts",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":471,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validator.decotrator.ts",{"_index":477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":60,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/decorators/validator.decotrator.ts",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dto/id",{"_index":221,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["src/common/embedded/registry",{"_index":251,"title":{},"body":{"classes/RegistryDate.html":{},"coverage.html":{}}}],["src/configuration/configuration.module.ts",{"_index":61,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["src/configuration/database",{"_index":405,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/env.validation.ts",{"_index":154,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/configuration/env.validation.ts:11",{"_index":171,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:13",{"_index":169,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:15",{"_index":167,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:17",{"_index":168,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:19",{"_index":166,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:23",{"_index":164,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:25",{"_index":170,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/env.validation.ts:9",{"_index":172,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["src/configuration/swagger",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/swagger.const.ts",{"_index":414,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configuration/test",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":144,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/neon",{"_index":227,"title":{},"body":{"injectables/NeonDatabaseService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":93,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":262,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":325,"title":{},"body":{"classes/UserBaseDto.html":{},"coverage.html":{}}}],["src/users/entity/user",{"_index":265,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/read/read",{"_index":248,"title":{},"body":{"injectables/ReadOnlyUserService.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":339,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/write/write.user.controller.ts",{"_index":347,"title":{},"body":{"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["src/users/write/write.user.controller.ts:18",{"_index":356,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["src/users/write/write.user.controller.ts:28",{"_index":353,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["src/users/write/write.user.service.ts",{"_index":380,"title":{},"body":{"injectables/WriteUserService.html":{},"coverage.html":{}}}],["src/users/write/write.user.service.ts:11",{"_index":389,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["src/users/write/write.user.service.ts:15",{"_index":386,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["src/users/write/write.user.service.ts:7",{"_index":384,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["start",{"_index":679,"title":{},"body":{"index.html":{}}}],["start:dev6",{"_index":681,"title":{},"body":{"index.html":{}}}],["started",{"_index":487,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":689,"title":{},"body":{"index.html":{}}}],["statements",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":621,"title":{},"body":{"index.html":{}}}],["status",{"_index":315,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["statuses",{"_index":709,"title":{},"body":{"index.html":{}}}],["steps",{"_index":551,"title":{},"body":{"index.html":{}}}],["storage",{"_index":548,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"injectables/WriteUserService.html":{},"index.html":{}}}],["subject",{"_index":776,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":769,"title":{},"body":{"license.html":{}}}],["subscribed",{"_index":708,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":781,"title":{},"body":{"license.html":{}}}],["successful",{"_index":316,"title":{},"body":{"entities/User.html":{}}}],["such",{"_index":503,"title":{},"body":{"index.html":{}}}],["sufficient",{"_index":632,"title":{},"body":{"index.html":{}}}],["support",{"_index":565,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supports",{"_index":509,"title":{},"body":{"index.html":{}}}],["svg",{"_index":808,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":455,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swaggerconfig",{"_index":413,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerserver",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggertitle",{"_index":417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":494,"title":{},"body":{"index.html":{}}}],["table",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":488,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":498,"title":{},"body":{"index.html":{}}}],["tasks/:id",{"_index":705,"title":{},"body":{"index.html":{}}}],["team",{"_index":505,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":557,"title":{},"body":{"index.html":{}}}],["terser",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["test",{"_index":583,"title":{},"body":{"index.html":{}}}],["testdbconfig",{"_index":147,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testfuture",{"_index":712,"title":{},"body":{"index.html":{}}}],["tests",{"_index":602,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('database_url",{"_index":243,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["this.firstname",{"_index":313,"title":{},"body":{"entities/User.html":{}}}],["this.id",{"_index":312,"title":{},"body":{"entities/User.html":{}}}],["this.sql",{"_index":244,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["this.userwriteservice.remove(id",{"_index":379,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["this.userwriteservice.update(id,updateuserdto",{"_index":376,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["throw",{"_index":217,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["throws",{"_index":198,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["tier",{"_index":637,"title":{},"body":{"index.html":{}}}],["time",{"_index":511,"title":{},"body":{"index.html":{}}}],["token",{"_index":699,"title":{},"body":{"index.html":{}}}],["tort",{"_index":803,"title":{},"body":{"license.html":{}}}],["track",{"_index":718,"title":{},"body":{"index.html":{}}}],["tracks",{"_index":630,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":175,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"dependencies.html":{}}}],["triggers",{"_index":588,"title":{},"body":{"index.html":{}}}],["true",{"_index":72,"title":{},"body":{"modules/ConfigurationModule.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":90,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["ttl:number",{"_index":80,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["type",{"_index":103,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"injectables/NeonDatabaseService.html":{},"classes/RegistryDate.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type(undefined)@ispositive",{"_index":224,"title":{},"body":{"classes/IdDto.html":{}}}],["typeorm",{"_index":260,"title":{},"body":{"classes/RegistryDate.html":{},"entities/User.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/decorator/entity/entity",{"_index":285,"title":{},"body":{"entities/User.html":{}}}],["typeormmodule",{"_index":145,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":345,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmoduleoptions",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":283,"title":{},"body":{"entities/User.html":{}}}],["under",{"_index":737,"title":{},"body":{"index.html":{}}}],["unit",{"_index":601,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":240,"title":{},"body":{"injectables/NeonDatabaseService.html":{}}}],["up",{"_index":553,"title":{},"body":{"index.html":{}}}],["update",{"_index":382,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["update(identifier",{"_index":388,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["update(identifier:number,updateuserdto:updateuserdto",{"_index":393,"title":{},"body":{"injectables/WriteUserService.html":{}}}],["updated",{"_index":314,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["updatedat",{"_index":254,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updatedatecolumn",{"_index":258,"title":{},"body":{"classes/RegistryDate.html":{}}}],["updates",{"_index":394,"title":{},"body":{"injectables/WriteUserService.html":{},"index.html":{}}}],["updateuser",{"_index":350,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuser(@param",{"_index":373,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuser(undefined",{"_index":354,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["updateuserdto",{"_index":261,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{}}}],["updateuserdto:updateuserdto",{"_index":374,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["uploads",{"_index":603,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["use",{"_index":555,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":638,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":77,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["user",{"_index":134,"title":{"entities/User.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"modules/UsersModule.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user.dto",{"_index":364,"title":{},"body":{"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{}}}],["user.dto.ts",{"_index":94,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userbasedto",{"_index":96,"title":{"classes/UserBaseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{},"coverage.html":{}}}],["userbasedto:11",{"_index":129,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:13",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:15",{"_index":136,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userbasedto:8",{"_index":128,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["userid",{"_index":311,"title":{},"body":{"entities/User.html":{}}}],["username",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrole",{"_index":130,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserBaseDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.user",{"_index":297,"title":{},"body":{"entities/User.html":{}}}],["users",{"_index":348,"title":{},"body":{"controllers/UsersWriteController.html":{},"index.html":{}}}],["users/:id",{"_index":701,"title":{},"body":{"index.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":43,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["userswritecontroller",{"_index":340,"title":{"controllers/UsersWriteController.html":{}},"body":{"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"coverage.html":{}}}],["userwriteservice:writeuserservice",{"_index":371,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["uses",{"_index":577,"title":{},"body":{"index.html":{}}}],["using",{"_index":193,"title":{},"body":{"classes/EnvironmentVariables.html":{},"entities/User.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["v16",{"_index":645,"title":{},"body":{"index.html":{}}}],["valid",{"_index":132,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/UpdateUserDto.html":{},"classes/UserBaseDto.html":{}}}],["validate",{"_index":205,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validated",{"_index":206,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatedconfig",{"_index":210,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validates",{"_index":185,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validatesync",{"_index":176,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validatesync(validatedconfig",{"_index":213,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validation",{"_index":195,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/UserBaseDto.html":{},"miscellaneous/functions.html":{}}}],["validationoption",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationoptions",{"_index":482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":62,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["validator",{"_index":139,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EnvironmentVariables.html":{},"classes/IdDto.html":{},"classes/UserBaseDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":473,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":207,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["variables",{"_index":202,"title":{"miscellaneous/variables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vercel",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":814,"title":{},"body":{"properties.html":{}}}],["visiting",{"_index":687,"title":{},"body":{"index.html":{}}}],["vulnerabilities",{"_index":611,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":787,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":783,"title":{},"body":{"license.html":{}}}],["webpack",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["websocket",{"_index":674,"title":{},"body":{"index.html":{}}}],["websocket_port=30014",{"_index":676,"title":{},"body":{"index.html":{}}}],["websockets",{"_index":512,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":724,"title":{},"body":{"index.html":{}}}],["whether",{"_index":800,"title":{},"body":{"license.html":{}}}],["within",{"_index":499,"title":{},"body":{"index.html":{}}}],["without",{"_index":760,"title":{},"body":{"license.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["write.user.service",{"_index":360,"title":{},"body":{"controllers/UsersWriteController.html":{}}}],["write/write.user.controller",{"_index":344,"title":{},"body":{"modules/UsersModule.html":{}}}],["write/write.user.service",{"_index":343,"title":{},"body":{"modules/UsersModule.html":{}}}],["writeuserservice",{"_index":338,"title":{"injectables/WriteUserService.html":{}},"body":{"modules/UsersModule.html":{},"controllers/UsersWriteController.html":{},"injectables/WriteUserService.html":{},"coverage.html":{},"overview.html":{}}}],["yarn",{"_index":646,"title":{},"body":{"index.html":{}}}],["yes",{"_index":484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["your_email@example.com",{"_index":743,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigurationModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { ConfigurationModule } from './configuration/configuration.module';\nimport { DatabaseModule } from './database/database.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n\n@Module({\n  imports: [ConfigurationModule, DatabaseModule, UsersModule, AuthModule,],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigurationModule.html":{"url":"modules/ConfigurationModule.html","title":"module - ConfigurationModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigurationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configuration/configuration.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { CacheModule } from \"@nestjs/cache-manager\";\nimport { APP_PIPE } from \"@nestjs/core\";\n\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      cache: true,\n      envFilePath: '.env.dev'\n    }),\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n\n      useFactory: async () => {\n        const ttl:number = parseInt(process.env.CACHE_TTL)|| 60 * 5\n        const max:number = parseInt(process.env.CACHE_MAX_TTL) || 100;\n\n\n        //DEBUG\n        console.log({ttl,max})\n\n        if (isNaN(ttl) || ttl \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserBaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1}, {message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserBaseDto } from \"./user-base.dto\";\nimport { IsStrongPassword } from \"class-validator\";\n\nexport class CreateUserDto extends UserBaseDto{\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1,\n    },\n    {\n      message: 'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201',\n    }\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nNeonDatabaseService\n\nNeonDatabaseService\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule -->\n\nNeonDatabaseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NeonDatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TestDbConfig } from \"../configuration/test-db.config\";\nimport { NeonDatabaseService } from \"./neon-database.service\";\nimport { ConfigModule } from \"@nestjs/config\";\n\n@Module({\n  imports: [ConfigModule,TypeOrmModule.forRoot(TestDbConfig)],\n  providers: [NeonDatabaseService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration/env.validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                APP_PORT\n                            \n                            \n                                    \n                                DATABASE_URL\n                            \n                            \n                                    \n                                DATASOURCE_DATABASE\n                            \n                            \n                                    \n                                DATASOURCE_HOST\n                            \n                            \n                                    \n                                DATASOURCE_PASSWORD\n                            \n                            \n                                    \n                                DATASOURCE_PORT\n                            \n                            \n                                    \n                                DATASOURCE_USERNAME\n                            \n                            \n                                    \n                                NODE_ENV\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositiveInteger()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        DATASOURCE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env.validation.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyString, IsPositiveInteger } from \"../common/decorators/validator.decotrator\";\nimport { plainToInstance } from \"class-transformer\";\nimport { validateSync } from \"class-validator\";\n\nexport class EnvironmentVariables {\n\n  // String\n  @IsNotEmptyString()\n  NODE_ENV:string\n  @IsNotEmptyString()\n  DATASOURCE_USERNAME:string\n  @IsNotEmptyString()\n  DATASOURCE_PASSWORD:string\n  @IsNotEmptyString()\n  DATASOURCE_DATABASE:string\n  @IsNotEmptyString()\n  DATASOURCE_HOST:string\n  @IsNotEmptyString()\n  DATABASE_URL:string\n\n// Number\n  @IsPositiveInteger()\n  APP_PORT:number\n  @IsPositiveInteger()\n  DATASOURCE_PORT:number\n\n}\n\n/**\n * Validates the provided configuration object against the `EnvironmentVariables` class schema.\n * Converts the provided configuration object to an instance of `EnvironmentVariables` using `plainToInstance`.\n * Validates the converted instance using `validateSync` from class-validator.\n * If any validation errors are found, throws an error with the number of invalid environment variables.\n * @param providedConfig The configuration object to validate\n * @returns The validated configuration object as an instance of `EnvironmentVariables`\n * @throws Error if any environment variable is invalid\n */\nexport function envValidator(providedConfig:Record ){\n  const validatedConfig = plainToInstance(EnvironmentVariables,providedConfig,{\n    enableCircularCheck:true\n  })\n\n  const errors = validateSync(validatedConfig, {\n    skipMissingProperties:false\n  })\n\n  if (errors.length > 0) {\n    throw new Error(`${errors.length} not valid environment variable found`)\n  }\n\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto.html":{"url":"classes/IdDto.html","title":"class - IdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/id-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/id-dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsPositive } from \"class-validator\";\n\nexport class IdDto {\n  @Type(() => Number)\n  @IsPositive()\n  readonly id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NeonDatabaseService.html":{"url":"injectables/NeonDatabaseService.html","title":"injectable - NeonDatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NeonDatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/neon-database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                sql\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/database/neon-database.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/neon-database.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sql\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/database/neon-database.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { neon } from \"@neondatabase/serverless\";\nimport { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n@Injectable()\nexport class NeonDatabaseService {\n  private readonly sql;\n\n  constructor(private configService: ConfigService) {\n    const databaseUrl = this.configService.get('DATABASE_URL');\n    this.sql = neon(databaseUrl);\n  }\n  async getData() {\n    return await this.sql`...`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadOnlyUserService.html":{"url":"injectables/ReadOnlyUserService.html","title":"injectable - ReadOnlyUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReadOnlyUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/read/read-only.user.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ReadOnlyUserService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistryDate.html":{"url":"classes/RegistryDate.html","title":"class - RegistryDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistryDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/embedded/registry-date.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/embedded/registry-date.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDateColumn, UpdateDateColumn } from \"typeorm\";\n\nexport class RegistryDate{\n  @CreateDateColumn()\n  createdAt: Date;\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UserBaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserBaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserBaseDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserBaseDto } from \"./user-base.dto\";\n\nexport class UpdateUserDto extends UserBaseDto{}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entity/user-entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                registry\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column(undefined, {prefix: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRole, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity } from \"typeorm/decorator/entity/Entity\";\nimport { RegistryDate } from \"../../common/embedded/registry-date\";\nimport { AfterInsert, AfterRemove, AfterUpdate, Column, PrimaryGeneratedColumn } from \"typeorm\";\nimport { UserRole } from \"./user-roles\";\n\n@Entity()\nexport class User{\n  @PrimaryGeneratedColumn()\n  id:number\n  @Column()\n  firstName:string\n  @Column()\n  lastName:string\n  @Column({unique:true})\n  email:string\n  @Column()\n  password:string\n\n  @Column({\n    type: \"enum\",\n    enum: UserRole,\n    default: UserRole.USER,\n  })\n  role: UserRole\n\n  @Column(() => RegistryDate,{ prefix:false})\n  registry: Date\n\n\n  @AfterUpdate()\n  afterUpdate() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'UPDATED',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Update Operation:', log);\n  }\n\n  @AfterInsert()\n  afterInsert() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'INSERT',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Insert Operation:', log);\n  }\n\n  @AfterRemove()\n  afterRemove() {\n    // Perform side-effect (e.g., logging the operation details)\n    const log = {\n      date: new Date().toISOString(),  // Get current date instead of using registry if needed\n      userId: this.id,\n      name: `${this.firstName}`,\n      operation: 'REMOVE',\n      status: 'SUCCESSFUL',\n    };\n\n    // Example: log to console or pass to a logging service\n    console.log('Remove Operation:', log);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBaseDto.html":{"url":"classes/UserBaseDto.html","title":"class - UserBaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-base.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 25)@IsNotEmptyString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRole, {message: 'Role must be a valid UserRole (admin, user, moderator)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-base.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyString } from \"../../common/decorators/validator.decotrator\";\nimport { IsEmail, IsEnum, Length } from \"class-validator\";\nimport { UserRole } from \"../entity/user-roles\";\n\nexport class UserBaseDto {\n  @Length(5,25)\n  @IsNotEmptyString()\n  readonly firstName:string\n  @Length(5,25)\n  @IsNotEmptyString()\n  readonly lastName:string\n  @IsEmail()\n  readonly email:string\n  @IsEnum(UserRole, { message: 'Role must be a valid UserRole (admin, user, moderator)' })\n  readonly role: UserRole;  // Enforce enum validation for role\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nReadOnlyUserService\n\nReadOnlyUserService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nReadOnlyUserService->UsersModule\n\n\n\n\n\nWriteUserService\n\nWriteUserService\n\nUsersModule -->\n\nWriteUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReadOnlyUserService\n                        \n                        \n                            WriteUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersWriteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReadOnlyUserService } from './read/read-only.user.service';\nimport { WriteUserService } from './write/write.user.service';\nimport { UsersWriteController } from \"./write/write.user.controller\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"./entity/user-entity\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [ReadOnlyUserService, WriteUserService],\n  controllers:[UsersWriteController]\n\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersWriteController.html":{"url":"controllers/UsersWriteController.html","title":"controller - UsersWriteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersWriteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/write/write.user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(undefined: IdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiTags()@ApiOperation({})@ApiResponse({})\n                \n            \n\n                    \n                        \n                            Defined in src/users/write/write.user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(undefined: IdDto, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@ApiTags()@ApiOperation({})@ApiResponse({})@ApiBody({})\n                \n            \n\n                    \n                        \n                            Defined in src/users/write/write.user.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, } from \"@nestjs/common\";\nimport { WriteUserService } from \"./write.user.service\";\nimport { IdDto } from \"../../common/dto/id-dto\";\nimport { UpdateUserDto } from \"../dto/update-user.dto\";\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from \"@nestjs/swagger\";\n\n@Controller('users')\nexport class UsersWriteController {\n\n  constructor(private readonly userWriteService:WriteUserService) {}\n\n\n  @Patch(\"/:id\")\n  @ApiTags()\n  @ApiOperation({})\n  @ApiResponse({})\n  @ApiBody({})\n  updateUser(@Param() { id }: IdDto, @Body() updateUserDto:UpdateUserDto) {\n    console.log(typeof id);\n    return this.userWriteService.update(id,updateUserDto)\n  }\n\n\n  @Delete(\":id\")\n  @ApiTags()\n  @ApiOperation({})\n  @ApiResponse({})\n  deleteUser(@Param() { id }: IdDto) {\n   return this.userWriteService.remove(id)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WriteUserService.html":{"url":"injectables/WriteUserService.html","title":"injectable - WriteUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WriteUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/write/write.user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(body: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(identifier: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(identifier: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/write/write.user.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable } from \"@nestjs/common\";\nimport { UpdateUserDto } from \"../dto/update-user.dto\";\n\n@Injectable()\nexport class WriteUserService {\n\n  createUser(@Body() body:any) {\n    return `This service create a new user with body ${body}`\n  }\n\n  update(identifier:number,updateUserDto:UpdateUserDto) {\n    return `This service updates user with ID ${identifier} and payload ${updateUserDto} `\n  }\n\n  remove(identifier:number){\n    return `This service removes a user with ID ${identifier}`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/decorators/validator.decotrator.ts\n            \n            function\n            IsNotEmptyString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/validator.decotrator.ts\n            \n            function\n            IsPositiveInteger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/id-dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/embedded/registry-date.ts\n            \n            class\n            RegistryDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/configuration/database-dev.config.ts\n            \n            variable\n            databaseDevConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/env.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/configuration/env.validation.ts\n            \n            function\n            envValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger-config.document.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            licence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            swaggerServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger.const.ts\n            \n            variable\n            swaggerTitle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/test-db.config.ts\n            \n            variable\n            TestDbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/neon-database.service.ts\n            \n            injectable\n            NeonDatabaseService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/user-base.dto.ts\n            \n            class\n            UserBaseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/entity/user-entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/read/read-only.user.service.ts\n            \n            injectable\n            ReadOnlyUserService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/write/write.user.controller.ts\n            \n            controller\n            UsersWriteController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/write/write.user.service.ts\n            \n            injectable\n            WriteUserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @neondatabase/serverless : ^0.9.5\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            cache-manager : 5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            fork-ts-checker-webpack-plugin : ^9.0.2\n        \n            prettier-plugin-organize-imports : ^4.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            run-script-webpack-plugin : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            sqlite3 : ^5.1.7\n        \n            swagger-ui-express : ^5.0.1\n        \n            terser-webpack-plugin : ^5.3.10\n        \n            typeorm : ^0.3.20\n        \n            vercel : ^37.4.2\n        \n            webpack : ^5.94.0\n        \n            webpack-cli : ^5.1.4\n        \n            webpack-node-externals : ^3.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRole   (src/.../user-roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/entity/user-roles.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 MODERATOR\n                            \n                        \n                        \n                            \n                                Value : moderator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            envValidator   (src/.../env.validation.ts)\n                        \n                        \n                            IsNotEmptyString   (src/.../validator.decotrator.ts)\n                        \n                        \n                            IsPositiveInteger   (src/.../validator.decotrator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/configuration/env.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envValidator\n                        \n                    \n                \n            \n            \n                \nenvValidator(providedConfig: Record)\n                \n            \n\n\n\n\n            \n                \n                        Validates the provided configuration object against the EnvironmentVariables class schema.\nConverts the provided configuration object to an instance of EnvironmentVariables using plainToInstance.\nValidates the converted instance using validateSync from class-validator.\nIf any validation errors are found, throws an error with the number of invalid environment variables.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                providedConfig\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The configuration object to validate\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/validator.decotrator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsNotEmptyString\n                        \n                    \n                \n            \n            \n                \nIsNotEmptyString(validationOption?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOption\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IsPositiveInteger\n                        \n                    \n                \n            \n            \n                \nIsPositiveInteger(validationOption?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOption\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTask Management API (Backend NestJS)\nOverview\nThe Task Management API is a backend system built using NestJS that allows users to create, update, and manage tasks within projects. Users can be assigned different roles such as Admin, Project Manager, or Team Member, each with different permissions. The API also supports real-time task updates using WebSockets and email notifications for task assignment and status changes.\n\n\n\nFeatures\n\nUser Authentication: Register, login, and manage user sessions using JWT-based authentication.\nRole-Based Access Control (RBAC): Admins, Project Managers, and Team Members with different access levels.\nTask Management: Create, update, delete, and assign tasks to users within projects.\nProject Management: Organize tasks into projects for better task categorization.\nReal-time Notifications: Get notified of task updates (e.g., status changes) in real-time using WebSockets.\nEmail Notifications: Receive email notifications when tasks are assigned or updated.\nScalable Architecture: Neon (PostgreSQL)\nNeon offers a free PostgreSQL database with 10,000 requests per month, 3 GB of data storage, and free scaling.\n  Setup Steps:\nSign up for Neon.\nCreate a new PostgreSQL database instance.\nGet the connection string from Neon, and use it in your .env file (DATABASE_URL).\n\n\n\n\n\nTechnologies\n\nNestJS: Node.js framework for building efficient, scalable applications.\nTypeORM: ORM for database interactions with support for PostgreSQL or MySQL.\nPassport.js: Authentication middleware for handling JWT-based auth.\nWebSockets: Real-time communication for task updates.\nNodemailer: For sending email notifications.\nDeployment for Backend (NestJS API)\n\nCI/CD Pipeline\nThis project uses a continuous integration and continuous deployment (CI/CD) pipeline to ensure code quality, test coverage, and seamless deployments.\nPipeline Overview\n\nGitHub Actions:\nTriggers on every push or pull request to the main branch.\nRuns the following checks:\nLinting: Ensures code consistency with ESLint.\nUnit Tests: Runs unit tests and uploads coverage reports to\n CodeCov.\n\n\n\n2. SonarCloud: \n\nAnalyzes code for potential bugs, vulnerabilities,     * and maintainability issues.\nBuild & Deploy: Builds the application and deploys it to the production environment.\n\n3. SonarCloud:\n\nIntegrates with GitHub Actions to perform static code analysis.\nEnforces quality gates to ensure high code quality.\nScans for bugs, security vulnerabilities, and code smells.\n\n\nCodeCov:\n\nMeasures and tracks test coverage.\nReports coverage results directly in pull requests to ensure sufficient code coverage.\nA badge is included in the README to display current coverage status.\n\n\nNeon PostgreSQL:\n\nFree-tier PostgreSQL database used for production.\nMigrations are automatically applied after deployment.\n\n\n\nPrerequisites\nTo run this project locally, ensure you have the following installed:\n\nNode.js (v16+)\nPostgreSQL or MySQL database\nYarn or npm (Yarn is preferred)\n\nGetting Started\n1. Clone the Repository\nExample :git clone https://github.com/yourusername/task-management-api.git\ncd task-management-api2. Install Dependencies\nExample :yarn install3. Set Up Environment Variables\nCreate a .env (see .env.example) file in the project root and add the following variables:\nExample :# Database configuration\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_USER=your_db_user\nDATABASE_PASSWORD=your_db_password\nDATABASE_NAME=task_management_db\n\n# JWT Secret\nJWT_SECRET=your_secret_key\n\n# Email configuration (for Nodemailer)\nEMAIL_HOST=smtp.example.com\nEMAIL_PORT=587\nEMAIL_USER=your_email@example.com\nEMAIL_PASSWORD=your_email_password\n\n# WebSocket settings\nWEBSOCKET_PORT=30014. Set Up the Database\nEnsure that you have PostgreSQL or MySQL running, then run migrations to set up the database schema:\nExample :yarn typeorm migration:run5. Start the Server\nExample :yarn start:dev6. Build documentationn\nExample :yarn run docs6. Build documentationn\nExample :yarn serve-docsAPI Documentation\nYou can explore the API documentation by visiting http://localhost:3000/api after starting the server. The documentation is auto-generated using Swagger.\nKey Endpoints\n\nAuthentication\n\nPOST /auth/signup: Register a new user\nPOST /auth/login: Authenticate and obtain a JWT token\n\n\nUsers\n\nGET /users: Get all users (Admin access required)\nGET /users/:id: Get a user by ID\nPATCH /users/:id: Update user information (Admin/Project Manager)\n\n\nProjects\n\nGET /projects: Get all projects\nPOST /projects: Create a new project (Admin/Project Manager)\nPATCH /projects/:id: Update project details (Admin/Project Manager)\n\n\nTasks\n\nGET /tasks: Get all tasks for the current user\nPOST /tasks: Create a new task (Admin/Project Manager)\nPATCH /tasks/:id: Update task status, assignment, etc. (Admin/Project Manager)\n\n\nWebSockets\n\nReal-time updates are pushed to subscribed users when task statuses change or new tasks are assigned.\n\n\nTests\nTo run tests, execute:\nExample :\nyarn testFuture Improvements\n\nFile Attachments: Support file uploads and attachments to tasks.\nAnalytics Dashboard: Provide project managers with a dashboard to track task completion rates, project statuses, etc.\nPush Notifications: Add support for mobile push notifications.\n\nContributing\nContributions are welcome! Please follow these steps:\n\nFork the repository.\n\nCreate a new feature branch (git checkout -b feature/your-feature).\n\nCommit your changes (git commit -m 'Add some feature').\n\nPush to the branch (git push origin feature/your-feature).\n\nOpen a pull request.\n\nLicense\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\nContact\nFor any questions, feel free to contact the project maintainer at your_email@example.com.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Jordach Makaya\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigurationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNeonDatabaseService\n\nNeonDatabaseService\n\nDatabaseModule -->\n\nNeonDatabaseService->DatabaseModule\n\n\n\n\n\nReadOnlyUserService\n\nReadOnlyUserService\n\nUsersModule -->\n\nReadOnlyUserService->UsersModule\n\n\n\n\n\nWriteUserService\n\nWriteUserService\n\nUsersModule -->\n\nWriteUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : MIT\n        \n            Author : Jordach Makaya\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseDevConfig   (src/.../database-dev.config.ts)\n                        \n                        \n                            licence   (src/.../swagger.const.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger-config.document.ts)\n                        \n                        \n                            swaggerServer   (src/.../swagger.const.ts)\n                        \n                        \n                            swaggerTitle   (src/.../swagger.const.ts)\n                        \n                        \n                            TestDbConfig   (src/.../test-db.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configuration/database-dev.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseDevConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService:ConfigService) => ({\n    type: \"postgres\",\n    host: configService.getOrThrow('DATASOURCE_HOST'),\n    port: configService.getOrThrow('DATASOURCE_PORT'),\n    username: configService.getOrThrow('DATASOURCE_USERNAME'),\n    password: configService.getOrThrow('DATASOURCE_PASSWORD'),\n    database: configService.getOrThrow('DATASOURCE_DATABASE'),\n    synchronize: true,\n    logging: true,\n    entities: [],}\n)\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        licence\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MIT_LICENCE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerServer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.SWAGGER_SERVER\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.SWAGGER_TITLE\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger-config.document.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setLicense(\"MIT\",licence)\n  .addServer(swaggerServer)\n  .setTitle(swaggerTitle)\n  .setVersion(\"1.0\")\n  .setDescription(\"API documentation for Task Management app\")\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/configuration/test-db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TestDbConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: \"sqlite\",\n  database: \":memory:\",\n  dropSchema: true,\n  entities: [\"dist/**/*.entity{.ts,.js}\"],\n  synchronize: true,\n  logging: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
